task build {}

configurations {
    supportjni
}

def buildTypesList = ['Debug', 'Release'] as String[]

cmake {
    name 'host'
    buildTypes buildTypesList
    projectDir "$rootDir/native"
}

cmake {
    name 'android'
    buildTypes buildTypesList
    abis 'armeabi-v7a', 'arm64-v8a', 'x86'
    projectDir "$rootDir/native"
    flags "-DHOST_BUILD_DIR=$buildDir/gen/release/host"
}

buildTypesList.each() { buildType ->
    def buildTypeDir = buildType.toLowerCase()

    project."precompileAndroid$buildType".dependsOn "compileToolsHostRelease"
}

task assembleSupportJni(type: Copy, dependsOn: compileAndroidRelease) {
    into "$buildDir/artifacts/lib"
    from("$buildDir/out/release") {
        include "*/libsupportjni.so"
        exclude "host/**"
    }
}

artifacts {
    supportjni file: file("$buildDir/artifacts"), builtBy: assembleSupportJni
}

// Linking "compileAndroid" to "build" will trigger it's build from IntelliJ, we don't want to do that just yet
// build.dependsOn compileAndroid

task clean(type: DefaultTask) {
    doFirst {
        file("$buildDir").deleteDir();
    }
}
