/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef PERFD_COMMON_CAPTURE_INFO_H_
#define PERFD_COMMON_CAPTURE_INFO_H_

#include "proto/cpu.grpc.pb.h"

namespace profiler {

// Represents the metadata of a capture.
struct CaptureInfo {
  // Unique id for the capture as generated by the daemon.
  int64_t trace_id;
  // The timestamp when the last start capture request was processed
  // successfully.
  int64_t start_timestamp;
  // The timestamp when the capture ends.
  // |end_timestamp| being -1 means the capture is in progress.
  int64_t end_timestamp;
  // The last start capture request processed successfully.
  profiler::proto::CpuTraceConfiguration configuration;
  // The status associated with starting the capture.
  profiler::proto::TraceStartStatus start_status;
  // The status associated with stopping the capture.
  profiler::proto::TraceStopStatus stop_status;
};

}  // namespace profiler

#endif  // PERFD_COMMON_CAPTURE_INFO_H_
