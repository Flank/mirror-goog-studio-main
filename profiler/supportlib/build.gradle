/*
 * Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'

group = 'com.android.tools'
archivesBaseName = 'studio-profiler-lib'

File androidJar = file('../../../../prebuilts/sdk/25/android.jar');
if (!androidJar.exists()) {
    // If not there, we're in one of the AOSP release branches where the
    // repo configuration does not include the whole prebuilts repository.
    // Fetch the SDK via $ANDROID_HOME instead.
    File jar = file(System.env.ANDROID_HOME + '/platforms/android-25/android.jar');
    if (jar.exists()) {
        androidJar = jar
    } else {
        throw new RuntimeException("android-25 android.jar not found at " + androidJar.absolutePath)
    }
}

configurations {
    jni
    slim
}

compileJava {
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}

dependencies {
    compileOnly files(androidJar)
    compileOnly project(":agentlib")
    jni project(path: ":native", configuration: "perfa")
    testCompile 'junit:junit:4.12'
}

// turn off strict javadoc
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

jar {
    from configurations.jni
    from project(":agentlib").sourceSets.main.output
}

// Creates a jar that does not include the agentlib and jni for post-O scenario.
// TODO this can be removed once post-O jvmti profiling is fully supported.
task slimJar(dependsOn: 'classes', type: Jar) {
    appendix 'slim'
    // TODO remove perfa dependency when it is included with the agent.
    from configurations.jni
    from sourceSets.main.output
}

artifacts {
   slim slimJar
}
