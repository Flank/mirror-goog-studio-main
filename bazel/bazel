#!/usr/bin/python

"""Runs the bazel executable for the platform, passing args along."""

import os
import subprocess
import sys


def main():
  workspace = find_workspace(os.getcwd())
  if not workspace:
    sys.exit('Must run %s within a workspace.' % os.path.basename(sys.argv[0]))
  if sys.platform.startswith('linux'):
    bazel = os.path.join(
        workspace, 'tools', 'base', 'bazel', 'prebuilts', 'linux', 'bazel-real')
    env = {
        'CC': '/usr/bin/gcc',
        'JAVA_HOME': os.path.join(
            workspace, 'prebuilts', 'studio', 'jdk', 'linux'),
        'TERM': os.environ.get('TERM') or '',
    }
  elif sys.platform == 'darwin':
    bazel = os.path.join(
        workspace, 'tools', 'base', 'bazel', 'prebuilts', 'mac', 'bazel-real')
    env = {
        'CC': '/usr/bin/gcc',
        'JAVA_HOME': os.path.join(
            workspace, 'prebuilts', 'studio', 'jdk', 'mac', 'Contents', 'Home'),
        'TERM': os.environ.get('TERM') or '',
    }
  else:
    sys.exit('Platform %s is not yet supported.' % sys.platform)

  sys.exit(subprocess.call([bazel] + sys.argv[1:], env=env))


def find_workspace(path):
  if os.path.isfile(os.path.join(path, 'WORKSPACE')):
    return path
  else:
    parent = os.path.dirname(path)
    return None if parent == path else find_workspace(parent)


if __name__ == '__main__':
  main()
