/*
 * Copyright (C) 2014 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

Boolean getBooleanValue(String environmentVariable, String projectProperty) {
    String env = System.getenv(environmentVariable)
    if (env != null) {
        return !env.isEmpty();
    }
    String prop = (String) project.properties[projectProperty]
    if (prop != null) {
        return Boolean.valueOf(prop);
    }
    return null
}

ext {
    buildToolsVersion = [System.env.CUSTOM_BUILDTOOLS, project.properties["CUSTOM_BUILDTOOLS"]].find()
    latestCompileSdk = [System.env.CUSTOM_COMPILE_SDK, project.properties["CUSTOM_COMPILE_SDK"]].find() as int

    useJack = getBooleanValue("CUSTOM_JACK", "com.android.build.gradle.integratonTest.useJack")
    jackInProcess = getBooleanValue("USE_JACK_API", "com.android.build.gradle.integratonTest.jackInProcess")

    minifyEnabled = System.env.CUSTOM_MINIFY ||
            Boolean.valueOf((String) project.properties[
                    "com.android.build.gradle.integratonTest.minifyEnabled"])

    plugins.withId('com.android.application') {
        apply plugin: 'devicepool'
    }
    plugins.withId('com.android.library') {
        apply plugin: 'devicepool'
    }
    plugins.withId('com.android.model.application') {
        apply plugin: 'devicepool'
    }
    plugins.withId('com.android.model.library') {
        apply plugin: 'devicepool'
    }
}

plugins.withId("com.android.application") { plugin ->
    if (ext.useJack != null) {
        plugin.extension.defaultConfig.jackOptions.enabled = ext.useJack
    }
    if (ext.jackInProcess != null) {
        plugin.extension.defaultConfig.jackOptions.jackInProcess = ext.jackInProcess
    }
}

