apply from: "../commonHeader.gradle"
buildscript { apply from: "../commonBuildScript.gradle" }

apply plugin: 'com.android.application'

project.ext['android.useDeprecatedNdk'] = true

android {
    compileSdkVersion rootProject.latestCompileSdk
    buildToolsVersion = rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ndk19SupportLibMinSdk
        ndk {
            moduleName "sanangeles"
            cFlags "-DANDROID_NDK -DDISABLE_IMPORTGL"
            ldLibs "GLESv1_CM", "dl", "log"
            stl "stlport_static"
            jobs 4
        }

        // This actual the app version code. Giving ourselves 1,000,000 values
        versionCode = 123
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes.debug.jniDebuggable true
    externalNativeBuild {
        ndkBuild {
            path "Android.mk"
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a'
        }
    }
}

// map for the version code.
ext.versionCodes = ['armeabi-v7a':1, x86:2]

android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.all { output ->
        // set the versionCode on the output.
        println("Customizing " + output)
        output.versionCodeOverride = project.ext.versionCodes.get(
                output.getFilter(com.android.build.OutputFile.ABI)) * 1000000 + android.defaultConfig.versionCode
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation "com.android.support.test:runner:${project.testSupportLibVersion}"
    androidTestImplementation "com.android.support.test:rules:${project.testSupportLibVersion}"
}
