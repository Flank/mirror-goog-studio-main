The Android Gradle Plugin internal implementation classes.
-------------------------------------------------------------------------
ATTENTION REVIEWER: If this needs to be changed, please make sure changes
below are backwards compatible.
-------------------------------------------------------------------------
Sha256 of below classes:
033fb7a40caf1fb3d0c1375aaa681abc862b96ab7e37c1719b2c8943d1f69917
-------------------------------------------------------------------------
com.android.build.gradle.AbstractAppExtension extends com.android.build.gradle.TestedExtension
com.android.build.gradle.AbstractAppExtension.<init>: com.android.build.gradle.AbstractAppExtension (org.gradle.api.Project, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, boolean)
com.android.build.gradle.AbstractAppExtension.addVariant: void (com.android.build.gradle.api.BaseVariant, com.android.build.gradle.internal.scope.VariantScope)
com.android.build.gradle.AbstractAppExtension.getApplicationVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.ApplicationVariant> ()
com.android.build.gradle.AndroidConfig
com.android.build.gradle.AndroidConfig.getAaptOptions: com.android.build.gradle.internal.dsl.AaptOptions ()
com.android.build.gradle.AndroidConfig.getAdbOptions: com.android.build.gradle.internal.dsl.AdbOptions ()
com.android.build.gradle.AndroidConfig.getAidlPackageWhiteList: java.util.Collection<java.lang.String> ()
com.android.build.gradle.AndroidConfig.getBaseFeature: java.lang.Boolean ()
com.android.build.gradle.AndroidConfig.getBootClasspath: java.util.List<java.io.File> ()
com.android.build.gradle.AndroidConfig.getBuildOutputs: java.util.Collection<com.android.build.gradle.api.BaseVariantOutput> ()
com.android.build.gradle.AndroidConfig.getBuildToolsRevision: com.android.repository.Revision ()
com.android.build.gradle.AndroidConfig.getBuildToolsVersion: java.lang.String ()
com.android.build.gradle.AndroidConfig.getBuildTypes: java.util.Collection<com.android.build.gradle.internal.dsl.CoreBuildType> ()
com.android.build.gradle.AndroidConfig.getCompileOptions: com.android.build.gradle.internal.CompileOptions ()
com.android.build.gradle.AndroidConfig.getCompileSdkVersion: java.lang.String ()
com.android.build.gradle.AndroidConfig.getDataBinding: com.android.builder.model.DataBindingOptions ()
com.android.build.gradle.AndroidConfig.getDefaultConfig: com.android.build.gradle.internal.dsl.CoreProductFlavor ()
com.android.build.gradle.AndroidConfig.getDefaultPublishConfig: java.lang.String ()
com.android.build.gradle.AndroidConfig.getDeviceProviders: java.util.List<com.android.builder.testing.api.DeviceProvider> ()
com.android.build.gradle.AndroidConfig.getDexOptions: com.android.build.gradle.internal.dsl.DexOptions ()
com.android.build.gradle.AndroidConfig.getExternalNativeBuild: com.android.build.gradle.internal.model.CoreExternalNativeBuild ()
com.android.build.gradle.AndroidConfig.getFlavorDimensionList: java.util.List<java.lang.String> ()
com.android.build.gradle.AndroidConfig.getGeneratePureSplits: boolean ()
com.android.build.gradle.AndroidConfig.getJacoco: com.android.build.gradle.internal.coverage.JacocoOptions ()
com.android.build.gradle.AndroidConfig.getLibraryRequests: java.util.Collection<com.android.builder.core.LibraryRequest> ()
com.android.build.gradle.AndroidConfig.getLintOptions: com.android.build.gradle.internal.dsl.LintOptions ()
com.android.build.gradle.AndroidConfig.getNdkVersion: java.lang.String ()
com.android.build.gradle.AndroidConfig.getPackagingOptions: com.android.build.gradle.internal.dsl.PackagingOptions ()
com.android.build.gradle.AndroidConfig.getProductFlavors: java.util.Collection<com.android.build.gradle.internal.dsl.CoreProductFlavor> ()
com.android.build.gradle.AndroidConfig.getResourcePrefix: java.lang.String ()
com.android.build.gradle.AndroidConfig.getSigningConfigs: java.util.Collection<com.android.builder.model.SigningConfig> ()
com.android.build.gradle.AndroidConfig.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet> ()
com.android.build.gradle.AndroidConfig.getSplits: com.android.build.gradle.internal.dsl.Splits ()
com.android.build.gradle.AndroidConfig.getTestBuildType: java.lang.String ()
com.android.build.gradle.AndroidConfig.getTestOptions: com.android.build.gradle.internal.dsl.TestOptions ()
com.android.build.gradle.AndroidConfig.getTestServers: java.util.List<com.android.builder.testing.api.TestServer> ()
com.android.build.gradle.AndroidConfig.getTransforms: java.util.List<com.android.build.api.transform.Transform> ()
com.android.build.gradle.AndroidConfig.getTransformsDependencies: java.util.List<java.util.List<java.lang.Object>> ()
com.android.build.gradle.AndroidConfig.getVariantFilter: org.gradle.api.Action<com.android.build.api.variant.VariantFilter> ()
com.android.build.gradle.AppExtension extends com.android.build.gradle.AbstractAppExtension
com.android.build.gradle.AppExtension.<init>: com.android.build.gradle.AppExtension (org.gradle.api.Project, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, boolean)
com.android.build.gradle.AppPlugin extends com.android.build.gradle.BasePlugin
com.android.build.gradle.AppPlugin.<init>: com.android.build.gradle.AppPlugin ()
com.android.build.gradle.AppPlugin.apply: void (java.lang.Object)
com.android.build.gradle.AppPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.AppPluginKt
com.android.build.gradle.AppPluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.BaseExtension implements com.android.build.gradle.AndroidConfig, com.android.build.gradle.internal.dsl.ActionableVariantObjectOperationsExecutor
com.android.build.gradle.BaseExtension.aaptOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.AaptOptions>)
com.android.build.gradle.BaseExtension.adbOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.AdbOptions>)
com.android.build.gradle.BaseExtension.addVariant: void (com.android.build.gradle.api.BaseVariant, com.android.build.gradle.internal.scope.VariantScope)
com.android.build.gradle.BaseExtension.buildFeatures: void (org.gradle.api.Action<com.android.build.api.dsl.BuildFeatures>)
com.android.build.gradle.BaseExtension.buildToolsVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.buildTypes: void (org.gradle.api.Action<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType>>)
com.android.build.gradle.BaseExtension.compileOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.CompileOptions>)
com.android.build.gradle.BaseExtension.compileSdkVersion: void (int)
com.android.build.gradle.BaseExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.composeOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ComposeOptions>)
com.android.build.gradle.BaseExtension.dataBinding: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DataBindingOptions>)
com.android.build.gradle.BaseExtension.defaultConfig: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DefaultConfig>)
com.android.build.gradle.BaseExtension.defaultPublishConfig: void (java.lang.String)
com.android.build.gradle.BaseExtension.deviceProvider: void (com.android.builder.testing.api.DeviceProvider)
com.android.build.gradle.BaseExtension.dexOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DexOptions>)
com.android.build.gradle.BaseExtension.disableWrite: void ()
com.android.build.gradle.BaseExtension.externalNativeBuild: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ExternalNativeBuild>)
com.android.build.gradle.BaseExtension.flavorDimensions: void (java.lang.String[])
com.android.build.gradle.BaseExtension.getAaptOptions: com.android.build.gradle.internal.dsl.AaptOptions ()
com.android.build.gradle.BaseExtension.getAdbExe: java.io.File ()
com.android.build.gradle.BaseExtension.getAdbExecutable: java.io.File ()
com.android.build.gradle.BaseExtension.getAdbOptions: com.android.build.gradle.internal.dsl.AdbOptions ()
com.android.build.gradle.BaseExtension.getAidlPackageWhiteList: java.util.Collection<java.lang.String> ()
com.android.build.gradle.BaseExtension.getBaseFeature: java.lang.Boolean ()
com.android.build.gradle.BaseExtension.getBootClasspath: java.util.List<java.io.File> ()
com.android.build.gradle.BaseExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.BaseExtension.getBuildOutputs: java.util.Collection ()
com.android.build.gradle.BaseExtension.getBuildOutputs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput> ()
com.android.build.gradle.BaseExtension.getBuildToolsRevision: com.android.repository.Revision ()
com.android.build.gradle.BaseExtension.getBuildToolsVersion: java.lang.String ()
com.android.build.gradle.BaseExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.BaseExtension.getCompileOptions: com.android.build.gradle.internal.CompileOptions ()
com.android.build.gradle.BaseExtension.getCompileSdkVersion: java.lang.String ()
com.android.build.gradle.BaseExtension.getComposeOptions: com.android.build.gradle.internal.dsl.ComposeOptions ()
com.android.build.gradle.BaseExtension.getDataBinding: com.android.build.gradle.internal.dsl.DataBindingOptions ()
com.android.build.gradle.BaseExtension.getDataBinding: com.android.builder.model.DataBindingOptions ()
com.android.build.gradle.BaseExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.DefaultConfig ()
com.android.build.gradle.BaseExtension.getDefaultProguardFile: java.io.File (java.lang.String)
com.android.build.gradle.BaseExtension.getDefaultPublishConfig: java.lang.String ()
com.android.build.gradle.BaseExtension.getDeviceProviders: java.util.List<com.android.builder.testing.api.DeviceProvider> ()
com.android.build.gradle.BaseExtension.getDexOptions: com.android.build.gradle.internal.dsl.DexOptions ()
com.android.build.gradle.BaseExtension.getExternalNativeBuild: com.android.build.gradle.internal.dsl.ExternalNativeBuild ()
com.android.build.gradle.BaseExtension.getExternalNativeBuild: com.android.build.gradle.internal.model.CoreExternalNativeBuild ()
com.android.build.gradle.BaseExtension.getFlavorDimensionList: java.util.List<java.lang.String> ()
com.android.build.gradle.BaseExtension.getGeneratePureSplits: boolean ()
com.android.build.gradle.BaseExtension.getJacoco: com.android.build.gradle.internal.coverage.JacocoOptions ()
com.android.build.gradle.BaseExtension.getLibraryRequests: java.util.Collection<com.android.builder.core.LibraryRequest> ()
com.android.build.gradle.BaseExtension.getLintOptions: com.android.build.gradle.internal.dsl.LintOptions ()
com.android.build.gradle.BaseExtension.getNdkDirectory: java.io.File ()
com.android.build.gradle.BaseExtension.getNdkVersion: java.lang.String ()
com.android.build.gradle.BaseExtension.getPackagingOptions: com.android.build.gradle.internal.dsl.PackagingOptions ()
com.android.build.gradle.BaseExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.BaseExtension.getResourcePrefix: java.lang.String ()
com.android.build.gradle.BaseExtension.getSdkDirectory: java.io.File ()
com.android.build.gradle.BaseExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.BaseExtension.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet> ()
com.android.build.gradle.BaseExtension.getSplits: com.android.build.gradle.internal.dsl.Splits ()
com.android.build.gradle.BaseExtension.getTestOptions: com.android.build.gradle.internal.dsl.TestOptions ()
com.android.build.gradle.BaseExtension.getTestServers: java.util.List<com.android.builder.testing.api.TestServer> ()
com.android.build.gradle.BaseExtension.getTransforms: java.util.List<com.android.build.api.transform.Transform> ()
com.android.build.gradle.BaseExtension.getTransformsDependencies: java.util.List<java.util.List<java.lang.Object>> ()
com.android.build.gradle.BaseExtension.getVariantFilter: org.gradle.api.Action<com.android.build.api.variant.VariantFilter> ()
com.android.build.gradle.BaseExtension.getViewBinding: com.android.build.gradle.api.ViewBindingOptions ()
com.android.build.gradle.BaseExtension.jacoco: void (org.gradle.api.Action<com.android.build.gradle.internal.coverage.JacocoOptions>)
com.android.build.gradle.BaseExtension.lintOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.LintOptions>)
com.android.build.gradle.BaseExtension.packagingOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.PackagingOptions>)
com.android.build.gradle.BaseExtension.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor>>)
com.android.build.gradle.BaseExtension.registerArtifactType: void (java.lang.String, boolean, int)
com.android.build.gradle.BaseExtension.registerBuildTypeSourceProvider: void (java.lang.String, com.android.build.gradle.internal.dsl.BuildType, com.android.builder.model.SourceProvider)
com.android.build.gradle.BaseExtension.registerJavaArtifact: void (java.lang.String, com.android.build.gradle.api.BaseVariant, java.lang.String, java.lang.String, java.util.Collection<java.io.File>, java.lang.Iterable<java.lang.String>, org.gradle.api.artifacts.Configuration, java.io.File, java.io.File, com.android.builder.model.SourceProvider)
com.android.build.gradle.BaseExtension.registerMultiFlavorSourceProvider: void (java.lang.String, java.lang.String, com.android.builder.model.SourceProvider)
com.android.build.gradle.BaseExtension.registerProductFlavorSourceProvider: void (java.lang.String, com.android.build.gradle.internal.dsl.ProductFlavor, com.android.builder.model.SourceProvider)
com.android.build.gradle.BaseExtension.registerTransform: void (com.android.build.api.transform.Transform, java.lang.Object[])
com.android.build.gradle.BaseExtension.resourcePrefix: void (java.lang.String)
com.android.build.gradle.BaseExtension.setBuildToolsVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.setCompileSdkVersion: void (int)
com.android.build.gradle.BaseExtension.setCompileSdkVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.setDefaultPublishConfig: void (java.lang.String)
com.android.build.gradle.BaseExtension.setGeneratePureSplits: void (boolean)
com.android.build.gradle.BaseExtension.setNdkVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.setPublishNonDefault: void (boolean)
com.android.build.gradle.BaseExtension.setVariantFilter: void (org.gradle.api.Action<com.android.build.api.variant.VariantFilter>)
com.android.build.gradle.BaseExtension.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig>>)
com.android.build.gradle.BaseExtension.sourceSets: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet>>)
com.android.build.gradle.BaseExtension.splits: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.Splits>)
com.android.build.gradle.BaseExtension.testOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.TestOptions>)
com.android.build.gradle.BaseExtension.testServer: void (com.android.builder.testing.api.TestServer)
com.android.build.gradle.BaseExtension.useLibrary: void (java.lang.String)
com.android.build.gradle.BaseExtension.useLibrary: void (java.lang.String, boolean)
com.android.build.gradle.BaseExtension.variantFilter: void (org.gradle.api.Action<com.android.build.api.variant.VariantFilter>)
com.android.build.gradle.BaseExtension.viewBinding: void (org.gradle.api.Action<com.android.build.gradle.api.ViewBindingOptions>)
com.android.build.gradle.BaseExtension.wrapJavaSourceSet: com.android.builder.model.SourceProvider (org.gradle.api.tasks.SourceSet)
com.android.build.gradle.BasePlugin implements org.gradle.api.Plugin
com.android.build.gradle.BasePlugin.<init>: com.android.build.gradle.BasePlugin ()
com.android.build.gradle.BasePlugin.apply: void (java.lang.Object)
com.android.build.gradle.BasePlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.BasePlugin.getExtension: com.android.build.gradle.BaseExtension ()
com.android.build.gradle.BasePluginKt
com.android.build.gradle.BasePluginKt.getVERSION_CHECK_PLUGIN_ID: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.gradle.DynamicFeaturePlugin extends com.android.build.gradle.BasePlugin
com.android.build.gradle.DynamicFeaturePlugin.<init>: com.android.build.gradle.DynamicFeaturePlugin ()
com.android.build.gradle.DynamicFeaturePlugin.apply: void (java.lang.Object)
com.android.build.gradle.DynamicFeaturePlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.DynamicFeaturePluginKt
com.android.build.gradle.DynamicFeaturePluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.FeatureExtension
com.android.build.gradle.FeatureExtension.<init>: com.android.build.gradle.FeatureExtension ()
com.android.build.gradle.FeaturePlugin implements org.gradle.api.Plugin
com.android.build.gradle.FeaturePlugin.<init>: com.android.build.gradle.FeaturePlugin ()
com.android.build.gradle.FeaturePlugin.apply: void (java.lang.Object)
com.android.build.gradle.FeaturePlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.LibraryExtension extends com.android.build.gradle.TestedExtension implements com.android.build.api.dsl.LibraryExtension, com.android.build.gradle.internal.dsl.ActionableVariantObjectOperationsExecutor
com.android.build.gradle.LibraryExtension.<init>: com.android.build.gradle.LibraryExtension (org.gradle.api.Project, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, com.android.build.gradle.internal.dsl.LibraryExtensionImpl)
com.android.build.gradle.LibraryExtension.addVariant: void (com.android.build.gradle.api.BaseVariant, com.android.build.gradle.internal.scope.VariantScope)
com.android.build.gradle.LibraryExtension.aidlPackageWhiteList: void (java.lang.String[])
com.android.build.gradle.LibraryExtension.buildTypes: void (org.gradle.api.Action<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType>>)
com.android.build.gradle.LibraryExtension.defaultConfig: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DefaultConfig>)
com.android.build.gradle.LibraryExtension.executeVariantOperations: void (java.util.List<? extends com.android.build.gradle.internal.scope.VariantScope>)
com.android.build.gradle.LibraryExtension.executeVariantPropertiesOperations: void (java.util.List<? extends com.android.build.gradle.internal.scope.VariantScope>)
com.android.build.gradle.LibraryExtension.getAidlPackageWhiteList: java.util.Collection<java.lang.String> ()
com.android.build.gradle.LibraryExtension.getBuildTypes: java.util.Collection ()
com.android.build.gradle.LibraryExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.LibraryExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.LibraryExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.CoreProductFlavor ()
com.android.build.gradle.LibraryExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.DefaultConfig ()
com.android.build.gradle.LibraryExtension.getLibraryVariants: org.gradle.api.internal.DefaultDomainObjectSet<com.android.build.gradle.api.LibraryVariant> ()
com.android.build.gradle.LibraryExtension.getProductFlavors: java.util.Collection ()
com.android.build.gradle.LibraryExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.LibraryExtension.getSigningConfigs: java.util.Collection ()
com.android.build.gradle.LibraryExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.LibraryExtension.onVariantProperties: com.android.build.api.variant.GenericVariantFilterBuilder<com.android.build.api.variant.LibraryVariantProperties> ()
com.android.build.gradle.LibraryExtension.onVariantProperties: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.LibraryVariantProperties, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.onVariantProperties: void (org.gradle.api.Action<com.android.build.api.variant.LibraryVariantProperties>)
com.android.build.gradle.LibraryExtension.onVariants: com.android.build.api.variant.GenericVariantFilterBuilder<com.android.build.api.variant.LibraryVariant> ()
com.android.build.gradle.LibraryExtension.onVariants: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.LibraryVariant, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.onVariants: void (org.gradle.api.Action<com.android.build.api.variant.LibraryVariant>)
com.android.build.gradle.LibraryExtension.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor>>)
com.android.build.gradle.LibraryExtension.setAidlPackageWhiteList: void (java.util.Collection<java.lang.String>)
com.android.build.gradle.LibraryExtension.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig>>)
com.android.build.gradle.LibraryPlugin extends com.android.build.gradle.BasePlugin
com.android.build.gradle.LibraryPlugin.<init>: com.android.build.gradle.LibraryPlugin ()
com.android.build.gradle.LibraryPlugin.apply: void (java.lang.Object)
com.android.build.gradle.LibraryPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.LibraryPluginKt
com.android.build.gradle.LibraryPluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.LintPlugin implements org.gradle.api.Plugin
com.android.build.gradle.LintPlugin.<init>: com.android.build.gradle.LintPlugin ()
com.android.build.gradle.LintPlugin.apply: void (java.lang.Object)
com.android.build.gradle.LintPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.ProguardFiles
com.android.build.gradle.ProguardFiles$ProguardFile extends java.lang.Enum
com.android.build.gradle.ProguardFiles$ProguardFile.fileName: Field - class java.lang.String
com.android.build.gradle.ProguardFiles$ProguardFile.valueOf: com.android.build.gradle.ProguardFiles$ProguardFile (java.lang.String)
com.android.build.gradle.ProguardFiles$ProguardFile.values: com.android.build.gradle.ProguardFiles$ProguardFile[] ()
com.android.build.gradle.ProguardFiles.<init>: com.android.build.gradle.ProguardFiles ()
com.android.build.gradle.ProguardFiles.createProguardFile: void (java.lang.String, java.io.File) throws java.io.IOException
com.android.build.gradle.ProguardFiles.getDefaultProguardFile: java.io.File (java.lang.String, org.gradle.api.Project)
com.android.build.gradle.PseudoApiUpdater
com.android.build.gradle.PseudoApiUpdater.<init>: com.android.build.gradle.PseudoApiUpdater ()
com.android.build.gradle.PseudoApiUpdater.main: void (java.lang.String[]) throws java.io.IOException
com.android.build.gradle.ReportingPlugin implements org.gradle.api.Plugin
com.android.build.gradle.ReportingPlugin.<init>: com.android.build.gradle.ReportingPlugin ()
com.android.build.gradle.ReportingPlugin.apply: void (java.lang.Object)
com.android.build.gradle.ReportingPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.ReportingPluginKt
com.android.build.gradle.ReportingPluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.TestAndroidConfig implements com.android.build.gradle.AndroidConfig
com.android.build.gradle.TestAndroidConfig.getTargetProjectPath: java.lang.String ()
com.android.build.gradle.TestAndroidConfig.getTargetVariant: java.lang.String ()
com.android.build.gradle.TestExtension extends com.android.build.gradle.BaseExtension implements com.android.build.gradle.TestAndroidConfig, com.android.build.api.dsl.TestExtension, com.android.build.gradle.internal.dsl.ActionableVariantObjectOperationsExecutor
com.android.build.gradle.TestExtension.<init>: com.android.build.gradle.TestExtension (org.gradle.api.Project, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, com.android.build.gradle.internal.dsl.TestExtensionImpl)
com.android.build.gradle.TestExtension.addVariant: void (com.android.build.gradle.api.BaseVariant, com.android.build.gradle.internal.scope.VariantScope)
com.android.build.gradle.TestExtension.buildTypes: void (org.gradle.api.Action<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType>>)
com.android.build.gradle.TestExtension.defaultConfig: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DefaultConfig>)
com.android.build.gradle.TestExtension.executeVariantOperations: void (java.util.List<? extends com.android.build.gradle.internal.scope.VariantScope>)
com.android.build.gradle.TestExtension.executeVariantPropertiesOperations: void (java.util.List<? extends com.android.build.gradle.internal.scope.VariantScope>)
com.android.build.gradle.TestExtension.getApplicationVariants: org.gradle.api.internal.DefaultDomainObjectSet<com.android.build.gradle.api.ApplicationVariant> ()
com.android.build.gradle.TestExtension.getBuildTypes: java.util.Collection ()
com.android.build.gradle.TestExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.TestExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.TestExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.CoreProductFlavor ()
com.android.build.gradle.TestExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.DefaultConfig ()
com.android.build.gradle.TestExtension.getProductFlavors: java.util.Collection ()
com.android.build.gradle.TestExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.TestExtension.getSigningConfigs: java.util.Collection ()
com.android.build.gradle.TestExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.TestExtension.getTargetProjectPath: java.lang.String ()
com.android.build.gradle.TestExtension.getTargetVariant: java.lang.String ()
com.android.build.gradle.TestExtension.getTestBuildType: java.lang.String ()
com.android.build.gradle.TestExtension.onVariantProperties: com.android.build.api.variant.GenericVariantFilterBuilder<com.android.build.api.variant.TestVariantProperties> ()
com.android.build.gradle.TestExtension.onVariantProperties: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.TestVariantProperties, kotlin.Unit>)
com.android.build.gradle.TestExtension.onVariantProperties: void (org.gradle.api.Action<com.android.build.api.variant.TestVariantProperties>)
com.android.build.gradle.TestExtension.onVariants: com.android.build.api.variant.GenericVariantFilterBuilder<com.android.build.api.variant.TestVariant> ()
com.android.build.gradle.TestExtension.onVariants: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.TestVariant, kotlin.Unit>)
com.android.build.gradle.TestExtension.onVariants: void (org.gradle.api.Action<com.android.build.api.variant.TestVariant>)
com.android.build.gradle.TestExtension.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor>>)
com.android.build.gradle.TestExtension.setTargetProjectPath: void (java.lang.String)
com.android.build.gradle.TestExtension.setTargetVariant: void (java.lang.String)
com.android.build.gradle.TestExtension.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig>>)
com.android.build.gradle.TestExtension.targetProjectPath: void (java.lang.String)
com.android.build.gradle.TestExtension.targetVariant: void (java.lang.String)
com.android.build.gradle.TestPlugin extends com.android.build.gradle.BasePlugin
com.android.build.gradle.TestPlugin.<init>: com.android.build.gradle.TestPlugin ()
com.android.build.gradle.TestPlugin.apply: void (java.lang.Object)
com.android.build.gradle.TestPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.TestPluginKt
com.android.build.gradle.TestPluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.TestedAndroidConfig implements com.android.build.gradle.AndroidConfig
com.android.build.gradle.TestedAndroidConfig.getTestBuildType: java.lang.String ()
com.android.build.gradle.TestedAndroidConfig.getTestVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.TestVariant> ()
com.android.build.gradle.TestedAndroidConfig.getUnitTestVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.UnitTestVariant> ()
com.android.build.gradle.TestedExtension extends com.android.build.gradle.BaseExtension implements com.android.build.gradle.TestedAndroidConfig, com.android.build.api.dsl.TestedExtension
com.android.build.gradle.TestedExtension.<init>: com.android.build.gradle.TestedExtension (org.gradle.api.Project, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, boolean)
com.android.build.gradle.TestedExtension.addTestVariant: void (com.android.build.gradle.api.TestVariant)
com.android.build.gradle.TestedExtension.addUnitTestVariant: void (com.android.build.gradle.api.UnitTestVariant)
com.android.build.gradle.TestedExtension.getMockableAndroidJar: org.gradle.api.file.FileCollection ()
com.android.build.gradle.TestedExtension.getTestBuildType: java.lang.String ()
com.android.build.gradle.TestedExtension.getTestVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.TestVariant> ()
com.android.build.gradle.TestedExtension.getUnitTestVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.UnitTestVariant> ()
com.android.build.gradle.TestedExtension.setTestBuildType: void (java.lang.String)
