The Android Gradle Plugin internal implementation classes.
-------------------------------------------------------------------------
ATTENTION REVIEWER: If this needs to be changed, please make sure changes
below are backwards compatible.
-------------------------------------------------------------------------
Sha256 of below classes:
0b3f2052cf8eece784dc372f92617f1bd06b33523f821d8936e30099fd236529
-------------------------------------------------------------------------
com.android.build.gradle.AbstractAppExtension extends com.android.build.gradle.TestedExtension
com.android.build.gradle.AbstractAppExtension.<init>: com.android.build.gradle.AbstractAppExtension (com.android.build.gradle.internal.api.dsl.DslScope, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, boolean)
com.android.build.gradle.AbstractAppExtension.addVariant: void (com.android.build.gradle.api.BaseVariant, com.android.build.gradle.internal.scope.VariantScope)
com.android.build.gradle.AbstractAppExtension.getApplicationVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.ApplicationVariant> ()
com.android.build.gradle.AndroidConfig
com.android.build.gradle.AndroidConfig.getAaptOptions: com.android.build.gradle.internal.dsl.AaptOptions ()
com.android.build.gradle.AndroidConfig.getAdbOptions: com.android.build.gradle.internal.dsl.AdbOptions ()
com.android.build.gradle.AndroidConfig.getAidlPackageWhiteList: java.util.Collection<java.lang.String> ()
com.android.build.gradle.AndroidConfig.getBaseFeature: java.lang.Boolean ()
com.android.build.gradle.AndroidConfig.getBootClasspath: java.util.List<java.io.File> ()
com.android.build.gradle.AndroidConfig.getBuildOutputs: java.util.Collection<com.android.build.gradle.api.BaseVariantOutput> ()
com.android.build.gradle.AndroidConfig.getBuildToolsRevision: com.android.repository.Revision ()
com.android.build.gradle.AndroidConfig.getBuildToolsVersion: java.lang.String ()
com.android.build.gradle.AndroidConfig.getBuildTypes: java.util.Collection<com.android.build.gradle.internal.dsl.CoreBuildType> ()
com.android.build.gradle.AndroidConfig.getCompileOptions: com.android.build.gradle.internal.CompileOptions ()
com.android.build.gradle.AndroidConfig.getCompileSdkVersion: java.lang.String ()
com.android.build.gradle.AndroidConfig.getDataBinding: com.android.builder.model.DataBindingOptions ()
com.android.build.gradle.AndroidConfig.getDefaultConfig: com.android.build.gradle.internal.dsl.CoreProductFlavor ()
com.android.build.gradle.AndroidConfig.getDefaultPublishConfig: java.lang.String ()
com.android.build.gradle.AndroidConfig.getDeviceProviders: java.util.List<com.android.builder.testing.api.DeviceProvider> ()
com.android.build.gradle.AndroidConfig.getDexOptions: com.android.build.gradle.internal.dsl.DexOptions ()
com.android.build.gradle.AndroidConfig.getExternalNativeBuild: com.android.build.gradle.internal.model.CoreExternalNativeBuild ()
com.android.build.gradle.AndroidConfig.getFlavorDimensionList: java.util.List<java.lang.String> ()
com.android.build.gradle.AndroidConfig.getGeneratePureSplits: boolean ()
com.android.build.gradle.AndroidConfig.getJacoco: com.android.build.gradle.internal.coverage.JacocoOptions ()
com.android.build.gradle.AndroidConfig.getLibraryRequests: java.util.Collection<com.android.builder.core.LibraryRequest> ()
com.android.build.gradle.AndroidConfig.getLintOptions: com.android.build.gradle.internal.dsl.LintOptions ()
com.android.build.gradle.AndroidConfig.getNdkVersion: java.lang.String ()
com.android.build.gradle.AndroidConfig.getPackagingOptions: com.android.build.gradle.internal.dsl.PackagingOptions ()
com.android.build.gradle.AndroidConfig.getProductFlavors: java.util.Collection<com.android.build.gradle.internal.dsl.CoreProductFlavor> ()
com.android.build.gradle.AndroidConfig.getResourcePrefix: java.lang.String ()
com.android.build.gradle.AndroidConfig.getSigningConfigs: java.util.Collection<com.android.builder.model.SigningConfig> ()
com.android.build.gradle.AndroidConfig.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet> ()
com.android.build.gradle.AndroidConfig.getSplits: com.android.build.gradle.internal.dsl.Splits ()
com.android.build.gradle.AndroidConfig.getTestBuildType: java.lang.String ()
com.android.build.gradle.AndroidConfig.getTestOptions: com.android.build.gradle.internal.dsl.TestOptions ()
com.android.build.gradle.AndroidConfig.getTestServers: java.util.List<com.android.builder.testing.api.TestServer> ()
com.android.build.gradle.AndroidConfig.getTransforms: java.util.List<com.android.build.api.transform.Transform> ()
com.android.build.gradle.AndroidConfig.getTransformsDependencies: java.util.List<java.util.List<java.lang.Object>> ()
com.android.build.gradle.AndroidConfig.getVariantFilter: org.gradle.api.Action<com.android.build.api.variant.VariantFilter> ()
com.android.build.gradle.AppExtension extends com.android.build.gradle.AbstractAppExtension
com.android.build.gradle.AppExtension.<init>: com.android.build.gradle.AppExtension (com.android.build.gradle.internal.api.dsl.DslScope, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, boolean)
com.android.build.gradle.AppPlugin extends com.android.build.gradle.BasePlugin
com.android.build.gradle.AppPlugin.<init>: com.android.build.gradle.AppPlugin ()
com.android.build.gradle.AppPlugin.apply: void (java.lang.Object)
com.android.build.gradle.AppPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.AppPluginKt
com.android.build.gradle.AppPluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.AssetPackPlugin implements org.gradle.api.Plugin
com.android.build.gradle.AssetPackPlugin.<init>: com.android.build.gradle.AssetPackPlugin ()
com.android.build.gradle.AssetPackPlugin.apply: void (java.lang.Object)
com.android.build.gradle.AssetPackPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.AssetPackPluginKt
com.android.build.gradle.AssetPackPluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.AssetPackPluginKt.getVERSION_CHECK_PLUGIN_ID: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.gradle.BaseExtension implements com.android.build.gradle.AndroidConfig
com.android.build.gradle.BaseExtension.aaptOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.AaptOptions>)
com.android.build.gradle.BaseExtension.adbOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.AdbOptions>)
com.android.build.gradle.BaseExtension.addVariant: void (com.android.build.gradle.api.BaseVariant, com.android.build.gradle.internal.scope.VariantScope)
com.android.build.gradle.BaseExtension.buildToolsVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.buildTypes: void (org.gradle.api.Action<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType>>)
com.android.build.gradle.BaseExtension.compileOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.CompileOptions>)
com.android.build.gradle.BaseExtension.compileSdkVersion: void (int)
com.android.build.gradle.BaseExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.composeOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ComposeOptions>)
com.android.build.gradle.BaseExtension.dataBinding: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DataBindingOptions>)
com.android.build.gradle.BaseExtension.defaultConfig: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DefaultConfig>)
com.android.build.gradle.BaseExtension.defaultPublishConfig: void (java.lang.String)
com.android.build.gradle.BaseExtension.deviceProvider: void (com.android.builder.testing.api.DeviceProvider)
com.android.build.gradle.BaseExtension.dexOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DexOptions>)
com.android.build.gradle.BaseExtension.disableWrite: void ()
com.android.build.gradle.BaseExtension.externalNativeBuild: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ExternalNativeBuild>)
com.android.build.gradle.BaseExtension.flavorDimensions: void (java.lang.String[])
com.android.build.gradle.BaseExtension.getAaptOptions: com.android.build.gradle.internal.dsl.AaptOptions ()
com.android.build.gradle.BaseExtension.getAdbExe: java.io.File ()
com.android.build.gradle.BaseExtension.getAdbExecutable: java.io.File ()
com.android.build.gradle.BaseExtension.getAdbOptions: com.android.build.gradle.internal.dsl.AdbOptions ()
com.android.build.gradle.BaseExtension.getAidlPackageWhiteList: java.util.Collection<java.lang.String> ()
com.android.build.gradle.BaseExtension.getBaseFeature: java.lang.Boolean ()
com.android.build.gradle.BaseExtension.getBootClasspath: java.util.List<java.io.File> ()
com.android.build.gradle.BaseExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.BaseExtension.getBuildOutputs: java.util.Collection ()
com.android.build.gradle.BaseExtension.getBuildOutputs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput> ()
com.android.build.gradle.BaseExtension.getBuildToolsRevision: com.android.repository.Revision ()
com.android.build.gradle.BaseExtension.getBuildToolsVersion: java.lang.String ()
com.android.build.gradle.BaseExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.BaseExtension.getCompileOptions: com.android.build.gradle.internal.CompileOptions ()
com.android.build.gradle.BaseExtension.getCompileSdkVersion: java.lang.String ()
com.android.build.gradle.BaseExtension.getComposeOptions: com.android.build.gradle.internal.dsl.ComposeOptions ()
com.android.build.gradle.BaseExtension.getDataBinding: com.android.build.gradle.internal.dsl.DataBindingOptions ()
com.android.build.gradle.BaseExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.DefaultConfig ()
com.android.build.gradle.BaseExtension.getDefaultProguardFile: java.io.File (java.lang.String)
com.android.build.gradle.BaseExtension.getDefaultPublishConfig: java.lang.String ()
com.android.build.gradle.BaseExtension.getDeviceProviders: java.util.List<com.android.builder.testing.api.DeviceProvider> ()
com.android.build.gradle.BaseExtension.getDexOptions: com.android.build.gradle.internal.dsl.DexOptions ()
com.android.build.gradle.BaseExtension.getExternalNativeBuild: com.android.build.gradle.internal.dsl.ExternalNativeBuild ()
com.android.build.gradle.BaseExtension.getFlavorDimensionList: java.util.List<java.lang.String> ()
com.android.build.gradle.BaseExtension.getGeneratePureSplits: boolean ()
com.android.build.gradle.BaseExtension.getJacoco: com.android.build.gradle.internal.coverage.JacocoOptions ()
com.android.build.gradle.BaseExtension.getLibraryRequests: java.util.Collection<com.android.builder.core.LibraryRequest> ()
com.android.build.gradle.BaseExtension.getLintOptions: com.android.build.gradle.internal.dsl.LintOptions ()
com.android.build.gradle.BaseExtension.getNdkDirectory: java.io.File ()
com.android.build.gradle.BaseExtension.getNdkVersion: java.lang.String ()
com.android.build.gradle.BaseExtension.getPackagingOptions: com.android.build.gradle.internal.dsl.PackagingOptions ()
com.android.build.gradle.BaseExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.BaseExtension.getResourcePrefix: java.lang.String ()
com.android.build.gradle.BaseExtension.getSdkDirectory: java.io.File ()
com.android.build.gradle.BaseExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.BaseExtension.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet> ()
com.android.build.gradle.BaseExtension.getSplits: com.android.build.gradle.internal.dsl.Splits ()
com.android.build.gradle.BaseExtension.getTestOptions: com.android.build.gradle.internal.dsl.TestOptions ()
com.android.build.gradle.BaseExtension.getTestServers: java.util.List<com.android.builder.testing.api.TestServer> ()
com.android.build.gradle.BaseExtension.getTransforms: java.util.List<com.android.build.api.transform.Transform> ()
com.android.build.gradle.BaseExtension.getTransformsDependencies: java.util.List<java.util.List<java.lang.Object>> ()
com.android.build.gradle.BaseExtension.getVariantFilter: org.gradle.api.Action<com.android.build.api.variant.VariantFilter> ()
com.android.build.gradle.BaseExtension.getViewBinding: com.android.build.gradle.api.ViewBindingOptions ()
com.android.build.gradle.BaseExtension.jacoco: void (org.gradle.api.Action<com.android.build.gradle.internal.coverage.JacocoOptions>)
com.android.build.gradle.BaseExtension.lintOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.LintOptions>)
com.android.build.gradle.BaseExtension.packagingOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.PackagingOptions>)
com.android.build.gradle.BaseExtension.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor>>)
com.android.build.gradle.BaseExtension.registerArtifactType: void (java.lang.String, boolean, int)
com.android.build.gradle.BaseExtension.registerBuildTypeSourceProvider: void (java.lang.String, com.android.build.gradle.internal.dsl.BuildType, com.android.builder.model.SourceProvider)
com.android.build.gradle.BaseExtension.registerJavaArtifact: void (java.lang.String, com.android.build.gradle.api.BaseVariant, java.lang.String, java.lang.String, java.util.Collection<java.io.File>, java.lang.Iterable<java.lang.String>, org.gradle.api.artifacts.Configuration, java.io.File, java.io.File, com.android.builder.model.SourceProvider)
com.android.build.gradle.BaseExtension.registerMultiFlavorSourceProvider: void (java.lang.String, java.lang.String, com.android.builder.model.SourceProvider)
com.android.build.gradle.BaseExtension.registerProductFlavorSourceProvider: void (java.lang.String, com.android.build.gradle.internal.dsl.ProductFlavor, com.android.builder.model.SourceProvider)
com.android.build.gradle.BaseExtension.registerTransform: void (com.android.build.api.transform.Transform, java.lang.Object[])
com.android.build.gradle.BaseExtension.resourcePrefix: void (java.lang.String)
com.android.build.gradle.BaseExtension.setBuildToolsVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.setCompileSdkVersion: void (int)
com.android.build.gradle.BaseExtension.setCompileSdkVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.setDefaultPublishConfig: void (java.lang.String)
com.android.build.gradle.BaseExtension.setGeneratePureSplits: void (boolean)
com.android.build.gradle.BaseExtension.setNdkVersion: void (java.lang.String)
com.android.build.gradle.BaseExtension.setPublishNonDefault: void (boolean)
com.android.build.gradle.BaseExtension.setVariantFilter: void (org.gradle.api.Action<com.android.build.api.variant.VariantFilter>)
com.android.build.gradle.BaseExtension.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig>>)
com.android.build.gradle.BaseExtension.sourceSets: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet>, kotlin.Unit>)
com.android.build.gradle.BaseExtension.sourceSets: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet>>)
com.android.build.gradle.BaseExtension.splits: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.Splits>)
com.android.build.gradle.BaseExtension.testOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.TestOptions>)
com.android.build.gradle.BaseExtension.testServer: void (com.android.builder.testing.api.TestServer)
com.android.build.gradle.BaseExtension.useLibrary: void (java.lang.String)
com.android.build.gradle.BaseExtension.useLibrary: void (java.lang.String, boolean)
com.android.build.gradle.BaseExtension.variantFilter: void (org.gradle.api.Action<com.android.build.api.variant.VariantFilter>)
com.android.build.gradle.BaseExtension.viewBinding: void (org.gradle.api.Action<com.android.build.gradle.api.ViewBindingOptions>)
com.android.build.gradle.BaseExtension.wrapJavaSourceSet: com.android.builder.model.SourceProvider (org.gradle.api.tasks.SourceSet)
com.android.build.gradle.BasePlugin implements org.gradle.api.Plugin
com.android.build.gradle.BasePlugin.<init>: com.android.build.gradle.BasePlugin ()
com.android.build.gradle.BasePlugin.apply: void (java.lang.Object)
com.android.build.gradle.BasePlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.BasePlugin.getExtension: com.android.build.gradle.BaseExtension ()
com.android.build.gradle.BasePluginKt
com.android.build.gradle.BasePluginKt.getVERSION_CHECK_PLUGIN_ID: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.gradle.DynamicFeaturePlugin extends com.android.build.gradle.BasePlugin
com.android.build.gradle.DynamicFeaturePlugin.<init>: com.android.build.gradle.DynamicFeaturePlugin ()
com.android.build.gradle.DynamicFeaturePlugin.apply: void (java.lang.Object)
com.android.build.gradle.DynamicFeaturePlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.DynamicFeaturePluginKt
com.android.build.gradle.DynamicFeaturePluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.FeatureExtension
com.android.build.gradle.FeatureExtension.<init>: com.android.build.gradle.FeatureExtension ()
com.android.build.gradle.FeaturePlugin implements org.gradle.api.Plugin
com.android.build.gradle.FeaturePlugin.<init>: com.android.build.gradle.FeaturePlugin ()
com.android.build.gradle.FeaturePlugin.apply: void (java.lang.Object)
com.android.build.gradle.FeaturePlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.LibraryExtension extends com.android.build.gradle.TestedExtension implements com.android.build.api.dsl.LibraryExtension, com.android.build.gradle.internal.dsl.ActionableVariantObjectOperationsExecutor
com.android.build.gradle.LibraryExtension.<init>: com.android.build.gradle.LibraryExtension (com.android.build.gradle.internal.api.dsl.DslScope, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, com.android.build.gradle.internal.dsl.LibraryExtensionImpl)
com.android.build.gradle.LibraryExtension.addVariant: void (com.android.build.gradle.api.BaseVariant, com.android.build.gradle.internal.scope.VariantScope)
com.android.build.gradle.LibraryExtension.aidlPackageWhiteList: void (java.lang.String[])
com.android.build.gradle.LibraryExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LibraryBuildFeatures, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.buildFeatures: void (org.gradle.api.Action<com.android.build.api.dsl.LibraryBuildFeatures>)
com.android.build.gradle.LibraryExtension.buildTypes: void (org.gradle.api.Action<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType>>)
com.android.build.gradle.LibraryExtension.compileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.CompileOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.compileSdkVersion: void (int)
com.android.build.gradle.LibraryExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.LibraryExtension.defaultConfig: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DefaultConfig>)
com.android.build.gradle.LibraryExtension.executeVariantOperations: void (com.android.build.api.variant.LibraryVariant)
com.android.build.gradle.LibraryExtension.executeVariantOperations: void (com.android.build.api.variant.Variant)
com.android.build.gradle.LibraryExtension.executeVariantPropertiesOperations: void (com.android.build.api.variant.LibraryVariantProperties)
com.android.build.gradle.LibraryExtension.executeVariantPropertiesOperations: void (com.android.build.api.variant.VariantProperties)
com.android.build.gradle.LibraryExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.getAidlPackageWhiteList: java.util.Collection<java.lang.String> ()
com.android.build.gradle.LibraryExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.LibraryExtension.getBuildFeatures: com.android.build.api.dsl.LibraryBuildFeatures ()
com.android.build.gradle.LibraryExtension.getBuildTypes: java.util.Collection ()
com.android.build.gradle.LibraryExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.LibraryExtension.getCompileOptions: com.android.build.api.dsl.CompileOptions ()
com.android.build.gradle.LibraryExtension.getCompileOptions: com.android.build.gradle.internal.CompileOptions ()
com.android.build.gradle.LibraryExtension.getCompileSdkVersion: java.lang.String ()
com.android.build.gradle.LibraryExtension.getDataBinding: com.android.build.gradle.internal.dsl.DataBindingOptions ()
com.android.build.gradle.LibraryExtension.getDataBinding: com.android.builder.model.DataBindingOptions ()
com.android.build.gradle.LibraryExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.LibraryExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.CoreProductFlavor ()
com.android.build.gradle.LibraryExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.DefaultConfig ()
com.android.build.gradle.LibraryExtension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.gradle.LibraryExtension.getExternalNativeBuild: com.android.build.gradle.internal.dsl.ExternalNativeBuild ()
com.android.build.gradle.LibraryExtension.getExternalNativeBuild: com.android.build.gradle.internal.model.CoreExternalNativeBuild ()
com.android.build.gradle.LibraryExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.gradle.LibraryExtension.getJacoco: com.android.build.gradle.internal.coverage.JacocoOptions ()
com.android.build.gradle.LibraryExtension.getLibraryVariants: org.gradle.api.internal.DefaultDomainObjectSet<com.android.build.gradle.api.LibraryVariant> ()
com.android.build.gradle.LibraryExtension.getOnVariantProperties: com.android.build.api.component.GenericFilteredComponentActionRegistrar<com.android.build.api.variant.LibraryVariantProperties> ()
com.android.build.gradle.LibraryExtension.getOnVariants: com.android.build.api.component.GenericFilteredComponentActionRegistrar<com.android.build.api.variant.LibraryVariant> ()
com.android.build.gradle.LibraryExtension.getProductFlavors: java.util.Collection ()
com.android.build.gradle.LibraryExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.LibraryExtension.getSigningConfigs: java.util.Collection ()
com.android.build.gradle.LibraryExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.LibraryExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.gradle.LibraryExtension.getTestOptions: com.android.build.gradle.internal.dsl.TestOptions ()
com.android.build.gradle.LibraryExtension.getViewBinding: com.android.build.gradle.api.ViewBindingOptions ()
com.android.build.gradle.LibraryExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.coverage.JacocoOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.onVariantProperties: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.LibraryVariantProperties, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.onVariantProperties: void (org.gradle.api.Action<com.android.build.api.variant.LibraryVariantProperties>)
com.android.build.gradle.LibraryExtension.onVariants: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.LibraryVariant, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.onVariants: void (org.gradle.api.Action<com.android.build.api.variant.LibraryVariant>)
com.android.build.gradle.LibraryExtension.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor>>)
com.android.build.gradle.LibraryExtension.setAidlPackageWhiteList: void (java.util.Collection<java.lang.String>)
com.android.build.gradle.LibraryExtension.setCompileSdkVersion: void (java.lang.String)
com.android.build.gradle.LibraryExtension.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig>>)
com.android.build.gradle.LibraryExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.TestOptions, kotlin.Unit>)
com.android.build.gradle.LibraryPlugin extends com.android.build.gradle.BasePlugin
com.android.build.gradle.LibraryPlugin.<init>: com.android.build.gradle.LibraryPlugin ()
com.android.build.gradle.LibraryPlugin.apply: void (java.lang.Object)
com.android.build.gradle.LibraryPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.LibraryPluginKt
com.android.build.gradle.LibraryPluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.LintPlugin implements org.gradle.api.Plugin
com.android.build.gradle.LintPlugin.<init>: com.android.build.gradle.LintPlugin ()
com.android.build.gradle.LintPlugin.access$getJavaPluginConvention: org.gradle.api.plugins.JavaPluginConvention (com.android.build.gradle.LintPlugin)
com.android.build.gradle.LintPlugin.access$getLintOptions$p: com.android.build.gradle.internal.dsl.LintOptions (com.android.build.gradle.LintPlugin)
com.android.build.gradle.LintPlugin.access$registerTask: org.gradle.api.tasks.TaskProvider (com.android.build.gradle.LintPlugin, java.lang.String, java.lang.String, org.gradle.api.Project, org.gradle.api.plugins.JavaPluginConvention, org.gradle.api.artifacts.Configuration)
com.android.build.gradle.LintPlugin.access$setLintOptions$p: void (com.android.build.gradle.LintPlugin, com.android.build.gradle.internal.dsl.LintOptions)
com.android.build.gradle.LintPlugin.apply: void (java.lang.Object)
com.android.build.gradle.LintPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.ProguardFiles
com.android.build.gradle.ProguardFiles$ProguardFile extends java.lang.Enum
com.android.build.gradle.ProguardFiles$ProguardFile.fileName: Field - class java.lang.String
com.android.build.gradle.ProguardFiles$ProguardFile.valueOf: com.android.build.gradle.ProguardFiles$ProguardFile (java.lang.String)
com.android.build.gradle.ProguardFiles$ProguardFile.values: com.android.build.gradle.ProguardFiles$ProguardFile[] ()
com.android.build.gradle.ProguardFiles.<init>: com.android.build.gradle.ProguardFiles ()
com.android.build.gradle.ProguardFiles.createProguardFile: void (java.lang.String, java.io.File) throws java.io.IOException
com.android.build.gradle.ProguardFiles.getDefaultProguardFile: java.io.File (java.lang.String, org.gradle.api.file.ProjectLayout)
com.android.build.gradle.PseudoApiUpdater
com.android.build.gradle.PseudoApiUpdater.<init>: com.android.build.gradle.PseudoApiUpdater ()
com.android.build.gradle.PseudoApiUpdater.main: void (java.lang.String[]) throws java.io.IOException
com.android.build.gradle.ReportingPlugin implements org.gradle.api.Plugin
com.android.build.gradle.ReportingPlugin.<init>: com.android.build.gradle.ReportingPlugin ()
com.android.build.gradle.ReportingPlugin.apply: void (java.lang.Object)
com.android.build.gradle.ReportingPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.ReportingPluginKt
com.android.build.gradle.ReportingPluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.TestAndroidConfig implements com.android.build.gradle.AndroidConfig
com.android.build.gradle.TestAndroidConfig.getTargetProjectPath: java.lang.String ()
com.android.build.gradle.TestAndroidConfig.getTargetVariant: java.lang.String ()
com.android.build.gradle.TestExtension extends com.android.build.gradle.BaseExtension implements com.android.build.gradle.TestAndroidConfig, com.android.build.api.dsl.TestExtension, com.android.build.gradle.internal.dsl.ActionableVariantObjectOperationsExecutor
com.android.build.gradle.TestExtension.<init>: com.android.build.gradle.TestExtension (com.android.build.gradle.internal.api.dsl.DslScope, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, com.android.build.gradle.internal.dsl.TestExtensionImpl)
com.android.build.gradle.TestExtension.addVariant: void (com.android.build.gradle.api.BaseVariant, com.android.build.gradle.internal.scope.VariantScope)
com.android.build.gradle.TestExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestBuildFeatures, kotlin.Unit>)
com.android.build.gradle.TestExtension.buildFeatures: void (org.gradle.api.Action<com.android.build.api.dsl.TestBuildFeatures>)
com.android.build.gradle.TestExtension.buildTypes: void (org.gradle.api.Action<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType>>)
com.android.build.gradle.TestExtension.compileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.CompileOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.compileSdkVersion: void (int)
com.android.build.gradle.TestExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.TestExtension.defaultConfig: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DefaultConfig>)
com.android.build.gradle.TestExtension.executeVariantOperations: void (com.android.build.api.variant.TestVariant)
com.android.build.gradle.TestExtension.executeVariantOperations: void (com.android.build.api.variant.Variant)
com.android.build.gradle.TestExtension.executeVariantPropertiesOperations: void (com.android.build.api.variant.TestVariantProperties)
com.android.build.gradle.TestExtension.executeVariantPropertiesOperations: void (com.android.build.api.variant.VariantProperties)
com.android.build.gradle.TestExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.gradle.TestExtension.getApplicationVariants: org.gradle.api.internal.DefaultDomainObjectSet<com.android.build.gradle.api.ApplicationVariant> ()
com.android.build.gradle.TestExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.TestExtension.getBuildFeatures: com.android.build.api.dsl.TestBuildFeatures ()
com.android.build.gradle.TestExtension.getBuildTypes: java.util.Collection ()
com.android.build.gradle.TestExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.TestExtension.getCompileOptions: com.android.build.api.dsl.CompileOptions ()
com.android.build.gradle.TestExtension.getCompileOptions: com.android.build.gradle.internal.CompileOptions ()
com.android.build.gradle.TestExtension.getCompileSdkVersion: java.lang.String ()
com.android.build.gradle.TestExtension.getDataBinding: com.android.build.gradle.internal.dsl.DataBindingOptions ()
com.android.build.gradle.TestExtension.getDataBinding: com.android.builder.model.DataBindingOptions ()
com.android.build.gradle.TestExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.TestExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.CoreProductFlavor ()
com.android.build.gradle.TestExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.DefaultConfig ()
com.android.build.gradle.TestExtension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.gradle.TestExtension.getExternalNativeBuild: com.android.build.gradle.internal.dsl.ExternalNativeBuild ()
com.android.build.gradle.TestExtension.getExternalNativeBuild: com.android.build.gradle.internal.model.CoreExternalNativeBuild ()
com.android.build.gradle.TestExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.gradle.TestExtension.getJacoco: com.android.build.gradle.internal.coverage.JacocoOptions ()
com.android.build.gradle.TestExtension.getOnVariantProperties: com.android.build.api.component.GenericFilteredComponentActionRegistrar<com.android.build.api.variant.TestVariantProperties> ()
com.android.build.gradle.TestExtension.getOnVariants: com.android.build.api.component.GenericFilteredComponentActionRegistrar<com.android.build.api.variant.TestVariant> ()
com.android.build.gradle.TestExtension.getProductFlavors: java.util.Collection ()
com.android.build.gradle.TestExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.TestExtension.getSigningConfigs: java.util.Collection ()
com.android.build.gradle.TestExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.TestExtension.getTargetProjectPath: java.lang.String ()
com.android.build.gradle.TestExtension.getTargetVariant: java.lang.String ()
com.android.build.gradle.TestExtension.getTestBuildType: java.lang.String ()
com.android.build.gradle.TestExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.gradle.TestExtension.getTestOptions: com.android.build.gradle.internal.dsl.TestOptions ()
com.android.build.gradle.TestExtension.getViewBinding: com.android.build.gradle.api.ViewBindingOptions ()
com.android.build.gradle.TestExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.coverage.JacocoOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.onVariantProperties: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.TestVariantProperties, kotlin.Unit>)
com.android.build.gradle.TestExtension.onVariantProperties: void (org.gradle.api.Action<com.android.build.api.variant.TestVariantProperties>)
com.android.build.gradle.TestExtension.onVariants: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.TestVariant, kotlin.Unit>)
com.android.build.gradle.TestExtension.onVariants: void (org.gradle.api.Action<com.android.build.api.variant.TestVariant>)
com.android.build.gradle.TestExtension.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor>>)
com.android.build.gradle.TestExtension.setCompileSdkVersion: void (java.lang.String)
com.android.build.gradle.TestExtension.setTargetProjectPath: void (java.lang.String)
com.android.build.gradle.TestExtension.setTargetVariant: void (java.lang.String)
com.android.build.gradle.TestExtension.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig>>)
com.android.build.gradle.TestExtension.targetProjectPath: void (java.lang.String)
com.android.build.gradle.TestExtension.targetVariant: void (java.lang.String)
com.android.build.gradle.TestExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.TestOptions, kotlin.Unit>)
com.android.build.gradle.TestPlugin extends com.android.build.gradle.BasePlugin
com.android.build.gradle.TestPlugin.<init>: com.android.build.gradle.TestPlugin ()
com.android.build.gradle.TestPlugin.apply: void (java.lang.Object)
com.android.build.gradle.TestPlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.TestPluginKt
com.android.build.gradle.TestPluginKt.access$getINTERNAL_PLUGIN_ID$p: java.util.Map ()
com.android.build.gradle.TestedAndroidConfig implements com.android.build.gradle.AndroidConfig
com.android.build.gradle.TestedAndroidConfig.getTestBuildType: java.lang.String ()
com.android.build.gradle.TestedAndroidConfig.getTestVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.TestVariant> ()
com.android.build.gradle.TestedAndroidConfig.getUnitTestVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.UnitTestVariant> ()
com.android.build.gradle.TestedExtension extends com.android.build.gradle.BaseExtension implements com.android.build.gradle.TestedAndroidConfig, com.android.build.api.dsl.TestedExtension
com.android.build.gradle.TestedExtension.<init>: com.android.build.gradle.TestedExtension (com.android.build.gradle.internal.api.dsl.DslScope, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, boolean)
com.android.build.gradle.TestedExtension.addTestVariant: void (com.android.build.gradle.api.TestVariant)
com.android.build.gradle.TestedExtension.addUnitTestVariant: void (com.android.build.gradle.api.UnitTestVariant)
com.android.build.gradle.TestedExtension.getMockableAndroidJar: org.gradle.api.file.FileCollection ()
com.android.build.gradle.TestedExtension.getTestBuildType: java.lang.String ()
com.android.build.gradle.TestedExtension.getTestVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.TestVariant> ()
com.android.build.gradle.TestedExtension.getUnitTestVariants: org.gradle.api.DomainObjectSet<com.android.build.gradle.api.UnitTestVariant> ()
com.android.build.gradle.TestedExtension.setTestBuildType: void (java.lang.String)
com.android.build.gradle.api.AndroidArtifactVariant implements com.android.build.gradle.api.VersionedVariant
com.android.build.gradle.api.AndroidArtifactVariant.getCompatibleScreens: java.util.Set<java.lang.String> ()
com.android.build.gradle.api.AndroidArtifactVariant.getSigningConfig: com.android.builder.model.SigningConfig ()
com.android.build.gradle.api.AndroidArtifactVariant.isSigningReady: boolean ()
com.android.build.gradle.api.AndroidBasePlugin implements org.gradle.api.Plugin
com.android.build.gradle.api.AndroidBasePlugin.<init>: com.android.build.gradle.api.AndroidBasePlugin ()
com.android.build.gradle.api.AndroidBasePlugin.apply: void (java.lang.Object)
com.android.build.gradle.api.AndroidBasePlugin.apply: void (org.gradle.api.Project)
com.android.build.gradle.api.AndroidSourceDirectorySet implements org.gradle.api.tasks.util.PatternFilterable
com.android.build.gradle.api.AndroidSourceDirectorySet.getBuildableArtifact: org.gradle.api.file.FileCollection ()
com.android.build.gradle.api.AndroidSourceDirectorySet.getFilter: org.gradle.api.tasks.util.PatternFilterable ()
com.android.build.gradle.api.AndroidSourceDirectorySet.getName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceDirectorySet.getSourceDirectoryTrees: java.util.List<org.gradle.api.file.ConfigurableFileTree> ()
com.android.build.gradle.api.AndroidSourceDirectorySet.getSourceFiles: org.gradle.api.file.FileTree ()
com.android.build.gradle.api.AndroidSourceDirectorySet.getSrcDirs: java.util.Set<java.io.File> ()
com.android.build.gradle.api.AndroidSourceDirectorySet.setSrcDirs: com.android.build.gradle.api.AndroidSourceDirectorySet (java.lang.Iterable<?>)
com.android.build.gradle.api.AndroidSourceDirectorySet.srcDir: com.android.build.gradle.api.AndroidSourceDirectorySet (java.lang.Object)
com.android.build.gradle.api.AndroidSourceDirectorySet.srcDirs: com.android.build.gradle.api.AndroidSourceDirectorySet (java.lang.Object[])
com.android.build.gradle.api.AndroidSourceFile
com.android.build.gradle.api.AndroidSourceFile.getName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceFile.getSrcFile: java.io.File ()
com.android.build.gradle.api.AndroidSourceFile.srcFile: com.android.build.gradle.api.AndroidSourceFile (java.lang.Object)
com.android.build.gradle.api.AndroidSourceSet
com.android.build.gradle.api.AndroidSourceSet.aidl: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AndroidSourceSet.assets: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AndroidSourceSet.getAidl: com.android.build.gradle.api.AndroidSourceDirectorySet ()
com.android.build.gradle.api.AndroidSourceSet.getAnnotationProcessorConfigurationName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.getApiConfigurationName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.getAssets: com.android.build.gradle.api.AndroidSourceDirectorySet ()
com.android.build.gradle.api.AndroidSourceSet.getCompileConfigurationName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.getCompileOnlyConfigurationName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.getImplementationConfigurationName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.getJava: com.android.build.gradle.api.AndroidSourceDirectorySet ()
com.android.build.gradle.api.AndroidSourceSet.getJni: com.android.build.gradle.api.AndroidSourceDirectorySet ()
com.android.build.gradle.api.AndroidSourceSet.getJniLibs: com.android.build.gradle.api.AndroidSourceDirectorySet ()
com.android.build.gradle.api.AndroidSourceSet.getManifest: com.android.build.gradle.api.AndroidSourceFile ()
com.android.build.gradle.api.AndroidSourceSet.getName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.getPackageConfigurationName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.getProvidedConfigurationName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.getRenderscript: com.android.build.gradle.api.AndroidSourceDirectorySet ()
com.android.build.gradle.api.AndroidSourceSet.getRes: com.android.build.gradle.api.AndroidSourceDirectorySet ()
com.android.build.gradle.api.AndroidSourceSet.getResources: com.android.build.gradle.api.AndroidSourceDirectorySet ()
com.android.build.gradle.api.AndroidSourceSet.getRuntimeOnlyConfigurationName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.getShaders: com.android.build.gradle.api.AndroidSourceDirectorySet ()
com.android.build.gradle.api.AndroidSourceSet.getWearAppConfigurationName: java.lang.String ()
com.android.build.gradle.api.AndroidSourceSet.java: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AndroidSourceSet.jni: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AndroidSourceSet.jniLibs: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AndroidSourceSet.manifest: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AndroidSourceSet.renderscript: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AndroidSourceSet.res: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AndroidSourceSet.resources: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AndroidSourceSet.setRoot: com.android.build.gradle.api.AndroidSourceSet (java.lang.String)
com.android.build.gradle.api.AndroidSourceSet.shaders: com.android.build.gradle.api.AndroidSourceSet (groovy.lang.Closure)
com.android.build.gradle.api.AnnotationProcessorOptions
com.android.build.gradle.api.AnnotationProcessorOptions.getArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.gradle.api.AnnotationProcessorOptions.getClassNames: java.util.List<java.lang.String> ()
com.android.build.gradle.api.AnnotationProcessorOptions.getCompilerArgumentProviders: java.util.List<org.gradle.process.CommandLineArgumentProvider> ()
com.android.build.gradle.api.AnnotationProcessorOptions.getIncludeCompileClasspath: java.lang.Boolean ()
com.android.build.gradle.api.ApkOutputFile implements com.android.build.OutputFile, java.io.Serializable
com.android.build.gradle.api.ApkOutputFile.<init>: com.android.build.gradle.api.ApkOutputFile (com.android.build.VariantOutput$OutputType, java.util.Collection<com.android.build.FilterData>, java.util.concurrent.Callable<java.io.File>, int)
com.android.build.gradle.api.ApkOutputFile.getFilter: java.lang.String (java.lang.String)
com.android.build.gradle.api.ApkOutputFile.getFilterByType: java.lang.String (com.android.build.VariantOutput$FilterType)
com.android.build.gradle.api.ApkOutputFile.getFilterTypes: java.util.Collection<java.lang.String> ()
com.android.build.gradle.api.ApkOutputFile.getFilters: java.util.Collection<com.android.build.FilterData> ()
com.android.build.gradle.api.ApkOutputFile.getMainOutputFile: com.android.build.OutputFile ()
com.android.build.gradle.api.ApkOutputFile.getOutputFile: java.io.File ()
com.android.build.gradle.api.ApkOutputFile.getOutputType: java.lang.String ()
com.android.build.gradle.api.ApkOutputFile.getOutputs: java.util.Collection<? extends com.android.build.OutputFile> ()
com.android.build.gradle.api.ApkOutputFile.getType: com.android.build.VariantOutput$OutputType ()
com.android.build.gradle.api.ApkOutputFile.getVersionCode: int ()
com.android.build.gradle.api.ApkOutputFile.toString: java.lang.String ()
com.android.build.gradle.api.ApkVariant implements com.android.build.gradle.api.BaseVariant, com.android.build.gradle.api.InstallableVariant, com.android.build.gradle.api.AndroidArtifactVariant
com.android.build.gradle.api.ApkVariant.getDex: java.lang.Object ()
com.android.build.gradle.api.ApkVariant.getPackageApplication: com.android.build.gradle.tasks.PackageAndroidArtifact ()
com.android.build.gradle.api.ApkVariant.getPackageApplicationProvider: org.gradle.api.tasks.TaskProvider<com.android.build.gradle.tasks.PackageAndroidArtifact> ()
com.android.build.gradle.api.ApkVariantOutput implements com.android.build.gradle.api.BaseVariantOutput
com.android.build.gradle.api.ApkVariantOutput.getFilter: java.lang.String (com.android.build.VariantOutput$FilterType)
com.android.build.gradle.api.ApkVariantOutput.getOutputFileName: java.lang.String ()
com.android.build.gradle.api.ApkVariantOutput.getPackageApplication: com.android.build.gradle.tasks.PackageAndroidArtifact ()
com.android.build.gradle.api.ApkVariantOutput.getVersionCodeOverride: int ()
com.android.build.gradle.api.ApkVariantOutput.getVersionNameOverride: java.lang.String ()
com.android.build.gradle.api.ApkVariantOutput.getZipAlign: org.gradle.api.Task ()
com.android.build.gradle.api.ApkVariantOutput.setOutputFileName: void (java.lang.String)
com.android.build.gradle.api.ApkVariantOutput.setVersionCodeOverride: void (int)
com.android.build.gradle.api.ApkVariantOutput.setVersionNameOverride: void (java.lang.String)
com.android.build.gradle.api.ApplicationVariant implements com.android.build.gradle.api.ApkVariant, com.android.build.gradle.internal.api.TestedVariant
com.android.build.gradle.api.BaseVariant
com.android.build.gradle.api.BaseVariant.addJavaSourceFoldersToModel: void (java.io.File[])
com.android.build.gradle.api.BaseVariant.addJavaSourceFoldersToModel: void (java.util.Collection<java.io.File>)
com.android.build.gradle.api.BaseVariant.buildConfigField: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.api.BaseVariant.getAidlCompile: com.android.build.gradle.tasks.AidlCompile ()
com.android.build.gradle.api.BaseVariant.getAidlCompileProvider: org.gradle.api.tasks.TaskProvider<com.android.build.gradle.tasks.AidlCompile> ()
com.android.build.gradle.api.BaseVariant.getAllRawAndroidResources: org.gradle.api.file.FileCollection ()
com.android.build.gradle.api.BaseVariant.getAnnotationProcessorConfiguration: org.gradle.api.artifacts.Configuration ()
com.android.build.gradle.api.BaseVariant.getApplicationId: java.lang.String ()
com.android.build.gradle.api.BaseVariant.getApplicationIdTextResource: org.gradle.api.resources.TextResource ()
com.android.build.gradle.api.BaseVariant.getAssemble: org.gradle.api.Task ()
com.android.build.gradle.api.BaseVariant.getAssembleProvider: org.gradle.api.tasks.TaskProvider<org.gradle.api.Task> ()
com.android.build.gradle.api.BaseVariant.getBaseName: java.lang.String ()
com.android.build.gradle.api.BaseVariant.getBuildType: com.android.builder.model.BuildType ()
com.android.build.gradle.api.BaseVariant.getCheckManifest: org.gradle.api.Task ()
com.android.build.gradle.api.BaseVariant.getCheckManifestProvider: org.gradle.api.tasks.TaskProvider<org.gradle.api.Task> ()
com.android.build.gradle.api.BaseVariant.getCompileClasspath: org.gradle.api.file.FileCollection (java.lang.Object)
com.android.build.gradle.api.BaseVariant.getCompileClasspathArtifacts: org.gradle.api.artifacts.ArtifactCollection (java.lang.Object)
com.android.build.gradle.api.BaseVariant.getCompileConfiguration: org.gradle.api.artifacts.Configuration ()
com.android.build.gradle.api.BaseVariant.getDescription: java.lang.String ()
com.android.build.gradle.api.BaseVariant.getDirName: java.lang.String ()
com.android.build.gradle.api.BaseVariant.getExternalNativeBuildProviders: java.util.Collection<org.gradle.api.tasks.TaskProvider<com.android.build.gradle.tasks.ExternalNativeBuildTask>> ()
com.android.build.gradle.api.BaseVariant.getExternalNativeBuildTasks: java.util.Collection<com.android.build.gradle.tasks.ExternalNativeBuildTask> ()
com.android.build.gradle.api.BaseVariant.getFlavorName: java.lang.String ()
com.android.build.gradle.api.BaseVariant.getGenerateBuildConfig: com.android.build.gradle.tasks.GenerateBuildConfig ()
com.android.build.gradle.api.BaseVariant.getGenerateBuildConfigProvider: org.gradle.api.tasks.TaskProvider<com.android.build.gradle.tasks.GenerateBuildConfig> ()
com.android.build.gradle.api.BaseVariant.getJavaCompile: org.gradle.api.tasks.compile.JavaCompile ()
com.android.build.gradle.api.BaseVariant.getJavaCompileOptions: com.android.build.gradle.api.JavaCompileOptions ()
com.android.build.gradle.api.BaseVariant.getJavaCompileProvider: org.gradle.api.tasks.TaskProvider<org.gradle.api.tasks.compile.JavaCompile> ()
com.android.build.gradle.api.BaseVariant.getJavaCompiler: org.gradle.api.Task ()
com.android.build.gradle.api.BaseVariant.getMappingFile: java.io.File ()
com.android.build.gradle.api.BaseVariant.getMappingFileProvider: org.gradle.api.provider.Provider<org.gradle.api.file.FileCollection> ()
com.android.build.gradle.api.BaseVariant.getMergeAssets: com.android.build.gradle.tasks.MergeSourceSetFolders ()
com.android.build.gradle.api.BaseVariant.getMergeAssetsProvider: org.gradle.api.tasks.TaskProvider<com.android.build.gradle.tasks.MergeSourceSetFolders> ()
com.android.build.gradle.api.BaseVariant.getMergeResources: com.android.build.gradle.tasks.MergeResources ()
com.android.build.gradle.api.BaseVariant.getMergeResourcesProvider: org.gradle.api.tasks.TaskProvider<com.android.build.gradle.tasks.MergeResources> ()
com.android.build.gradle.api.BaseVariant.getMergedFlavor: com.android.builder.model.ProductFlavor ()
com.android.build.gradle.api.BaseVariant.getName: java.lang.String ()
com.android.build.gradle.api.BaseVariant.getObfuscation: org.gradle.api.Task ()
com.android.build.gradle.api.BaseVariant.getOutputs: org.gradle.api.DomainObjectCollection<com.android.build.gradle.api.BaseVariantOutput> ()
com.android.build.gradle.api.BaseVariant.getOutputsAreSigned: boolean ()
com.android.build.gradle.api.BaseVariant.getPreBuild: org.gradle.api.Task ()
com.android.build.gradle.api.BaseVariant.getPreBuildProvider: org.gradle.api.tasks.TaskProvider<org.gradle.api.Task> ()
com.android.build.gradle.api.BaseVariant.getProcessJavaResources: org.gradle.api.tasks.AbstractCopyTask ()
com.android.build.gradle.api.BaseVariant.getProcessJavaResourcesProvider: org.gradle.api.tasks.TaskProvider<org.gradle.api.tasks.AbstractCopyTask> ()
com.android.build.gradle.api.BaseVariant.getProductFlavors: java.util.List<com.android.builder.model.ProductFlavor> ()
com.android.build.gradle.api.BaseVariant.getRenderscriptCompile: com.android.build.gradle.tasks.RenderscriptCompile ()
com.android.build.gradle.api.BaseVariant.getRenderscriptCompileProvider: org.gradle.api.tasks.TaskProvider<com.android.build.gradle.tasks.RenderscriptCompile> ()
com.android.build.gradle.api.BaseVariant.getRuntimeConfiguration: org.gradle.api.artifacts.Configuration ()
com.android.build.gradle.api.BaseVariant.getSourceFolders: java.util.List<org.gradle.api.file.ConfigurableFileTree> (com.android.build.gradle.api.SourceKind)
com.android.build.gradle.api.BaseVariant.getSourceSets: java.util.List<com.android.builder.model.SourceProvider> ()
com.android.build.gradle.api.BaseVariant.missingDimensionStrategy: void (java.lang.String, java.lang.String)
com.android.build.gradle.api.BaseVariant.missingDimensionStrategy: void (java.lang.String, java.lang.String[])
com.android.build.gradle.api.BaseVariant.missingDimensionStrategy: void (java.lang.String, java.util.List<java.lang.String>)
com.android.build.gradle.api.BaseVariant.register: void (org.gradle.api.Task)
com.android.build.gradle.api.BaseVariant.registerExternalAptJavaOutput: void (org.gradle.api.file.ConfigurableFileTree)
com.android.build.gradle.api.BaseVariant.registerGeneratedBytecode: java.lang.Object (org.gradle.api.file.FileCollection)
com.android.build.gradle.api.BaseVariant.registerGeneratedResFolders: void (org.gradle.api.file.FileCollection)
com.android.build.gradle.api.BaseVariant.registerJavaGeneratingTask: void (org.gradle.api.Task, java.io.File[])
com.android.build.gradle.api.BaseVariant.registerJavaGeneratingTask: void (org.gradle.api.Task, java.util.Collection<java.io.File>)
com.android.build.gradle.api.BaseVariant.registerPostJavacGeneratedBytecode: void (org.gradle.api.file.FileCollection)
com.android.build.gradle.api.BaseVariant.registerPreJavacGeneratedBytecode: java.lang.Object (org.gradle.api.file.FileCollection)
com.android.build.gradle.api.BaseVariant.registerResGeneratingTask: void (org.gradle.api.Task, java.io.File[])
com.android.build.gradle.api.BaseVariant.registerResGeneratingTask: void (org.gradle.api.Task, java.util.Collection<java.io.File>)
com.android.build.gradle.api.BaseVariant.resValue: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.api.BaseVariant.setOutputsAreSigned: void (boolean)
com.android.build.gradle.api.BaseVariantOutput implements com.android.build.OutputFile
com.android.build.gradle.api.BaseVariantOutput.getAssemble: org.gradle.api.Task ()
com.android.build.gradle.api.BaseVariantOutput.getBaseName: java.lang.String ()
com.android.build.gradle.api.BaseVariantOutput.getDirName: java.lang.String ()
com.android.build.gradle.api.BaseVariantOutput.getName: java.lang.String ()
com.android.build.gradle.api.BaseVariantOutput.getProcessManifest: com.android.build.gradle.tasks.ManifestProcessorTask ()
com.android.build.gradle.api.BaseVariantOutput.getProcessManifestProvider: org.gradle.api.tasks.TaskProvider<com.android.build.gradle.tasks.ManifestProcessorTask> ()
com.android.build.gradle.api.BaseVariantOutput.getProcessResources: com.android.build.gradle.tasks.ProcessAndroidResources ()
com.android.build.gradle.api.BaseVariantOutput.getProcessResourcesProvider: org.gradle.api.tasks.TaskProvider<com.android.build.gradle.tasks.ProcessAndroidResources> ()
com.android.build.gradle.api.FeatureVariant implements com.android.build.gradle.api.ApkVariant, com.android.build.gradle.internal.api.TestedVariant
com.android.build.gradle.api.InstallableVariant
com.android.build.gradle.api.InstallableVariant.getInstall: org.gradle.api.DefaultTask ()
com.android.build.gradle.api.InstallableVariant.getInstallProvider: org.gradle.api.tasks.TaskProvider<org.gradle.api.Task> ()
com.android.build.gradle.api.InstallableVariant.getUninstall: org.gradle.api.DefaultTask ()
com.android.build.gradle.api.InstallableVariant.getUninstallProvider: org.gradle.api.tasks.TaskProvider<org.gradle.api.Task> ()
com.android.build.gradle.api.JavaCompileOptions
com.android.build.gradle.api.JavaCompileOptions.getAnnotationProcessorOptions: com.android.build.gradle.api.AnnotationProcessorOptions ()
com.android.build.gradle.api.LibraryVariant implements com.android.build.gradle.api.BaseVariant, com.android.build.gradle.internal.api.TestedVariant
com.android.build.gradle.api.LibraryVariant.getPackageLibrary: org.gradle.api.tasks.bundling.Zip ()
com.android.build.gradle.api.LibraryVariant.getPackageLibraryProvider: org.gradle.api.tasks.TaskProvider<org.gradle.api.tasks.bundling.Zip> ()
com.android.build.gradle.api.LibraryVariantOutput
com.android.build.gradle.api.LibraryVariantOutput.getPackageLibrary: org.gradle.api.tasks.bundling.Zip ()
com.android.build.gradle.api.SourceKind extends java.lang.Enum
com.android.build.gradle.api.SourceKind.valueOf: com.android.build.gradle.api.SourceKind (java.lang.String)
com.android.build.gradle.api.SourceKind.values: com.android.build.gradle.api.SourceKind[] ()
com.android.build.gradle.api.TestVariant implements com.android.build.gradle.api.ApkVariant
com.android.build.gradle.api.TestVariant.getConnectedInstrumentTest: org.gradle.api.DefaultTask ()
com.android.build.gradle.api.TestVariant.getConnectedInstrumentTestProvider: org.gradle.api.tasks.TaskProvider<org.gradle.api.Task> ()
com.android.build.gradle.api.TestVariant.getProviderInstrumentTestProviders: java.util.List<org.gradle.api.tasks.TaskProvider<org.gradle.api.Task>> ()
com.android.build.gradle.api.TestVariant.getProviderInstrumentTests: java.util.List<? extends org.gradle.api.DefaultTask> ()
com.android.build.gradle.api.TestVariant.getTestedVariant: com.android.build.gradle.api.BaseVariant ()
com.android.build.gradle.api.TestedComponentIdentifier implements org.gradle.api.artifacts.component.ComponentIdentifier
com.android.build.gradle.api.TestedComponentIdentifier.getVariantName: java.lang.String ()
com.android.build.gradle.api.UnitTestVariant implements com.android.build.gradle.api.BaseVariant
com.android.build.gradle.api.UnitTestVariant.getTestedVariant: com.android.build.gradle.internal.api.TestedVariant ()
com.android.build.gradle.api.VersionedVariant
com.android.build.gradle.api.VersionedVariant.getVersionCode: int ()
com.android.build.gradle.api.VersionedVariant.getVersionName: java.lang.String ()
com.android.build.gradle.api.ViewBindingOptions
com.android.build.gradle.api.ViewBindingOptions.isEnabled: boolean ()
com.android.build.gradle.api.ViewBindingOptions.setEnabled: void (boolean)
com.android.build.gradle.internal.dsl.AaptOptions
com.android.build.gradle.internal.dsl.AaptOptions.<init>: com.android.build.gradle.internal.dsl.AaptOptions (boolean)
com.android.build.gradle.internal.dsl.AaptOptions.additionalParameters: void (java.lang.String)
com.android.build.gradle.internal.dsl.AaptOptions.additionalParameters: void (java.lang.String[])
com.android.build.gradle.internal.dsl.AaptOptions.failOnMissingConfigEntry: void (boolean)
com.android.build.gradle.internal.dsl.AaptOptions.getAdditionalParameters: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.AaptOptions.getCruncherEnabled: boolean ()
com.android.build.gradle.internal.dsl.AaptOptions.getCruncherEnabledOverride: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.AaptOptions.getCruncherProcesses: int ()
com.android.build.gradle.internal.dsl.AaptOptions.getFailOnMissingConfigEntry: boolean ()
com.android.build.gradle.internal.dsl.AaptOptions.getIgnoreAssets: java.lang.String ()
com.android.build.gradle.internal.dsl.AaptOptions.getIgnoreAssetsPattern: java.lang.String ()
com.android.build.gradle.internal.dsl.AaptOptions.getNamespaced: boolean ()
com.android.build.gradle.internal.dsl.AaptOptions.getNoCompress: java.util.Collection<java.lang.String> ()
com.android.build.gradle.internal.dsl.AaptOptions.getUseNewCruncher: boolean ()
com.android.build.gradle.internal.dsl.AaptOptions.namespaced: void (boolean)
com.android.build.gradle.internal.dsl.AaptOptions.noCompress: void (java.lang.String)
com.android.build.gradle.internal.dsl.AaptOptions.noCompress: void (java.lang.String[])
com.android.build.gradle.internal.dsl.AaptOptions.setAdditionalParameters: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.AaptOptions.setCruncherEnabled: void (boolean)
com.android.build.gradle.internal.dsl.AaptOptions.setCruncherProcesses: void (int)
com.android.build.gradle.internal.dsl.AaptOptions.setFailOnMissingConfigEntry: void (boolean)
com.android.build.gradle.internal.dsl.AaptOptions.setIgnoreAssets: void (java.lang.String)
com.android.build.gradle.internal.dsl.AaptOptions.setIgnoreAssetsPattern: void (java.lang.String)
com.android.build.gradle.internal.dsl.AaptOptions.setNamespaced: void (boolean)
com.android.build.gradle.internal.dsl.AaptOptions.setNoCompress: void (java.lang.Iterable<java.lang.String>)
com.android.build.gradle.internal.dsl.AaptOptions.setNoCompress: void (java.lang.String)
com.android.build.gradle.internal.dsl.AaptOptions.setNoCompress: void (java.lang.String[])
com.android.build.gradle.internal.dsl.AaptOptions.setUseNewCruncher: void (boolean)
com.android.build.gradle.internal.dsl.AaptOptions.useNewCruncher: void (boolean)
com.android.build.gradle.internal.dsl.AbiSplitOptions extends com.android.build.gradle.internal.dsl.SplitOptions
com.android.build.gradle.internal.dsl.AbiSplitOptions.<init>: com.android.build.gradle.internal.dsl.AbiSplitOptions ()
com.android.build.gradle.internal.dsl.AbiSplitOptions.getAbiFilters: com.google.common.collect.ImmutableSet<java.lang.String> (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.AbiSplitOptions.isUniversalApk: boolean ()
com.android.build.gradle.internal.dsl.AbiSplitOptions.setUniversalApk: void (boolean)
com.android.build.gradle.internal.dsl.AdbOptions implements com.android.builder.model.AdbOptions
com.android.build.gradle.internal.dsl.AdbOptions.<init>: com.android.build.gradle.internal.dsl.AdbOptions ()
com.android.build.gradle.internal.dsl.AdbOptions.getInstallOptions: java.util.Collection<java.lang.String> ()
com.android.build.gradle.internal.dsl.AdbOptions.getTimeOutInMs: int ()
com.android.build.gradle.internal.dsl.AdbOptions.installOptions: void (java.lang.String)
com.android.build.gradle.internal.dsl.AdbOptions.installOptions: void (java.lang.String[])
com.android.build.gradle.internal.dsl.AdbOptions.setInstallOptions: void (java.lang.String)
com.android.build.gradle.internal.dsl.AdbOptions.setInstallOptions: void (java.lang.String[])
com.android.build.gradle.internal.dsl.AdbOptions.setTimeOutInMs: void (int)
com.android.build.gradle.internal.dsl.AdbOptions.timeOutInMs: void (int)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions implements com.android.build.gradle.api.AnnotationProcessorOptions
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.<init>: com.android.build.gradle.internal.dsl.AnnotationProcessorOptions (com.android.build.gradle.internal.errors.DeprecationReporter)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions._initWith: void (com.android.build.gradle.api.AnnotationProcessorOptions)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.argument: void (java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.arguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.className: void (java.lang.String)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.classNames: void (java.util.Collection<java.lang.String>)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.compilerArgumentProvider: void (org.gradle.process.CommandLineArgumentProvider)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.compilerArgumentProviders: void (java.util.List<org.gradle.process.CommandLineArgumentProvider>)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.getArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.getClassNames: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.getCompilerArgumentProviders: java.util.List<org.gradle.process.CommandLineArgumentProvider> ()
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.getIncludeCompileClasspath: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.setArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.setClassNames: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.setCompilerArgumentProviders: void (java.util.List<org.gradle.process.CommandLineArgumentProvider>)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.setIncludeCompileClasspath: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.toString: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension extends com.android.build.gradle.AppExtension implements com.android.build.api.dsl.ApplicationExtension, com.android.build.gradle.internal.dsl.ActionableVariantObjectOperationsExecutor
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.<init>: com.android.build.gradle.internal.dsl.BaseAppModuleExtension (com.android.build.gradle.internal.api.dsl.DslScope, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, com.android.build.gradle.internal.dsl.ApplicationExtensionImpl)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ApplicationBuildFeatures, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.buildFeatures: void (org.gradle.api.Action<com.android.build.api.dsl.ApplicationBuildFeatures>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.buildTypes: void (org.gradle.api.Action<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType>>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.bundle: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.BundleOptions>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.compileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.CompileOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.compileSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.defaultConfig: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DefaultConfig>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.dependenciesInfo: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DependenciesInfo, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.dependenciesInfo: void (org.gradle.api.Action<com.android.build.api.dsl.DependenciesInfo>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.executeVariantOperations: void (com.android.build.api.variant.ApplicationVariant)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.executeVariantOperations: void (com.android.build.api.variant.Variant)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.executeVariantPropertiesOperations: void (com.android.build.api.variant.ApplicationVariantProperties)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.executeVariantPropertiesOperations: void (com.android.build.api.variant.VariantProperties)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getAssetPacks: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getBuildFeatures: com.android.build.api.dsl.ApplicationBuildFeatures ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getBuildTypes: java.util.Collection ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getBundle: com.android.build.gradle.internal.dsl.BundleOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getCompileOptions: com.android.build.api.dsl.CompileOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getCompileOptions: com.android.build.gradle.internal.CompileOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getCompileSdkVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDataBinding: com.android.build.gradle.internal.dsl.DataBindingOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDataBinding: com.android.builder.model.DataBindingOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.CoreProductFlavor ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.DefaultConfig ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDependenciesInfo: com.android.build.api.dsl.DependenciesInfo ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDynamicFeatures: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getExternalNativeBuild: com.android.build.gradle.internal.dsl.ExternalNativeBuild ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getExternalNativeBuild: com.android.build.gradle.internal.model.CoreExternalNativeBuild ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getJacoco: com.android.build.gradle.internal.coverage.JacocoOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getOnVariantProperties: com.android.build.api.component.GenericFilteredComponentActionRegistrar<com.android.build.api.variant.ApplicationVariantProperties> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getOnVariants: com.android.build.api.component.GenericFilteredComponentActionRegistrar<com.android.build.api.variant.ApplicationVariant> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getProductFlavors: java.util.Collection ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getSigningConfigs: java.util.Collection ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getTestOptions: com.android.build.gradle.internal.dsl.TestOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getViewBinding: com.android.build.gradle.api.ViewBindingOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.coverage.JacocoOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.onVariantProperties: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.ApplicationVariantProperties, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.onVariantProperties: void (org.gradle.api.Action<com.android.build.api.variant.ApplicationVariantProperties>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.onVariants: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.ApplicationVariant, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.onVariants: void (org.gradle.api.Action<com.android.build.api.variant.ApplicationVariant>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor>>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setAssetPacks: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setCompileSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setDynamicFeatures: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig>>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.TestOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseFlavor extends com.android.builder.core.AbstractProductFlavor implements com.android.build.gradle.internal.dsl.CoreProductFlavor
com.android.build.gradle.internal.dsl.BaseFlavor.<init>: com.android.build.gradle.internal.dsl.BaseFlavor (java.lang.String, com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.BaseFlavor.buildConfigField: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.consumerProguardFile: void (java.lang.Object)
com.android.build.gradle.internal.dsl.BaseFlavor.consumerProguardFiles: void (java.lang.Object[])
com.android.build.gradle.internal.dsl.BaseFlavor.externalNativeBuild: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions>)
com.android.build.gradle.internal.dsl.BaseFlavor.getExternalNativeBuild: com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getExternalNativeBuildOptions: com.android.build.gradle.internal.dsl.CoreExternalNativeBuildOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getGeneratedDensities: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.BaseFlavor.getJavaCompileOptions: com.android.build.gradle.api.JavaCompileOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getJavaCompileOptions: com.android.build.gradle.internal.dsl.JavaCompileOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getNdk: com.android.build.gradle.internal.dsl.NdkOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getNdkConfig: com.android.build.gradle.internal.dsl.CoreNdkOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getShaders: com.android.build.gradle.internal.dsl.CoreShaderOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getSigningConfig: com.android.build.gradle.internal.dsl.SigningConfig ()
com.android.build.gradle.internal.dsl.BaseFlavor.getSigningConfig: com.android.builder.model.SigningConfig ()
com.android.build.gradle.internal.dsl.BaseFlavor.getVectorDrawables: com.android.build.gradle.internal.dsl.VectorDrawablesOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getVectorDrawables: com.android.builder.core.DefaultVectorDrawablesOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getVectorDrawables: com.android.builder.model.VectorDrawablesOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.javaCompileOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.JavaCompileOptions>)
com.android.build.gradle.internal.dsl.BaseFlavor.maxSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseFlavor.minSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseFlavor.minSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.ndk: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.NdkOptions>)
com.android.build.gradle.internal.dsl.BaseFlavor.proguardFile: void (java.lang.Object)
com.android.build.gradle.internal.dsl.BaseFlavor.proguardFiles: void (java.lang.Object[])
com.android.build.gradle.internal.dsl.BaseFlavor.resConfig: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.resConfigs: void (java.lang.String[])
com.android.build.gradle.internal.dsl.BaseFlavor.resConfigs: void (java.util.Collection<java.lang.String>)
com.android.build.gradle.internal.dsl.BaseFlavor.resValue: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.setConsumerProguardFiles: void (java.lang.Iterable<?>)
com.android.build.gradle.internal.dsl.BaseFlavor.setGeneratedDensities: void (java.lang.Iterable<java.lang.String>)
com.android.build.gradle.internal.dsl.BaseFlavor.setMinSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseFlavor.setMinSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.setProguardFiles: void (java.lang.Iterable<?>)
com.android.build.gradle.internal.dsl.BaseFlavor.setTargetSdkVersion: com.android.builder.model.ProductFlavor (int)
com.android.build.gradle.internal.dsl.BaseFlavor.setTargetSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.setTestProguardFiles: void (java.lang.Iterable<?>)
com.android.build.gradle.internal.dsl.BaseFlavor.shaders: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ShaderOptions>)
com.android.build.gradle.internal.dsl.BaseFlavor.targetSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseFlavor.targetSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.testInstrumentationRunnerArgument: void (java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.testInstrumentationRunnerArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.gradle.internal.dsl.BaseFlavor.testProguardFile: void (java.lang.Object)
com.android.build.gradle.internal.dsl.BaseFlavor.testProguardFiles: void (java.lang.Object[])
com.android.build.gradle.internal.dsl.BaseFlavor.vectorDrawables: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.VectorDrawablesOptions>)
com.android.build.gradle.internal.dsl.BaseFlavor.wearAppUnbundled: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildType extends com.android.builder.core.AbstractBuildType implements com.android.build.gradle.internal.dsl.CoreBuildType, java.io.Serializable, com.android.build.api.dsl.BuildType
com.android.build.gradle.internal.dsl.BuildType$PostProcessingConfiguration extends java.lang.Enum
com.android.build.gradle.internal.dsl.BuildType$PostProcessingConfiguration.valueOf: com.android.build.gradle.internal.dsl.BuildType$PostProcessingConfiguration (java.lang.String)
com.android.build.gradle.internal.dsl.BuildType$PostProcessingConfiguration.values: com.android.build.gradle.internal.dsl.BuildType$PostProcessingConfiguration[] ()
com.android.build.gradle.internal.dsl.BuildType.<init>: com.android.build.gradle.internal.dsl.BuildType (java.lang.String, com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.BuildType.buildConfigField: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BuildType.consumerProguardFile: com.android.build.gradle.internal.dsl.BuildType (java.lang.Object)
com.android.build.gradle.internal.dsl.BuildType.consumerProguardFiles: com.android.build.gradle.internal.dsl.BuildType (java.lang.Object[])
com.android.build.gradle.internal.dsl.BuildType.equals: boolean (java.lang.Object)
com.android.build.gradle.internal.dsl.BuildType.externalNativeBuild: com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions>)
com.android.build.gradle.internal.dsl.BuildType.getExternalNativeBuildOptions: com.android.build.gradle.internal.dsl.CoreExternalNativeBuildOptions ()
com.android.build.gradle.internal.dsl.BuildType.getExternalNativeBuildOptions: com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions ()
com.android.build.gradle.internal.dsl.BuildType.getIsDefault: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.gradle.internal.dsl.BuildType.getIsDefaultProp: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.gradle.internal.dsl.BuildType.getJavaCompileOptions: com.android.build.gradle.api.JavaCompileOptions ()
com.android.build.gradle.internal.dsl.BuildType.getMatchingFallbacks: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.BuildType.getNdkConfig: com.android.build.gradle.internal.dsl.CoreNdkOptions ()
com.android.build.gradle.internal.dsl.BuildType.getPostProcessingConfiguration: com.android.build.gradle.internal.dsl.BuildType$PostProcessingConfiguration ()
com.android.build.gradle.internal.dsl.BuildType.getPostprocessing: com.android.build.gradle.internal.dsl.PostProcessingBlock ()
com.android.build.gradle.internal.dsl.BuildType.getShaders: com.android.build.gradle.internal.dsl.CoreShaderOptions ()
com.android.build.gradle.internal.dsl.BuildType.getSigningConfig: com.android.build.gradle.internal.dsl.SigningConfig ()
com.android.build.gradle.internal.dsl.BuildType.getSigningConfig: com.android.builder.model.SigningConfig ()
com.android.build.gradle.internal.dsl.BuildType.hashCode: int ()
com.android.build.gradle.internal.dsl.BuildType.init: void ()
com.android.build.gradle.internal.dsl.BuildType.init: void (com.android.build.gradle.internal.dsl.SigningConfig)
com.android.build.gradle.internal.dsl.BuildType.initWith: com.android.build.gradle.internal.dsl.BuildType (com.android.builder.model.BuildType)
com.android.build.gradle.internal.dsl.BuildType.initWith: com.android.builder.core.AbstractBuildType (com.android.builder.model.BuildType)
com.android.build.gradle.internal.dsl.BuildType.isCrunchPngs: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildType.isCrunchPngsDefault: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isDefault: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isMinifyEnabled: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isShrinkResources: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isUseProguard: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildType.ndk: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.NdkOptions>)
com.android.build.gradle.internal.dsl.BuildType.postprocessing: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.PostProcessingBlock>)
com.android.build.gradle.internal.dsl.BuildType.proguardFile: com.android.build.gradle.internal.dsl.BuildType (java.lang.Object)
com.android.build.gradle.internal.dsl.BuildType.proguardFiles: com.android.build.gradle.internal.dsl.BuildType (java.lang.Object[])
com.android.build.gradle.internal.dsl.BuildType.resValue: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BuildType.setConsumerProguardFiles: com.android.build.gradle.internal.dsl.BuildType (java.lang.Iterable<?>)
com.android.build.gradle.internal.dsl.BuildType.setCrunchPngs: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildType.setDefault: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setIsDefault: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setMatchingFallbacks: void (java.lang.String)
com.android.build.gradle.internal.dsl.BuildType.setMatchingFallbacks: void (java.lang.String[])
com.android.build.gradle.internal.dsl.BuildType.setMatchingFallbacks: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.BuildType.setMinifyEnabled: com.android.builder.model.BuildType (boolean)
com.android.build.gradle.internal.dsl.BuildType.setProguardFiles: com.android.build.gradle.internal.dsl.BuildType (java.lang.Iterable<?>)
com.android.build.gradle.internal.dsl.BuildType.setShrinkResources: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setTestProguardFiles: com.android.build.gradle.internal.dsl.BuildType (java.lang.Iterable<?>)
com.android.build.gradle.internal.dsl.BuildType.setUseProguard: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.shaders: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ShaderOptions>)
com.android.build.gradle.internal.dsl.BuildType.testProguardFile: com.android.build.gradle.internal.dsl.BuildType (java.lang.Object)
com.android.build.gradle.internal.dsl.BuildType.testProguardFiles: com.android.build.gradle.internal.dsl.BuildType (java.lang.Object[])
com.android.build.gradle.internal.dsl.BuildTypeFactory implements org.gradle.api.NamedDomainObjectFactory
com.android.build.gradle.internal.dsl.BuildTypeFactory.<init>: com.android.build.gradle.internal.dsl.BuildTypeFactory (com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.BuildTypeFactory.create: com.android.build.gradle.internal.dsl.BuildType (java.lang.String)
com.android.build.gradle.internal.dsl.BuildTypeFactory.create: java.lang.Object (java.lang.String)
com.android.build.gradle.internal.dsl.BundleOptions
com.android.build.gradle.internal.dsl.BundleOptions.<init>: com.android.build.gradle.internal.dsl.BundleOptions (org.gradle.api.model.ObjectFactory, com.android.build.gradle.internal.errors.DeprecationReporter)
com.android.build.gradle.internal.dsl.BundleOptions.abi: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.BundleOptionsAbi>)
com.android.build.gradle.internal.dsl.BundleOptions.density: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.BundleOptionsDensity>)
com.android.build.gradle.internal.dsl.BundleOptions.getAbi: com.android.build.gradle.internal.dsl.BundleOptionsAbi ()
com.android.build.gradle.internal.dsl.BundleOptions.getDensity: com.android.build.gradle.internal.dsl.BundleOptionsDensity ()
com.android.build.gradle.internal.dsl.BundleOptions.getIntegrityConfigDir: org.gradle.api.file.DirectoryProperty ()
com.android.build.gradle.internal.dsl.BundleOptions.getLanguage: com.android.build.gradle.internal.dsl.BundleOptionsLanguage ()
com.android.build.gradle.internal.dsl.BundleOptions.getTexture: com.android.build.gradle.internal.dsl.BundleOptionsTexture ()
com.android.build.gradle.internal.dsl.BundleOptions.language: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.BundleOptionsLanguage>)
com.android.build.gradle.internal.dsl.BundleOptions.texture: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.BundleOptionsTexture>)
com.android.build.gradle.internal.dsl.BundleOptionsAbi
com.android.build.gradle.internal.dsl.BundleOptionsAbi.<init>: com.android.build.gradle.internal.dsl.BundleOptionsAbi ()
com.android.build.gradle.internal.dsl.BundleOptionsAbi.getEnableSplit: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BundleOptionsAbi.setEnableSplit: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BundleOptionsDensity
com.android.build.gradle.internal.dsl.BundleOptionsDensity.<init>: com.android.build.gradle.internal.dsl.BundleOptionsDensity ()
com.android.build.gradle.internal.dsl.BundleOptionsDensity.getEnableSplit: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BundleOptionsDensity.setEnableSplit: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BundleOptionsLanguage
com.android.build.gradle.internal.dsl.BundleOptionsLanguage.<init>: com.android.build.gradle.internal.dsl.BundleOptionsLanguage ()
com.android.build.gradle.internal.dsl.BundleOptionsLanguage.getEnableSplit: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BundleOptionsLanguage.setEnableSplit: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BundleOptionsTexture
com.android.build.gradle.internal.dsl.BundleOptionsTexture.<init>: com.android.build.gradle.internal.dsl.BundleOptionsTexture ()
com.android.build.gradle.internal.dsl.BundleOptionsTexture.getEnableSplit: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BundleOptionsTexture.setEnableSplit: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.CmakeOptions implements com.android.build.gradle.internal.model.CoreCmakeOptions, com.android.build.api.dsl.CmakeOptions
com.android.build.gradle.internal.dsl.CmakeOptions.<init>: com.android.build.gradle.internal.dsl.CmakeOptions (com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.CmakeOptions.getBuildStagingDirectory: java.io.File ()
com.android.build.gradle.internal.dsl.CmakeOptions.getPath: java.io.File ()
com.android.build.gradle.internal.dsl.CmakeOptions.getVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.CmakeOptions.setBuildStagingDirectory: void (java.io.File)
com.android.build.gradle.internal.dsl.CmakeOptions.setBuildStagingDirectory: void (java.lang.Object)
com.android.build.gradle.internal.dsl.CmakeOptions.setPath: void (java.io.File)
com.android.build.gradle.internal.dsl.CmakeOptions.setPath: void (java.lang.Object)
com.android.build.gradle.internal.dsl.CmakeOptions.setVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.ComposeOptions
com.android.build.gradle.internal.dsl.ComposeOptions.getKotlinCompilerExtensionVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.ComposeOptions.getKotlinCompilerVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.ComposeOptions.setKotlinCompilerExtensionVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.ComposeOptions.setKotlinCompilerVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.CoreBuildType implements com.android.builder.model.BuildType
com.android.build.gradle.internal.dsl.CoreBuildType.getExternalNativeBuildOptions: com.android.build.gradle.internal.dsl.CoreExternalNativeBuildOptions ()
com.android.build.gradle.internal.dsl.CoreBuildType.getIsDefault: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.gradle.internal.dsl.CoreBuildType.getJavaCompileOptions: com.android.build.gradle.api.JavaCompileOptions ()
com.android.build.gradle.internal.dsl.CoreBuildType.getNdkConfig: com.android.build.gradle.internal.dsl.CoreNdkOptions ()
com.android.build.gradle.internal.dsl.CoreBuildType.getShaders: com.android.build.gradle.internal.dsl.CoreShaderOptions ()
com.android.build.gradle.internal.dsl.CoreBuildType.isCrunchPngs: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.CoreBuildType.isCrunchPngsDefault: boolean ()
com.android.build.gradle.internal.dsl.CoreBuildType.isShrinkResources: boolean ()
com.android.build.gradle.internal.dsl.CoreBuildType.isUseProguard: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.CoreExternalNativeBuildOptions
com.android.build.gradle.internal.dsl.CoreExternalNativeBuildOptions.getExternalNativeCmakeOptions: com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions ()
com.android.build.gradle.internal.dsl.CoreExternalNativeBuildOptions.getExternalNativeNdkBuildOptions: com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions ()
com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions
com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions.getcFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions
com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions.getcFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreNdkOptions
com.android.build.gradle.internal.dsl.CoreNdkOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreNdkOptions.getJobs: java.lang.Integer ()
com.android.build.gradle.internal.dsl.CoreNdkOptions.getLdLibs: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreNdkOptions.getModuleName: java.lang.String ()
com.android.build.gradle.internal.dsl.CoreNdkOptions.getStl: java.lang.String ()
com.android.build.gradle.internal.dsl.CoreNdkOptions.getcFlags: java.lang.String ()
com.android.build.gradle.internal.dsl.CoreProductFlavor implements com.android.builder.model.ProductFlavor, org.gradle.api.Named
com.android.build.gradle.internal.dsl.CoreProductFlavor.getExternalNativeBuildOptions: com.android.build.gradle.internal.dsl.CoreExternalNativeBuildOptions ()
com.android.build.gradle.internal.dsl.CoreProductFlavor.getJavaCompileOptions: com.android.build.gradle.api.JavaCompileOptions ()
com.android.build.gradle.internal.dsl.CoreProductFlavor.getNdkConfig: com.android.build.gradle.internal.dsl.CoreNdkOptions ()
com.android.build.gradle.internal.dsl.CoreProductFlavor.getShaders: com.android.build.gradle.internal.dsl.CoreShaderOptions ()
com.android.build.gradle.internal.dsl.CoreShaderOptions
com.android.build.gradle.internal.dsl.CoreShaderOptions.getGlslcArgs: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.CoreShaderOptions.getScopedGlslcArgs: com.google.common.collect.ListMultimap<java.lang.String, java.lang.String> ()
com.android.build.gradle.internal.dsl.DataBindingOptions implements com.android.builder.model.DataBindingOptions
com.android.build.gradle.internal.dsl.DataBindingOptions.<init>: com.android.build.gradle.internal.dsl.DataBindingOptions (com.android.build.api.dsl.BuildFeatures, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.DataBindingOptions.getAddDefaultAdapters: boolean ()
com.android.build.gradle.internal.dsl.DataBindingOptions.getVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.DataBindingOptions.isEnabled: boolean ()
com.android.build.gradle.internal.dsl.DataBindingOptions.isEnabledForTests: boolean ()
com.android.build.gradle.internal.dsl.DataBindingOptions.setAddDefaultAdapters: void (boolean)
com.android.build.gradle.internal.dsl.DataBindingOptions.setEnabled: void (boolean)
com.android.build.gradle.internal.dsl.DataBindingOptions.setEnabledForTests: void (boolean)
com.android.build.gradle.internal.dsl.DataBindingOptions.setVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.DefaultConfig extends com.android.build.gradle.internal.dsl.BaseFlavor implements com.android.build.api.dsl.DefaultConfig
com.android.build.gradle.internal.dsl.DefaultConfig.<init>: com.android.build.gradle.internal.dsl.DefaultConfig (java.lang.String, com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.DensitySplitOptions extends com.android.build.gradle.internal.dsl.SplitOptions
com.android.build.gradle.internal.dsl.DensitySplitOptions.<init>: com.android.build.gradle.internal.dsl.DensitySplitOptions ()
com.android.build.gradle.internal.dsl.DensitySplitOptions.compatibleScreens: void (java.lang.String[])
com.android.build.gradle.internal.dsl.DensitySplitOptions.getCompatibleScreens: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.DensitySplitOptions.isStrict: boolean ()
com.android.build.gradle.internal.dsl.DensitySplitOptions.setAuto: void (boolean)
com.android.build.gradle.internal.dsl.DensitySplitOptions.setCompatibleScreens: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.DensitySplitOptions.setStrict: void (boolean)
com.android.build.gradle.internal.dsl.DexOptions extends com.android.builder.core.DefaultDexOptions
com.android.build.gradle.internal.dsl.DexOptions.<init>: com.android.build.gradle.internal.dsl.DexOptions (com.android.build.gradle.internal.errors.DeprecationReporter)
com.android.build.gradle.internal.dsl.DexOptions.additionalParameters: void (java.lang.String[])
com.android.build.gradle.internal.dsl.DexOptions.getIncremental: boolean ()
com.android.build.gradle.internal.dsl.DexOptions.setIncremental: void (boolean)
com.android.build.gradle.internal.dsl.DexOptions.setOptimize: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension extends com.android.build.gradle.AppExtension implements com.android.build.api.dsl.DynamicFeatureExtension, com.android.build.gradle.internal.dsl.ActionableVariantObjectOperationsExecutor
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.<init>: com.android.build.gradle.internal.dsl.DynamicFeatureExtension (com.android.build.gradle.internal.api.dsl.DslScope, com.android.build.gradle.options.ProjectOptions, com.android.build.gradle.internal.scope.GlobalScope, org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.BaseVariantOutput>, com.android.build.gradle.internal.dependency.SourceSetManager, com.android.build.gradle.internal.ExtraModelInfo, com.android.build.gradle.internal.dsl.DynamicFeatureExtensionImpl)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DynamicFeatureBuildFeatures, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.buildFeatures: void (org.gradle.api.Action<com.android.build.api.dsl.DynamicFeatureBuildFeatures>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.buildTypes: void (org.gradle.api.Action<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType>>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.compileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.CompileOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.compileSdkVersion: void (int)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.defaultConfig: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DefaultConfig>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.executeVariantOperations: void (com.android.build.api.variant.DynamicFeatureVariant)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.executeVariantOperations: void (com.android.build.api.variant.Variant)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.executeVariantPropertiesOperations: void (com.android.build.api.variant.DynamicFeatureVariantProperties)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.executeVariantPropertiesOperations: void (com.android.build.api.variant.VariantProperties)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getBuildFeatures: com.android.build.api.dsl.DynamicFeatureBuildFeatures ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getBuildTypes: java.util.Collection ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getCompileOptions: com.android.build.api.dsl.CompileOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getCompileOptions: com.android.build.gradle.internal.CompileOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getCompileSdkVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getDataBinding: com.android.build.gradle.internal.dsl.DataBindingOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getDataBinding: com.android.builder.model.DataBindingOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.CoreProductFlavor ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getDefaultConfig: com.android.build.gradle.internal.dsl.DefaultConfig ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getExternalNativeBuild: com.android.build.gradle.internal.dsl.ExternalNativeBuild ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getExternalNativeBuild: com.android.build.gradle.internal.model.CoreExternalNativeBuild ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getJacoco: com.android.build.gradle.internal.coverage.JacocoOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getOnVariantProperties: com.android.build.api.component.GenericFilteredComponentActionRegistrar<com.android.build.api.variant.DynamicFeatureVariantProperties> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getOnVariants: com.android.build.api.component.GenericFilteredComponentActionRegistrar<com.android.build.api.variant.DynamicFeatureVariant> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getProductFlavors: java.util.Collection ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getSigningConfigs: java.util.Collection ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getTestOptions: com.android.build.gradle.internal.dsl.TestOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getViewBinding: com.android.build.gradle.api.ViewBindingOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.coverage.JacocoOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.onVariantProperties: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.DynamicFeatureVariantProperties, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.onVariantProperties: void (org.gradle.api.Action<com.android.build.api.variant.DynamicFeatureVariantProperties>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.onVariants: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.DynamicFeatureVariant, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.onVariants: void (org.gradle.api.Action<com.android.build.api.variant.DynamicFeatureVariant>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor>>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setCompileSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig>>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.TestOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.ExternalNativeBuild implements com.android.build.gradle.internal.model.CoreExternalNativeBuild, com.android.build.api.dsl.ExternalNativeBuild
com.android.build.gradle.internal.dsl.ExternalNativeBuild.<init>: com.android.build.gradle.internal.dsl.ExternalNativeBuild (com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.ExternalNativeBuild.cmake: com.android.build.gradle.internal.dsl.CmakeOptions (org.gradle.api.Action<com.android.build.gradle.internal.dsl.CmakeOptions>)
com.android.build.gradle.internal.dsl.ExternalNativeBuild.cmake: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.CmakeOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.ExternalNativeBuild.getCmake: com.android.build.api.dsl.CmakeOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuild.getCmake: com.android.build.gradle.internal.dsl.CmakeOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuild.getCmake: com.android.build.gradle.internal.model.CoreCmakeOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuild.getNdkBuild: com.android.build.api.dsl.NdkBuildOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuild.getNdkBuild: com.android.build.gradle.internal.dsl.NdkBuildOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuild.getNdkBuild: com.android.build.gradle.internal.model.CoreNdkBuildOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuild.ndkBuild: com.android.build.gradle.internal.dsl.NdkBuildOptions (org.gradle.api.Action<com.android.build.gradle.internal.dsl.NdkBuildOptions>)
com.android.build.gradle.internal.dsl.ExternalNativeBuild.ndkBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.NdkBuildOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions implements com.android.build.gradle.internal.dsl.CoreExternalNativeBuildOptions
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.<init>: com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.<init>: com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions (org.gradle.api.model.ObjectFactory)
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions._initWith: void (com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions)
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.cmake: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions>)
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.getCmake: com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.getExternalNativeCmakeOptions: com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.getExternalNativeCmakeOptions: com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.getExternalNativeNdkBuildOptions: com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.getExternalNativeNdkBuildOptions: com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.getNdkBuild: com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.ndkBuild: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions>)
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions implements com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.<init>: com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions._initWith: void (com.android.build.gradle.internal.dsl.CoreExternalNativeCmakeOptions)
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.abiFilters: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.arguments: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.cFlags: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.cppFlags: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getcFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.setAbiFilters: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.setArguments: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.setCppFlags: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.setTargets: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.setcFlags: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.targets: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions implements com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.<init>: com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions._initWith: void (com.android.build.gradle.internal.dsl.CoreExternalNativeNdkBuildOptions)
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.abiFilters: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.arguments: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.cFlags: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.cppFlags: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getcFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.setAbiFilters: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.setArguments: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.setCppFlags: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.setTargets: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.setcFlags: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.targets: void (java.lang.String[])
com.android.build.gradle.internal.dsl.JavaCompileOptions implements com.android.build.gradle.api.JavaCompileOptions
com.android.build.gradle.internal.dsl.JavaCompileOptions.<init>: com.android.build.gradle.internal.dsl.JavaCompileOptions (com.android.build.gradle.internal.errors.DeprecationReporter)
com.android.build.gradle.internal.dsl.JavaCompileOptions.<init>: com.android.build.gradle.internal.dsl.JavaCompileOptions (org.gradle.api.model.ObjectFactory, com.android.build.gradle.internal.errors.DeprecationReporter)
com.android.build.gradle.internal.dsl.JavaCompileOptions.annotationProcessorOptions: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.AnnotationProcessorOptions>)
com.android.build.gradle.internal.dsl.JavaCompileOptions.getAnnotationProcessorOptions: com.android.build.gradle.api.AnnotationProcessorOptions ()
com.android.build.gradle.internal.dsl.JavaCompileOptions.getAnnotationProcessorOptions: com.android.build.gradle.internal.dsl.AnnotationProcessorOptions ()
com.android.build.gradle.internal.dsl.JavaCompileOptions.toString: java.lang.String ()
com.android.build.gradle.internal.dsl.LanguageSplitOptions
com.android.build.gradle.internal.dsl.LanguageSplitOptions.<init>: com.android.build.gradle.internal.dsl.LanguageSplitOptions ()
com.android.build.gradle.internal.dsl.LanguageSplitOptions.getApplicationFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.LanguageSplitOptions.getInclude: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.LanguageSplitOptions.include: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LanguageSplitOptions.isEnable: boolean ()
com.android.build.gradle.internal.dsl.LanguageSplitOptions.setAuto: void (boolean)
com.android.build.gradle.internal.dsl.LanguageSplitOptions.setEnable: void (boolean)
com.android.build.gradle.internal.dsl.LanguageSplitOptions.setInclude: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.LintOptions implements com.android.builder.model.LintOptions, java.io.Serializable
com.android.build.gradle.internal.dsl.LintOptions.<init>: com.android.build.gradle.internal.dsl.LintOptions ()
com.android.build.gradle.internal.dsl.LintOptions.<init>: com.android.build.gradle.internal.dsl.LintOptions (java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.io.File, boolean, java.io.File, boolean, java.io.File, boolean, java.io.File, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, java.io.File, java.util.Map<java.lang.String, java.lang.Integer>)
com.android.build.gradle.internal.dsl.LintOptions.baseline: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.baseline: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.check: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.check: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.create: com.android.builder.model.LintOptions (com.android.builder.model.LintOptions)
com.android.build.gradle.internal.dsl.LintOptions.disable: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.disable: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.enable: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.enable: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.error: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.error: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.fatal: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.fatal: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.getBaselineFile: java.io.File ()
com.android.build.gradle.internal.dsl.LintOptions.getCheck: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.LintOptions.getDisable: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.LintOptions.getEnable: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.LintOptions.getHtmlOutput: java.io.File ()
com.android.build.gradle.internal.dsl.LintOptions.getHtmlReport: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.getLintConfig: java.io.File ()
com.android.build.gradle.internal.dsl.LintOptions.getSeverityOverrides: java.util.Map<java.lang.String, java.lang.Integer> ()
com.android.build.gradle.internal.dsl.LintOptions.getTextOutput: java.io.File ()
com.android.build.gradle.internal.dsl.LintOptions.getTextReport: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.getXmlOutput: java.io.File ()
com.android.build.gradle.internal.dsl.LintOptions.getXmlReport: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.ignore: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.ignore: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.informational: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.informational: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.isAbortOnError: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isAbsolutePaths: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isCheckAllWarnings: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isCheckDependencies: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isCheckGeneratedSources: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isCheckReleaseBuilds: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isCheckTestSources: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isExplainIssues: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isIgnoreTestSources: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isIgnoreWarnings: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isNoLines: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isQuiet: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isShowAll: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isWarningsAsErrors: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.setAbortOnError: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setAbsolutePaths: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setBaselineFile: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.setCheck: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.LintOptions.setCheckAllWarnings: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setCheckDependencies: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setCheckGeneratedSources: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setCheckReleaseBuilds: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setCheckTestSources: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setDisable: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.LintOptions.setEnable: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.LintOptions.setExplainIssues: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setHtmlOutput: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.setHtmlReport: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setIgnoreTestSources: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setIgnoreWarnings: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setLintConfig: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.setNoLines: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setQuiet: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setShowAll: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setTextReport: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setWarningsAsErrors: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setXmlOutput: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.setXmlReport: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.textOutput: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.textOutput: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.warning: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.warning: void (java.lang.String[])
com.android.build.gradle.internal.dsl.NdkBuildOptions implements com.android.build.gradle.internal.model.CoreNdkBuildOptions, com.android.build.api.dsl.NdkBuildOptions
com.android.build.gradle.internal.dsl.NdkBuildOptions.<init>: com.android.build.gradle.internal.dsl.NdkBuildOptions (com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.NdkBuildOptions.buildStagingDirectory: void (java.lang.Object)
com.android.build.gradle.internal.dsl.NdkBuildOptions.getBuildStagingDirectory: java.io.File ()
com.android.build.gradle.internal.dsl.NdkBuildOptions.getPath: java.io.File ()
com.android.build.gradle.internal.dsl.NdkBuildOptions.path: void (java.lang.Object)
com.android.build.gradle.internal.dsl.NdkBuildOptions.setBuildStagingDirectory: void (java.io.File)
com.android.build.gradle.internal.dsl.NdkBuildOptions.setBuildStagingDirectory: void (java.lang.Object)
com.android.build.gradle.internal.dsl.NdkBuildOptions.setPath: void (java.io.File)
com.android.build.gradle.internal.dsl.NdkBuildOptions.setPath: void (java.lang.Object)
com.android.build.gradle.internal.dsl.NdkOptions implements com.android.build.gradle.internal.dsl.CoreNdkOptions, java.io.Serializable
com.android.build.gradle.internal.dsl.NdkOptions.<init>: com.android.build.gradle.internal.dsl.NdkOptions ()
com.android.build.gradle.internal.dsl.NdkOptions._initWith: void (com.android.build.gradle.internal.dsl.CoreNdkOptions)
com.android.build.gradle.internal.dsl.NdkOptions.abiFilter: com.android.build.gradle.internal.dsl.NdkOptions (java.lang.String)
com.android.build.gradle.internal.dsl.NdkOptions.abiFilters: com.android.build.gradle.internal.dsl.NdkOptions (java.lang.String[])
com.android.build.gradle.internal.dsl.NdkOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.NdkOptions.getJobs: java.lang.Integer ()
com.android.build.gradle.internal.dsl.NdkOptions.getLdLibs: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.NdkOptions.getModuleName: java.lang.String ()
com.android.build.gradle.internal.dsl.NdkOptions.getStl: java.lang.String ()
com.android.build.gradle.internal.dsl.NdkOptions.getcFlags: java.lang.String ()
com.android.build.gradle.internal.dsl.NdkOptions.ldLibs: com.android.build.gradle.internal.dsl.NdkOptions (java.lang.String)
com.android.build.gradle.internal.dsl.NdkOptions.ldLibs: com.android.build.gradle.internal.dsl.NdkOptions (java.lang.String[])
com.android.build.gradle.internal.dsl.NdkOptions.setAbiFilters: com.android.build.gradle.internal.dsl.NdkOptions (java.util.Collection<java.lang.String>)
com.android.build.gradle.internal.dsl.NdkOptions.setJobs: void (java.lang.Integer)
com.android.build.gradle.internal.dsl.NdkOptions.setLdLibs: com.android.build.gradle.internal.dsl.NdkOptions (java.util.Collection<java.lang.String>)
com.android.build.gradle.internal.dsl.NdkOptions.setModuleName: void (java.lang.String)
com.android.build.gradle.internal.dsl.NdkOptions.setStl: void (java.lang.String)
com.android.build.gradle.internal.dsl.NdkOptions.setcFlags: void (java.lang.String)
com.android.build.gradle.internal.dsl.PackagingOptions implements com.android.builder.model.PackagingOptions
com.android.build.gradle.internal.dsl.PackagingOptions.<init>: com.android.build.gradle.internal.dsl.PackagingOptions ()
com.android.build.gradle.internal.dsl.PackagingOptions.doNotStrip: void (java.lang.String)
com.android.build.gradle.internal.dsl.PackagingOptions.exclude: void (java.lang.String)
com.android.build.gradle.internal.dsl.PackagingOptions.getDoNotStrip: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.PackagingOptions.getExcludes: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.PackagingOptions.getMerges: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.PackagingOptions.getPickFirsts: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.PackagingOptions.merge: void (java.lang.String)
com.android.build.gradle.internal.dsl.PackagingOptions.pickFirst: void (java.lang.String)
com.android.build.gradle.internal.dsl.PackagingOptions.setDoNotStrip: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.PackagingOptions.setExcludes: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.PackagingOptions.setMerges: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.PackagingOptions.setPickFirsts: void (java.util.Set<java.lang.String>)
com.android.build.gradle.internal.dsl.PostProcessingBlock implements com.android.build.gradle.internal.ProguardFilesProvider
com.android.build.gradle.internal.dsl.PostProcessingBlock.<init>: com.android.build.gradle.internal.dsl.PostProcessingBlock (com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.PostProcessingBlock.consumerProguardFile: void (java.lang.Object)
com.android.build.gradle.internal.dsl.PostProcessingBlock.consumerProguardFiles: void (java.lang.Object[])
com.android.build.gradle.internal.dsl.PostProcessingBlock.getCodeShrinker: java.lang.String ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.getCodeShrinkerEnum: com.android.builder.model.CodeShrinker ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.getProguardFiles: java.util.Collection<java.io.File> (com.android.build.gradle.internal.ProguardFileType)
com.android.build.gradle.internal.dsl.PostProcessingBlock.initWith: void (com.android.build.gradle.internal.dsl.PostProcessingBlock)
com.android.build.gradle.internal.dsl.PostProcessingBlock.isObfuscate: boolean ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.isOptimizeCode: boolean ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.isRemoveUnusedCode: boolean ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.isRemoveUnusedResources: boolean ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.proguardFile: void (java.lang.Object)
com.android.build.gradle.internal.dsl.PostProcessingBlock.proguardFiles: void (java.lang.Object[])
com.android.build.gradle.internal.dsl.PostProcessingBlock.setCodeShrinker: void (java.lang.String)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setConsumerProguardFiles: void (java.util.List<java.lang.Object>)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setObfuscate: void (boolean)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setOptimizeCode: void (boolean)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setProguardFiles: void (java.util.List<java.lang.Object>)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setRemoveUnusedCode: void (boolean)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setRemoveUnusedResources: void (boolean)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setTestProguardFiles: void (java.util.List<java.lang.Object>)
com.android.build.gradle.internal.dsl.PostProcessingBlock.testProguardFile: void (java.lang.Object)
com.android.build.gradle.internal.dsl.PostProcessingBlock.testProguardFiles: void (java.lang.Object[])
com.android.build.gradle.internal.dsl.ProductFlavor extends com.android.build.gradle.internal.dsl.BaseFlavor implements com.android.build.api.dsl.ProductFlavor
com.android.build.gradle.internal.dsl.ProductFlavor.<init>: com.android.build.gradle.internal.dsl.ProductFlavor (java.lang.String, com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.ProductFlavor.getIsDefault: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.gradle.internal.dsl.ProductFlavor.getIsDefaultProp: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.gradle.internal.dsl.ProductFlavor.getMatchingFallbacks: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ProductFlavor.isDefault: boolean ()
com.android.build.gradle.internal.dsl.ProductFlavor.setDefault: void (boolean)
com.android.build.gradle.internal.dsl.ProductFlavor.setIsDefault: void (boolean)
com.android.build.gradle.internal.dsl.ProductFlavor.setMatchingFallbacks: void (java.lang.String)
com.android.build.gradle.internal.dsl.ProductFlavor.setMatchingFallbacks: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ProductFlavor.setMatchingFallbacks: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.ProductFlavorFactory implements org.gradle.api.NamedDomainObjectFactory
com.android.build.gradle.internal.dsl.ProductFlavorFactory.<init>: com.android.build.gradle.internal.dsl.ProductFlavorFactory (com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.ProductFlavorFactory.create: com.android.build.gradle.internal.dsl.ProductFlavor (java.lang.String)
com.android.build.gradle.internal.dsl.ProductFlavorFactory.create: java.lang.Object (java.lang.String)
com.android.build.gradle.internal.dsl.ShaderOptions implements com.android.build.gradle.internal.dsl.CoreShaderOptions
com.android.build.gradle.internal.dsl.ShaderOptions.<init>: com.android.build.gradle.internal.dsl.ShaderOptions ()
com.android.build.gradle.internal.dsl.ShaderOptions.getGlslcArgs: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ShaderOptions.getScopedGlslcArgs: com.google.common.collect.ListMultimap<java.lang.String, java.lang.String> ()
com.android.build.gradle.internal.dsl.ShaderOptions.glslcArgs: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ShaderOptions.glslcScopedArgs: void (java.lang.String, java.lang.String[])
com.android.build.gradle.internal.dsl.SigningConfig extends com.android.builder.signing.DefaultSigningConfig implements java.io.Serializable, org.gradle.api.Named, com.android.build.api.dsl.SigningConfig
com.android.build.gradle.internal.dsl.SigningConfig.<init>: com.android.build.gradle.internal.dsl.SigningConfig (java.lang.String)
com.android.build.gradle.internal.dsl.SigningConfig.getKeyAlias: java.lang.String ()
com.android.build.gradle.internal.dsl.SigningConfig.getKeyPassword: java.lang.String ()
com.android.build.gradle.internal.dsl.SigningConfig.getStoreFile: java.io.File ()
com.android.build.gradle.internal.dsl.SigningConfig.getStorePassword: java.lang.String ()
com.android.build.gradle.internal.dsl.SigningConfig.getStoreType: java.lang.String ()
com.android.build.gradle.internal.dsl.SigningConfig.initWith: com.android.build.gradle.internal.dsl.SigningConfig (com.android.builder.model.SigningConfig)
com.android.build.gradle.internal.dsl.SigningConfig.isV1SigningEnabled: boolean ()
com.android.build.gradle.internal.dsl.SigningConfig.isV2SigningEnabled: boolean ()
com.android.build.gradle.internal.dsl.SigningConfig.toString: java.lang.String ()
com.android.build.gradle.internal.dsl.SigningConfigFactory implements org.gradle.api.NamedDomainObjectFactory
com.android.build.gradle.internal.dsl.SigningConfigFactory.<init>: com.android.build.gradle.internal.dsl.SigningConfigFactory (org.gradle.api.model.ObjectFactory, java.io.File)
com.android.build.gradle.internal.dsl.SigningConfigFactory.create: com.android.build.gradle.internal.dsl.SigningConfig (java.lang.String)
com.android.build.gradle.internal.dsl.SigningConfigFactory.create: java.lang.Object (java.lang.String)
com.android.build.gradle.internal.dsl.SplitOptions
com.android.build.gradle.internal.dsl.SplitOptions.exclude: void (java.lang.String[])
com.android.build.gradle.internal.dsl.SplitOptions.getApplicableFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.SplitOptions.include: void (java.lang.String[])
com.android.build.gradle.internal.dsl.SplitOptions.isEnable: boolean ()
com.android.build.gradle.internal.dsl.SplitOptions.reset: void ()
com.android.build.gradle.internal.dsl.SplitOptions.setEnable: void (boolean)
com.android.build.gradle.internal.dsl.Splits
com.android.build.gradle.internal.dsl.Splits.<init>: com.android.build.gradle.internal.dsl.Splits (org.gradle.api.model.ObjectFactory)
com.android.build.gradle.internal.dsl.Splits.abi: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.AbiSplitOptions>)
com.android.build.gradle.internal.dsl.Splits.density: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.DensitySplitOptions>)
com.android.build.gradle.internal.dsl.Splits.getAbi: com.android.build.gradle.internal.dsl.AbiSplitOptions ()
com.android.build.gradle.internal.dsl.Splits.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.Splits.getDensity: com.android.build.gradle.internal.dsl.DensitySplitOptions ()
com.android.build.gradle.internal.dsl.Splits.getDensityFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.Splits.getLanguage: com.android.build.gradle.internal.dsl.LanguageSplitOptions ()
com.android.build.gradle.internal.dsl.Splits.getLanguageFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.Splits.language: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.LanguageSplitOptions>)
com.android.build.gradle.internal.dsl.TestOptions implements com.android.build.api.dsl.TestOptions
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions implements com.android.build.api.dsl.UnitTestOptions
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.<init>: com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions (com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.all: void (groovy.lang.Closure<org.gradle.api.tasks.testing.Test>)
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.applyConfiguration: void (org.gradle.api.tasks.testing.Test)
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.isIncludeAndroidResources: boolean ()
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.isReturnDefaultValues: boolean ()
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.setIncludeAndroidResources: void (boolean)
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.setReturnDefaultValues: void (boolean)
com.android.build.gradle.internal.dsl.TestOptions.<init>: com.android.build.gradle.internal.dsl.TestOptions (com.android.build.gradle.internal.api.dsl.DslScope)
com.android.build.gradle.internal.dsl.TestOptions.getAnimationsDisabled: boolean ()
com.android.build.gradle.internal.dsl.TestOptions.getExecution: java.lang.String ()
com.android.build.gradle.internal.dsl.TestOptions.getExecutionEnum: com.android.builder.model.TestOptions$Execution ()
com.android.build.gradle.internal.dsl.TestOptions.getReportDir: java.lang.String ()
com.android.build.gradle.internal.dsl.TestOptions.getResultsDir: java.lang.String ()
com.android.build.gradle.internal.dsl.TestOptions.getUnitTests: com.android.build.api.dsl.UnitTestOptions ()
com.android.build.gradle.internal.dsl.TestOptions.getUnitTests: com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions ()
com.android.build.gradle.internal.dsl.TestOptions.setAnimationsDisabled: void (boolean)
com.android.build.gradle.internal.dsl.TestOptions.setExecution: void (java.lang.String)
com.android.build.gradle.internal.dsl.TestOptions.setReportDir: void (java.lang.String)
com.android.build.gradle.internal.dsl.TestOptions.setResultsDir: void (java.lang.String)
com.android.build.gradle.internal.dsl.TestOptions.unitTests: void (groovy.lang.Closure)
com.android.build.gradle.internal.dsl.TestOptions.unitTests: void (kotlin.jvm.functions.Function1<? super com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.TestOptions.unitTests: void (org.gradle.api.Action<com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions>)
com.android.build.gradle.internal.dsl.VectorDrawablesOptions extends com.android.builder.core.DefaultVectorDrawablesOptions
com.android.build.gradle.internal.dsl.VectorDrawablesOptions.<init>: com.android.build.gradle.internal.dsl.VectorDrawablesOptions ()
com.android.build.gradle.internal.dsl.VectorDrawablesOptions.generatedDensities: void (java.lang.String[])
