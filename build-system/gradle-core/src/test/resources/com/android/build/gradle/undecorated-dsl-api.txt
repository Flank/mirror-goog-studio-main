The Android Gradle Plugin internal implementation classes.
-------------------------------------------------------------------------
ATTENTION REVIEWER: If this needs to be changed, please make sure changes
below are backwards compatible.
-------------------------------------------------------------------------
com.android.build.gradle.LibraryExtension.aaptOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AaptOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.adbOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AdbOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.androidResources: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidResources, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LibraryBuildFeatures, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.buildToolsVersion: void (java.lang.String)
com.android.build.gradle.LibraryExtension.buildTypes: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.LibraryBuildType>, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.compileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.CompileOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.compileSdkAddon: void (java.lang.String, java.lang.String, int)
com.android.build.gradle.LibraryExtension.compileSdkVersion: void (int)
com.android.build.gradle.LibraryExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.LibraryExtension.composeOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ComposeOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.dataBinding: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DataBinding, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.debug: void (org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.LibraryBuildType>, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LibraryBuildType, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.defaultConfig: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LibraryDefaultConfig, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.flavorDimensions: void (java.lang.String[])
com.android.build.gradle.LibraryExtension.getAaptOptions: com.android.build.api.dsl.AaptOptions ()
com.android.build.gradle.LibraryExtension.getAdbOptions: com.android.build.api.dsl.AdbOptions ()
com.android.build.gradle.LibraryExtension.getAidlPackagedList: java.util.Collection<java.lang.String> ()
com.android.build.gradle.LibraryExtension.getAndroidResources: com.android.build.api.dsl.AndroidResources ()
com.android.build.gradle.LibraryExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.LibraryExtension.getBuildToolsVersion: java.lang.String ()
com.android.build.gradle.LibraryExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.LibraryExtension.getCompileOptions: com.android.build.api.dsl.CompileOptions ()
com.android.build.gradle.LibraryExtension.getCompileSdk: java.lang.Integer ()
com.android.build.gradle.LibraryExtension.getCompileSdkPreview: java.lang.String ()
com.android.build.gradle.LibraryExtension.getComposeOptions: com.android.build.api.dsl.ComposeOptions ()
com.android.build.gradle.LibraryExtension.getDataBinding: com.android.build.api.dsl.DataBinding ()
com.android.build.gradle.LibraryExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.LibraryExtension.getDefaultProguardFile: java.io.File (java.lang.String)
com.android.build.gradle.LibraryExtension.getExperimentalProperties: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.gradle.LibraryExtension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.gradle.LibraryExtension.getFlavorDimensions: java.util.List<java.lang.String> ()
com.android.build.gradle.LibraryExtension.getInstallation: com.android.build.api.dsl.Installation ()
com.android.build.gradle.LibraryExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.gradle.LibraryExtension.getLint: com.android.build.api.dsl.Lint ()
com.android.build.gradle.LibraryExtension.getLintOptions: com.android.build.api.dsl.LintOptions ()
com.android.build.gradle.LibraryExtension.getNamespace: java.lang.String ()
com.android.build.gradle.LibraryExtension.getNdkPath: java.lang.String ()
com.android.build.gradle.LibraryExtension.getNdkVersion: java.lang.String ()
com.android.build.gradle.LibraryExtension.getPackagingOptions: com.android.build.api.dsl.PackagingOptions ()
com.android.build.gradle.LibraryExtension.getPrefab: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.PrefabPackagingOptions> ()
com.android.build.gradle.LibraryExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.LibraryExtension.getPublishing: com.android.build.api.dsl.LibraryPublishing ()
com.android.build.gradle.LibraryExtension.getResourcePrefix: java.lang.String ()
com.android.build.gradle.LibraryExtension.getSdkComponents: com.android.build.api.dsl.SdkComponents ()
com.android.build.gradle.LibraryExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.LibraryExtension.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet> ()
com.android.build.gradle.LibraryExtension.getSplits: com.android.build.api.dsl.Splits ()
com.android.build.gradle.LibraryExtension.getTestBuildType: java.lang.String ()
com.android.build.gradle.LibraryExtension.getTestCoverage: com.android.build.api.dsl.TestCoverage ()
com.android.build.gradle.LibraryExtension.getTestFixtures: com.android.build.api.dsl.TestFixtures ()
com.android.build.gradle.LibraryExtension.getTestNamespace: java.lang.String ()
com.android.build.gradle.LibraryExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.gradle.LibraryExtension.installation: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Installation, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JacocoOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.lint: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Lint, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.lintOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LintOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.packagingOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.PackagingOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.productFlavors: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.LibraryProductFlavor>, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.publishing: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LibraryPublishing, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.release: void (org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.LibraryBuildType>, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LibraryBuildType, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.setBuildToolsVersion: void (java.lang.String)
com.android.build.gradle.LibraryExtension.setCompileSdk: void (java.lang.Integer)
com.android.build.gradle.LibraryExtension.setCompileSdkPreview: void (java.lang.String)
com.android.build.gradle.LibraryExtension.setNamespace: void (java.lang.String)
com.android.build.gradle.LibraryExtension.setNdkPath: void (java.lang.String)
com.android.build.gradle.LibraryExtension.setNdkVersion: void (java.lang.String)
com.android.build.gradle.LibraryExtension.setResourcePrefix: void (java.lang.String)
com.android.build.gradle.LibraryExtension.setTestBuildType: void (java.lang.String)
com.android.build.gradle.LibraryExtension.setTestNamespace: void (java.lang.String)
com.android.build.gradle.LibraryExtension.signingConfigs: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.ApkSigningConfig>, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.sourceSets: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.AndroidSourceSet>, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.splits: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Splits, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.testCoverage: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestCoverage, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.testFixtures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestFixtures, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestOptions, kotlin.Unit>)
com.android.build.gradle.LibraryExtension.useLibrary: void (java.lang.String)
com.android.build.gradle.LibraryExtension.useLibrary: void (java.lang.String, boolean)
com.android.build.gradle.TestExtension.aaptOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AaptOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.adbOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AdbOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.androidResources: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidResources, kotlin.Unit>)
com.android.build.gradle.TestExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestBuildFeatures, kotlin.Unit>)
com.android.build.gradle.TestExtension.buildToolsVersion: void (java.lang.String)
com.android.build.gradle.TestExtension.buildTypes: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.TestBuildType>, kotlin.Unit>)
com.android.build.gradle.TestExtension.compileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.CompileOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.compileSdkAddon: void (java.lang.String, java.lang.String, int)
com.android.build.gradle.TestExtension.compileSdkVersion: void (int)
com.android.build.gradle.TestExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.TestExtension.composeOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ComposeOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.dataBinding: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DataBinding, kotlin.Unit>)
com.android.build.gradle.TestExtension.debug: void (org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.TestBuildType>, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestBuildType, kotlin.Unit>)
com.android.build.gradle.TestExtension.defaultConfig: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestDefaultConfig, kotlin.Unit>)
com.android.build.gradle.TestExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.gradle.TestExtension.flavorDimensions: void (java.lang.String[])
com.android.build.gradle.TestExtension.getAaptOptions: com.android.build.api.dsl.AaptOptions ()
com.android.build.gradle.TestExtension.getAdbOptions: com.android.build.api.dsl.AdbOptions ()
com.android.build.gradle.TestExtension.getAndroidResources: com.android.build.api.dsl.AndroidResources ()
com.android.build.gradle.TestExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.TestExtension.getBuildToolsVersion: java.lang.String ()
com.android.build.gradle.TestExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.TestExtension.getCompileOptions: com.android.build.api.dsl.CompileOptions ()
com.android.build.gradle.TestExtension.getCompileSdk: java.lang.Integer ()
com.android.build.gradle.TestExtension.getCompileSdkPreview: java.lang.String ()
com.android.build.gradle.TestExtension.getComposeOptions: com.android.build.api.dsl.ComposeOptions ()
com.android.build.gradle.TestExtension.getDataBinding: com.android.build.api.dsl.DataBinding ()
com.android.build.gradle.TestExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.TestExtension.getDefaultProguardFile: java.io.File (java.lang.String)
com.android.build.gradle.TestExtension.getExperimentalProperties: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.gradle.TestExtension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.gradle.TestExtension.getFlavorDimensions: java.util.List<java.lang.String> ()
com.android.build.gradle.TestExtension.getInstallation: com.android.build.api.dsl.Installation ()
com.android.build.gradle.TestExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.gradle.TestExtension.getLint: com.android.build.api.dsl.Lint ()
com.android.build.gradle.TestExtension.getLintOptions: com.android.build.api.dsl.LintOptions ()
com.android.build.gradle.TestExtension.getNamespace: java.lang.String ()
com.android.build.gradle.TestExtension.getNdkPath: java.lang.String ()
com.android.build.gradle.TestExtension.getNdkVersion: java.lang.String ()
com.android.build.gradle.TestExtension.getPackagingOptions: com.android.build.api.dsl.PackagingOptions ()
com.android.build.gradle.TestExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.TestExtension.getResourcePrefix: java.lang.String ()
com.android.build.gradle.TestExtension.getSdkComponents: com.android.build.api.dsl.SdkComponents ()
com.android.build.gradle.TestExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.TestExtension.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet> ()
com.android.build.gradle.TestExtension.getSplits: com.android.build.api.dsl.Splits ()
com.android.build.gradle.TestExtension.getTargetProjectPath: java.lang.String ()
com.android.build.gradle.TestExtension.getTestCoverage: com.android.build.api.dsl.TestCoverage ()
com.android.build.gradle.TestExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.gradle.TestExtension.installation: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Installation, kotlin.Unit>)
com.android.build.gradle.TestExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JacocoOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.lint: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Lint, kotlin.Unit>)
com.android.build.gradle.TestExtension.lintOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LintOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.packagingOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.PackagingOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.productFlavors: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.TestProductFlavor>, kotlin.Unit>)
com.android.build.gradle.TestExtension.release: void (org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.TestBuildType>, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestBuildType, kotlin.Unit>)
com.android.build.gradle.TestExtension.setBuildToolsVersion: void (java.lang.String)
com.android.build.gradle.TestExtension.setCompileSdk: void (java.lang.Integer)
com.android.build.gradle.TestExtension.setCompileSdkPreview: void (java.lang.String)
com.android.build.gradle.TestExtension.setNamespace: void (java.lang.String)
com.android.build.gradle.TestExtension.setNdkPath: void (java.lang.String)
com.android.build.gradle.TestExtension.setNdkVersion: void (java.lang.String)
com.android.build.gradle.TestExtension.setResourcePrefix: void (java.lang.String)
com.android.build.gradle.TestExtension.setTargetProjectPath: void (java.lang.String)
com.android.build.gradle.TestExtension.signingConfigs: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.ApkSigningConfig>, kotlin.Unit>)
com.android.build.gradle.TestExtension.sourceSets: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.AndroidSourceSet>, kotlin.Unit>)
com.android.build.gradle.TestExtension.splits: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Splits, kotlin.Unit>)
com.android.build.gradle.TestExtension.testCoverage: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestCoverage, kotlin.Unit>)
com.android.build.gradle.TestExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestOptions, kotlin.Unit>)
com.android.build.gradle.TestExtension.useLibrary: void (java.lang.String)
com.android.build.gradle.TestExtension.useLibrary: void (java.lang.String, boolean)
com.android.build.gradle.internal.dsl.AaptOptions.additionalParameters: void (java.lang.String)
com.android.build.gradle.internal.dsl.AaptOptions.additionalParameters: void (java.lang.String[])
com.android.build.gradle.internal.dsl.AaptOptions.getNoCompress: java.util.Collection<java.lang.String> ()
com.android.build.gradle.internal.dsl.AaptOptions.noCompress: void (java.lang.String)
com.android.build.gradle.internal.dsl.AaptOptions.noCompress: void (java.lang.String[])
com.android.build.gradle.internal.dsl.AarMetadata.getMinCompileSdk: java.lang.Integer ()
com.android.build.gradle.internal.dsl.AarMetadata.setMinCompileSdk: void (java.lang.Integer)
com.android.build.gradle.internal.dsl.AdbOptions.getInstallOptions: java.util.Collection<java.lang.String> ()
com.android.build.gradle.internal.dsl.AdbOptions.getTimeOutInMs: int ()
com.android.build.gradle.internal.dsl.AdbOptions.installOptions: void (java.lang.String)
com.android.build.gradle.internal.dsl.AdbOptions.installOptions: void (java.lang.String[])
com.android.build.gradle.internal.dsl.AdbOptions.setInstallOptions: void (java.util.Collection<java.lang.String>)
com.android.build.gradle.internal.dsl.AdbOptions.setTimeOutInMs: void (int)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.argument: void (java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.arguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.className: void (java.lang.String)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.classNames: void (java.lang.String[])
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.compilerArgumentProvider: void (org.gradle.process.CommandLineArgumentProvider)
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.compilerArgumentProviders: void (org.gradle.process.CommandLineArgumentProvider[])
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.getArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.getClassNames: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.AnnotationProcessorOptions.getCompilerArgumentProviders: java.util.List<org.gradle.process.CommandLineArgumentProvider> ()
com.android.build.gradle.internal.dsl.ApplicationBuildFeaturesImpl.getDataBinding: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.ApplicationBuildFeaturesImpl.getMlModelBinding: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.ApplicationBuildFeaturesImpl.setDataBinding: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.ApplicationBuildFeaturesImpl.setMlModelBinding: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.ApplicationExtensionImpl.dependenciesInfo: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DependenciesInfo, kotlin.Unit>)
com.android.build.gradle.internal.dsl.ApplicationExtensionImpl.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.internal.dsl.ApplicationExtensionImpl.getDependenciesInfo: com.android.build.api.dsl.DependenciesInfo ()
com.android.build.gradle.internal.dsl.ApplicationPublishingImpl.singleVariant: void (java.lang.String)
com.android.build.gradle.internal.dsl.ApplicationPublishingImpl.singleVariant: void (java.lang.String, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ApplicationSingleVariant, kotlin.Unit>)
com.android.build.gradle.internal.dsl.ApplicationSingleVariantImpl.getVariantName: java.lang.String ()
com.android.build.gradle.internal.dsl.ApplicationSingleVariantImpl.publishApk: void ()
com.android.build.gradle.internal.dsl.AssetPackExtensionImpl.dynamicDelivery: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DynamicDelivery, kotlin.Unit>)
com.android.build.gradle.internal.dsl.AssetPackExtensionImpl.getDynamicDelivery: com.android.build.api.dsl.DynamicDelivery ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.aaptOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AaptOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.adbOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AdbOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.androidResources: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidResources, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ApplicationBuildFeatures, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.buildToolsVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.buildTypes: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.ApplicationBuildType>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.bundle: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Bundle, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.compileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.CompileOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.compileSdkAddon: void (java.lang.String, java.lang.String, int)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.compileSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.composeOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ComposeOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.dataBinding: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DataBinding, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.debug: void (org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.ApplicationBuildType>, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ApplicationBuildType, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.defaultConfig: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ApplicationDefaultConfig, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.dependenciesInfo: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DependenciesInfo, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.flavorDimensions: void (java.lang.String[])
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getAaptOptions: com.android.build.api.dsl.AaptOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getAdbOptions: com.android.build.api.dsl.AdbOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getAndroidResources: com.android.build.api.dsl.AndroidResources ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getAssetPacks: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getBuildToolsVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getBundle: com.android.build.api.dsl.Bundle ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getCompileOptions: com.android.build.api.dsl.CompileOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getCompileSdk: java.lang.Integer ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getCompileSdkPreview: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getComposeOptions: com.android.build.api.dsl.ComposeOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDataBinding: com.android.build.api.dsl.DataBinding ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDefaultProguardFile: java.io.File (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDependenciesInfo: com.android.build.api.dsl.DependenciesInfo ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getDynamicFeatures: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getExperimentalProperties: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getFlavorDimensions: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getInstallation: com.android.build.api.dsl.Installation ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getLint: com.android.build.api.dsl.Lint ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getLintOptions: com.android.build.api.dsl.LintOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getNamespace: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getNdkPath: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getNdkVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getPackagingOptions: com.android.build.api.dsl.PackagingOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getPublishing: com.android.build.api.dsl.ApplicationPublishing ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getResourcePrefix: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getSdkComponents: com.android.build.api.dsl.SdkComponents ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet> ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getSplits: com.android.build.api.dsl.Splits ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getTestBuildType: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getTestCoverage: com.android.build.api.dsl.TestCoverage ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getTestFixtures: com.android.build.api.dsl.TestFixtures ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getTestNamespace: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.installation: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Installation, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JacocoOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.lint: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Lint, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.lintOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LintOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.packagingOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.PackagingOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.productFlavors: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.ApplicationProductFlavor>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.publishing: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ApplicationPublishing, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.release: void (org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.ApplicationBuildType>, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ApplicationBuildType, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setBuildToolsVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setCompileSdk: void (java.lang.Integer)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setCompileSdkPreview: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setNamespace: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setNdkPath: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setNdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setResourcePrefix: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setTestBuildType: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.setTestNamespace: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.signingConfigs: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.ApkSigningConfig>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.sourceSets: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.AndroidSourceSet>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.splits: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Splits, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.testCoverage: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestCoverage, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.testFixtures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestFixtures, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.useLibrary: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseAppModuleExtension.useLibrary: void (java.lang.String, boolean)
com.android.build.gradle.internal.dsl.BaseFlavor.aarMetadata: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AarMetadata, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseFlavor.buildConfigField: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.consumerProguardFile: java.lang.Object (java.lang.Object)
com.android.build.gradle.internal.dsl.BaseFlavor.consumerProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.gradle.internal.dsl.BaseFlavor.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuildOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseFlavor.getAarMetadata: com.android.build.api.dsl.AarMetadata ()
com.android.build.gradle.internal.dsl.BaseFlavor.getConsumerProguardFiles: java.util.List<java.io.File> ()
com.android.build.gradle.internal.dsl.BaseFlavor.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuildOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getJavaCompileOptions: com.android.build.api.dsl.JavaCompileOptions ()
com.android.build.gradle.internal.dsl.BaseFlavor.getMaxSdk: java.lang.Integer ()
com.android.build.gradle.internal.dsl.BaseFlavor.getMinSdk: java.lang.Integer ()
com.android.build.gradle.internal.dsl.BaseFlavor.getMinSdkPreview: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseFlavor.getNdk: com.android.build.api.dsl.Ndk ()
com.android.build.gradle.internal.dsl.BaseFlavor.getProguardFiles: java.util.List<java.io.File> ()
com.android.build.gradle.internal.dsl.BaseFlavor.getShaders: com.android.build.api.dsl.Shaders ()
com.android.build.gradle.internal.dsl.BaseFlavor.getSigningConfig: com.android.build.api.dsl.ApkSigningConfig ()
com.android.build.gradle.internal.dsl.BaseFlavor.getTargetSdk: java.lang.Integer ()
com.android.build.gradle.internal.dsl.BaseFlavor.getTargetSdkPreview: java.lang.String ()
com.android.build.gradle.internal.dsl.BaseFlavor.getTestProguardFiles: java.util.List<java.io.File> ()
com.android.build.gradle.internal.dsl.BaseFlavor.getVectorDrawables: com.android.build.api.dsl.VectorDrawables ()
com.android.build.gradle.internal.dsl.BaseFlavor.javaCompileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JavaCompileOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseFlavor.maxSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseFlavor.minSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseFlavor.minSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.ndk: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Ndk, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseFlavor.proguardFile: java.lang.Object (java.lang.Object)
com.android.build.gradle.internal.dsl.BaseFlavor.proguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.gradle.internal.dsl.BaseFlavor.resConfig: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.resConfigs: void (java.lang.String[])
com.android.build.gradle.internal.dsl.BaseFlavor.resConfigs: void (java.util.Collection<java.lang.String>)
com.android.build.gradle.internal.dsl.BaseFlavor.resValue: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.setMaxSdk: void (java.lang.Integer)
com.android.build.gradle.internal.dsl.BaseFlavor.setMinSdk: void (java.lang.Integer)
com.android.build.gradle.internal.dsl.BaseFlavor.setMinSdkPreview: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.setMinSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseFlavor.setMinSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.setSigningConfig: void (com.android.build.api.dsl.ApkSigningConfig)
com.android.build.gradle.internal.dsl.BaseFlavor.setTargetSdk: void (java.lang.Integer)
com.android.build.gradle.internal.dsl.BaseFlavor.setTargetSdkPreview: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.setTargetSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.setTestFunctionalTest: java.lang.Object (boolean)
com.android.build.gradle.internal.dsl.BaseFlavor.setTestHandleProfiling: java.lang.Object (boolean)
com.android.build.gradle.internal.dsl.BaseFlavor.setTestInstrumentationRunnerArguments: java.lang.Object (java.util.Map)
com.android.build.gradle.internal.dsl.BaseFlavor.shaders: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Shaders, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BaseFlavor.targetSdkVersion: void (int)
com.android.build.gradle.internal.dsl.BaseFlavor.targetSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.testInstrumentationRunnerArgument: void (java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BaseFlavor.testInstrumentationRunnerArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.gradle.internal.dsl.BaseFlavor.testProguardFile: java.lang.Object (java.lang.Object)
com.android.build.gradle.internal.dsl.BaseFlavor.testProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.gradle.internal.dsl.BaseFlavor.vectorDrawables: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.VectorDrawables, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.getAidl: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.getBuildConfig: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.getCompose: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.getRenderScript: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.getResValues: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.getShaders: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.getViewBinding: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.setAidl: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.setBuildConfig: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.setCompose: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.setRenderScript: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.setResValues: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.setShaders: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildFeaturesImpl.setViewBinding: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildType.aarMetadata: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AarMetadata, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BuildType.buildConfigField: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BuildType.consumerProguardFile: java.lang.Object (java.lang.Object)
com.android.build.gradle.internal.dsl.BuildType.consumerProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.gradle.internal.dsl.BuildType.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuildOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BuildType.getAarMetadata: com.android.build.api.dsl.AarMetadata ()
com.android.build.gradle.internal.dsl.BuildType.getConsumerProguardFiles: java.util.List<java.io.File> ()
com.android.build.gradle.internal.dsl.BuildType.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuildOptions ()
com.android.build.gradle.internal.dsl.BuildType.getJavaCompileOptions: com.android.build.api.dsl.JavaCompileOptions ()
com.android.build.gradle.internal.dsl.BuildType.getMatchingFallbacks: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.BuildType.getName: java.lang.String ()
com.android.build.gradle.internal.dsl.BuildType.getNdk: com.android.build.api.dsl.Ndk ()
com.android.build.gradle.internal.dsl.BuildType.getPostprocessing: com.android.build.api.dsl.PostProcessing ()
com.android.build.gradle.internal.dsl.BuildType.getProguardFiles: java.util.List<java.io.File> ()
com.android.build.gradle.internal.dsl.BuildType.getRenderscriptOptimLevel: int ()
com.android.build.gradle.internal.dsl.BuildType.getShaders: com.android.build.api.dsl.Shaders ()
com.android.build.gradle.internal.dsl.BuildType.getSigningConfig: com.android.build.api.dsl.ApkSigningConfig ()
com.android.build.gradle.internal.dsl.BuildType.getTestProguardFiles: java.util.List<java.io.File> ()
com.android.build.gradle.internal.dsl.BuildType.initWith: void (com.android.build.api.dsl.BuildType)
com.android.build.gradle.internal.dsl.BuildType.isCrunchPngs: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.BuildType.isDebuggable: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isDefault: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isEmbedMicroApp: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isJniDebuggable: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isMinifyEnabled: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isPseudoLocalesEnabled: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isRenderscriptDebuggable: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isShrinkResources: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isTestCoverageEnabled: boolean ()
com.android.build.gradle.internal.dsl.BuildType.isZipAlignEnabled: boolean ()
com.android.build.gradle.internal.dsl.BuildType.javaCompileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JavaCompileOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BuildType.ndk: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Ndk, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BuildType.postprocessing: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.PostProcessing, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BuildType.proguardFile: java.lang.Object (java.lang.Object)
com.android.build.gradle.internal.dsl.BuildType.proguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.gradle.internal.dsl.BuildType.resValue: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.gradle.internal.dsl.BuildType.setCrunchPngs: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.BuildType.setDebuggable: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setDefault: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setEmbedMicroApp: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setJniDebuggable: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setMatchingFallbacks: void (java.lang.String[])
com.android.build.gradle.internal.dsl.BuildType.setMatchingFallbacks: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.BuildType.setMinifyEnabled: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setPseudoLocalesEnabled: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setRenderscriptDebuggable: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setRenderscriptOptimLevel: void (int)
com.android.build.gradle.internal.dsl.BuildType.setShrinkResources: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setSigningConfig: void (com.android.build.api.dsl.ApkSigningConfig)
com.android.build.gradle.internal.dsl.BuildType.setTestCoverageEnabled: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.setZipAlignEnabled: void (boolean)
com.android.build.gradle.internal.dsl.BuildType.shaders: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Shaders, kotlin.Unit>)
com.android.build.gradle.internal.dsl.BuildType.testProguardFile: java.lang.Object (java.lang.Object)
com.android.build.gradle.internal.dsl.BuildType.testProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.gradle.internal.dsl.CmakeOptions.buildStagingDirectory: void (java.lang.Object)
com.android.build.gradle.internal.dsl.CmakeOptions.getBuildStagingDirectory: java.io.File ()
com.android.build.gradle.internal.dsl.CmakeOptions.getPath: java.io.File ()
com.android.build.gradle.internal.dsl.CmakeOptions.getVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.CmakeOptions.path: void (java.lang.Object)
com.android.build.gradle.internal.dsl.CmakeOptions.setBuildStagingDirectory: void (java.io.File)
com.android.build.gradle.internal.dsl.CmakeOptions.setPath: void (java.io.File)
com.android.build.gradle.internal.dsl.CmakeOptions.setVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.aaptOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AaptOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.adbOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AdbOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.buildFeatures: void (kotlin.jvm.functions.Function1<? super BuildFeaturesT, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.buildToolsVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.buildTypes: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<BuildTypeT>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.compileSdkAddon: void (java.lang.String, java.lang.String, int)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.compileSdkVersion: void (int)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.composeOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ComposeOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.dataBinding: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DataBinding, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.debug: void (org.gradle.api.NamedDomainObjectContainer<BuildTypeT>, kotlin.jvm.functions.Function1<? super BuildTypeT, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.defaultConfig: void (kotlin.jvm.functions.Function1<? super DefaultConfigT, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.flavorDimensions: void (java.lang.String[])
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getAaptOptions: com.android.build.api.dsl.AaptOptions ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getAdbOptions: com.android.build.api.dsl.AdbOptions ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getBuildToolsVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<BuildTypeT> ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getCompileSdk: java.lang.Integer ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getCompileSdkPreview: java.lang.String ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getComposeOptions: com.android.build.api.dsl.ComposeOptions ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getDataBinding: com.android.build.api.dsl.DataBinding ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getDefaultConfig: DefaultConfigT ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getDefaultProguardFile: java.io.File (java.lang.String)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getExperimentalProperties: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getInstallation: com.android.build.api.dsl.Installation ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getLintOptions: com.android.build.api.dsl.LintOptions ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<ProductFlavorT> ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getSdkComponents: com.android.build.api.dsl.SdkComponents ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet> ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getTestCoverage: com.android.build.api.dsl.TestCoverage ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.gradle.internal.dsl.CommonExtensionImpl.installation: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Installation, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JacocoOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.lintOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LintOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.productFlavors: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<ProductFlavorT>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.release: void (org.gradle.api.NamedDomainObjectContainer<BuildTypeT>, kotlin.jvm.functions.Function1<? super BuildTypeT, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.setBuildToolsVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.setCompileSdk: void (java.lang.Integer)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.setCompileSdkPreview: void (java.lang.String)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.signingConfigs: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.ApkSigningConfig>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.sourceSets: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.AndroidSourceSet>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.testCoverage: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestCoverage, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.useLibrary: void (java.lang.String)
com.android.build.gradle.internal.dsl.CommonExtensionImpl.useLibrary: void (java.lang.String, boolean)
com.android.build.gradle.internal.dsl.ComposeOptionsImpl.getKotlinCompilerExtensionVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.ComposeOptionsImpl.getKotlinCompilerVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.ComposeOptionsImpl.getUseLiveLiterals: boolean ()
com.android.build.gradle.internal.dsl.ComposeOptionsImpl.setKotlinCompilerExtensionVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.ComposeOptionsImpl.setKotlinCompilerVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.ComposeOptionsImpl.setUseLiveLiterals: void (boolean)
com.android.build.gradle.internal.dsl.DataBindingOptions.getAddDefaultAdapters: boolean ()
com.android.build.gradle.internal.dsl.DataBindingOptions.getAddKtx: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.DataBindingOptions.getVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.DataBindingOptions.isEnabled: boolean ()
com.android.build.gradle.internal.dsl.DataBindingOptions.isEnabledForTests: boolean ()
com.android.build.gradle.internal.dsl.DataBindingOptions.setAddDefaultAdapters: void (boolean)
com.android.build.gradle.internal.dsl.DataBindingOptions.setAddKtx: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.DataBindingOptions.setEnabled: void (boolean)
com.android.build.gradle.internal.dsl.DataBindingOptions.setEnabledForTests: void (boolean)
com.android.build.gradle.internal.dsl.DataBindingOptions.setVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.DensitySplitOptions.compatibleScreens: void (java.lang.String[])
com.android.build.gradle.internal.dsl.DependenciesInfoImpl.getIncludeInApk: boolean ()
com.android.build.gradle.internal.dsl.DependenciesInfoImpl.getIncludeInBundle: boolean ()
com.android.build.gradle.internal.dsl.DependenciesInfoImpl.setIncludeInApk: void (boolean)
com.android.build.gradle.internal.dsl.DependenciesInfoImpl.setIncludeInBundle: void (boolean)
com.android.build.gradle.internal.dsl.DeviceGroup.getName: java.lang.String ()
com.android.build.gradle.internal.dsl.DeviceGroup.getTargetDevices: org.gradle.api.DomainObjectSet<com.android.build.api.dsl.Device> ()
com.android.build.gradle.internal.dsl.DynamicFeatureBuildFeaturesImpl.getDataBinding: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.DynamicFeatureBuildFeaturesImpl.getMlModelBinding: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.DynamicFeatureBuildFeaturesImpl.setDataBinding: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.DynamicFeatureBuildFeaturesImpl.setMlModelBinding: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.aaptOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AaptOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.adbOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AdbOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.androidResources: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidResources, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DynamicFeatureBuildFeatures, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.buildToolsVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.buildTypes: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.DynamicFeatureBuildType>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.compileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.CompileOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.compileSdkAddon: void (java.lang.String, java.lang.String, int)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.compileSdkVersion: void (int)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.compileSdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.composeOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ComposeOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.dataBinding: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DataBinding, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.debug: void (org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.DynamicFeatureBuildType>, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DynamicFeatureBuildType, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.defaultConfig: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DynamicFeatureDefaultConfig, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.flavorDimensions: void (java.lang.String[])
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getAaptOptions: com.android.build.api.dsl.AaptOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getAdbOptions: com.android.build.api.dsl.AdbOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getAndroidResources: com.android.build.api.dsl.AndroidResources ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getBuildToolsVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.BuildType> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getCompileOptions: com.android.build.api.dsl.CompileOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getCompileSdk: java.lang.Integer ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getCompileSdkPreview: java.lang.String ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getComposeOptions: com.android.build.api.dsl.ComposeOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getDataBinding: com.android.build.api.dsl.DataBinding ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getDefaultConfig: com.android.build.api.dsl.DefaultConfig ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getDefaultProguardFile: java.io.File (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getExperimentalProperties: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getFlavorDimensions: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getInstallation: com.android.build.api.dsl.Installation ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getLint: com.android.build.api.dsl.Lint ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getLintOptions: com.android.build.api.dsl.LintOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getNamespace: java.lang.String ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getNdkPath: java.lang.String ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getNdkVersion: java.lang.String ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getPackagingOptions: com.android.build.api.dsl.PackagingOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.ProductFlavor> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getResourcePrefix: java.lang.String ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getSdkComponents: com.android.build.api.dsl.SdkComponents ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.internal.dsl.SigningConfig> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.gradle.api.AndroidSourceSet> ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getSplits: com.android.build.api.dsl.Splits ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getTestBuildType: java.lang.String ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getTestCoverage: com.android.build.api.dsl.TestCoverage ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getTestFixtures: com.android.build.api.dsl.TestFixtures ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getTestNamespace: java.lang.String ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.installation: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Installation, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JacocoOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.lint: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Lint, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.lintOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LintOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.packagingOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.PackagingOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.productFlavors: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.DynamicFeatureProductFlavor>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.release: void (org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.DynamicFeatureBuildType>, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DynamicFeatureBuildType, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setBuildToolsVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setCompileSdk: void (java.lang.Integer)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setCompileSdkPreview: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setNamespace: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setNdkPath: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setNdkVersion: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setResourcePrefix: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setTestBuildType: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.setTestNamespace: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.signingConfigs: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.ApkSigningConfig>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.sourceSets: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.AndroidSourceSet>, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.splits: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Splits, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.testCoverage: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestCoverage, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.testFixtures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestFixtures, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.useLibrary: void (java.lang.String)
com.android.build.gradle.internal.dsl.DynamicFeatureExtension.useLibrary: void (java.lang.String, boolean)
com.android.build.gradle.internal.dsl.DynamicFeatureExtensionImpl.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.internal.dsl.EmulatorSnapshots.getCompressSnapshots: boolean ()
com.android.build.gradle.internal.dsl.EmulatorSnapshots.getEnable: boolean ()
com.android.build.gradle.internal.dsl.EmulatorSnapshots.getEnableForTestFailures: boolean ()
com.android.build.gradle.internal.dsl.EmulatorSnapshots.getMaxSnapshots: int ()
com.android.build.gradle.internal.dsl.EmulatorSnapshots.getMaxSnapshotsForTestFailures: int ()
com.android.build.gradle.internal.dsl.EmulatorSnapshots.retainAll: void ()
com.android.build.gradle.internal.dsl.EmulatorSnapshots.setCompressSnapshots: void (boolean)
com.android.build.gradle.internal.dsl.EmulatorSnapshots.setEnable: void (boolean)
com.android.build.gradle.internal.dsl.EmulatorSnapshots.setEnableForTestFailures: void (boolean)
com.android.build.gradle.internal.dsl.EmulatorSnapshots.setMaxSnapshots: void (int)
com.android.build.gradle.internal.dsl.EmulatorSnapshots.setMaxSnapshotsForTestFailures: void (int)
com.android.build.gradle.internal.dsl.ExternalNativeBuild.cmake: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Cmake, kotlin.Unit>)
com.android.build.gradle.internal.dsl.ExternalNativeBuild.getCmake: com.android.build.api.dsl.Cmake ()
com.android.build.gradle.internal.dsl.ExternalNativeBuild.getNdkBuild: com.android.build.api.dsl.NdkBuild ()
com.android.build.gradle.internal.dsl.ExternalNativeBuild.ndkBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.NdkBuild, kotlin.Unit>)
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.cmake: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeCmakeOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.getCmake: com.android.build.api.dsl.ExternalNativeCmakeOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.getNdkBuild: com.android.build.api.dsl.ExternalNativeNdkBuildOptions ()
com.android.build.gradle.internal.dsl.ExternalNativeBuildOptions.ndkBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeNdkBuildOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.abiFilters: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.arguments: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.cFlags: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.cppFlags: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getCFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeCmakeOptions.targets: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.abiFilters: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.arguments: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.cFlags: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.cppFlags: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getCFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.ExternalNativeNdkBuildOptions.targets: void (java.lang.String[])
com.android.build.gradle.internal.dsl.JavaCompileOptions.annotationProcessorOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AnnotationProcessorOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.JavaCompileOptions.getAnnotationProcessorOptions: com.android.build.api.dsl.AnnotationProcessorOptions ()
com.android.build.gradle.internal.dsl.LibraryBuildFeaturesImpl.getAndroidResources: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.LibraryBuildFeaturesImpl.getDataBinding: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.LibraryBuildFeaturesImpl.getMlModelBinding: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.LibraryBuildFeaturesImpl.getPrefabPublishing: java.lang.Boolean ()
com.android.build.gradle.internal.dsl.LibraryBuildFeaturesImpl.setAndroidResources: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.LibraryBuildFeaturesImpl.setDataBinding: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.LibraryBuildFeaturesImpl.setMlModelBinding: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.LibraryBuildFeaturesImpl.setPrefabPublishing: void (java.lang.Boolean)
com.android.build.gradle.internal.dsl.LibraryExtensionImpl.getAidlPackagedList: java.util.Collection<java.lang.String> ()
com.android.build.gradle.internal.dsl.LibraryExtensionImpl.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.internal.dsl.LibraryExtensionImpl.getPrefab: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.PrefabPackagingOptions> ()
com.android.build.gradle.internal.dsl.LibraryPublishingImpl.multipleVariants: void (java.lang.String, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.MultipleVariants, kotlin.Unit>)
com.android.build.gradle.internal.dsl.LibraryPublishingImpl.multipleVariants: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.MultipleVariants, kotlin.Unit>)
com.android.build.gradle.internal.dsl.LibraryPublishingImpl.singleVariant: void (java.lang.String)
com.android.build.gradle.internal.dsl.LibraryPublishingImpl.singleVariant: void (java.lang.String, kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LibrarySingleVariant, kotlin.Unit>)
com.android.build.gradle.internal.dsl.LibrarySingleVariantImpl.getVariantName: java.lang.String ()
com.android.build.gradle.internal.dsl.LintOptions.baseline: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.baseline: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.check: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.check: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.checkOnly: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.checkOnly: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.disable: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.disable: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.enable: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.enable: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.error: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.error: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.fatal: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.fatal: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.getDisable: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.LintOptions.getEnable: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.LintOptions.getHtmlOutput: java.io.File ()
com.android.build.gradle.internal.dsl.LintOptions.getSarifOutput: java.io.File ()
com.android.build.gradle.internal.dsl.LintOptions.getTextOutput: java.io.File ()
com.android.build.gradle.internal.dsl.LintOptions.getXmlOutput: java.io.File ()
com.android.build.gradle.internal.dsl.LintOptions.ignore: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.ignore: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.informational: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.informational: void (java.lang.String[])
com.android.build.gradle.internal.dsl.LintOptions.isCheckTestSources: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.isIgnoreTestSources: boolean ()
com.android.build.gradle.internal.dsl.LintOptions.setCheckTestSources: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setHtmlOutput: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.setIgnoreTestSources: void (boolean)
com.android.build.gradle.internal.dsl.LintOptions.setSarifOutput: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.setTextOutput: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.setXmlOutput: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.textOutput: void (java.io.File)
com.android.build.gradle.internal.dsl.LintOptions.textOutput: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.warning: void (java.lang.String)
com.android.build.gradle.internal.dsl.LintOptions.warning: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ManagedVirtualDevice.getAbi: java.lang.String ()
com.android.build.gradle.internal.dsl.ManagedVirtualDevice.getApiLevel: int ()
com.android.build.gradle.internal.dsl.ManagedVirtualDevice.getDevice: java.lang.String ()
com.android.build.gradle.internal.dsl.ManagedVirtualDevice.getName: java.lang.String ()
com.android.build.gradle.internal.dsl.ManagedVirtualDevice.getSystemImageSource: java.lang.String ()
com.android.build.gradle.internal.dsl.ManagedVirtualDevice.setAbi: void (java.lang.String)
com.android.build.gradle.internal.dsl.ManagedVirtualDevice.setApiLevel: void (int)
com.android.build.gradle.internal.dsl.ManagedVirtualDevice.setDevice: void (java.lang.String)
com.android.build.gradle.internal.dsl.ManagedVirtualDevice.setSystemImageSource: void (java.lang.String)
com.android.build.gradle.internal.dsl.MultipleVariantsImpl.allVariants: void ()
com.android.build.gradle.internal.dsl.MultipleVariantsImpl.includeBuildTypeValues: void (java.lang.String[])
com.android.build.gradle.internal.dsl.MultipleVariantsImpl.includeFlavorDimensionAndValues: void (java.lang.String, java.lang.String[])
com.android.build.gradle.internal.dsl.NdkBuildOptions.buildStagingDirectory: void (java.lang.Object)
com.android.build.gradle.internal.dsl.NdkBuildOptions.getBuildStagingDirectory: java.io.File ()
com.android.build.gradle.internal.dsl.NdkBuildOptions.getPath: java.io.File ()
com.android.build.gradle.internal.dsl.NdkBuildOptions.path: void (java.lang.Object)
com.android.build.gradle.internal.dsl.NdkBuildOptions.setBuildStagingDirectory: void (java.io.File)
com.android.build.gradle.internal.dsl.NdkBuildOptions.setPath: void (java.io.File)
com.android.build.gradle.internal.dsl.NdkOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.gradle.internal.dsl.NdkOptions.getCFlags: java.lang.String ()
com.android.build.gradle.internal.dsl.NdkOptions.getDebugSymbolLevel: java.lang.String ()
com.android.build.gradle.internal.dsl.NdkOptions.getJobs: java.lang.Integer ()
com.android.build.gradle.internal.dsl.NdkOptions.getLdLibs: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.NdkOptions.getModuleName: java.lang.String ()
com.android.build.gradle.internal.dsl.NdkOptions.getStl: java.lang.String ()
com.android.build.gradle.internal.dsl.NdkOptions.setCFlags: void (java.lang.String)
com.android.build.gradle.internal.dsl.NdkOptions.setDebugSymbolLevel: void (java.lang.String)
com.android.build.gradle.internal.dsl.NdkOptions.setJobs: void (java.lang.Integer)
com.android.build.gradle.internal.dsl.NdkOptions.setModuleName: void (java.lang.String)
com.android.build.gradle.internal.dsl.NdkOptions.setStl: void (java.lang.String)
com.android.build.gradle.internal.dsl.PackagingOptions.doNotStrip: void (java.lang.String)
com.android.build.gradle.internal.dsl.PackagingOptions.exclude: void (java.lang.String)
com.android.build.gradle.internal.dsl.PackagingOptions.merge: void (java.lang.String)
com.android.build.gradle.internal.dsl.PackagingOptions.pickFirst: void (java.lang.String)
com.android.build.gradle.internal.dsl.PostProcessingBlock.consumerProguardFile: void (java.lang.Object)
com.android.build.gradle.internal.dsl.PostProcessingBlock.consumerProguardFiles: void (java.lang.Object[])
com.android.build.gradle.internal.dsl.PostProcessingBlock.getCodeShrinker: java.lang.String ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.initWith: void (com.android.build.api.dsl.PostProcessing)
com.android.build.gradle.internal.dsl.PostProcessingBlock.isObfuscate: boolean ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.isOptimizeCode: boolean ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.isRemoveUnusedCode: boolean ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.isRemoveUnusedResources: boolean ()
com.android.build.gradle.internal.dsl.PostProcessingBlock.proguardFile: void (java.lang.Object)
com.android.build.gradle.internal.dsl.PostProcessingBlock.proguardFiles: void (java.lang.Object[])
com.android.build.gradle.internal.dsl.PostProcessingBlock.setCodeShrinker: void (java.lang.String)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setConsumerProguardFiles: void (java.util.List<?>)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setObfuscate: void (boolean)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setOptimizeCode: void (boolean)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setProguardFiles: void (java.util.List<?>)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setRemoveUnusedCode: void (boolean)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setRemoveUnusedResources: void (boolean)
com.android.build.gradle.internal.dsl.PostProcessingBlock.setTestProguardFiles: void (java.util.List<?>)
com.android.build.gradle.internal.dsl.PostProcessingBlock.testProguardFile: void (java.lang.Object)
com.android.build.gradle.internal.dsl.PostProcessingBlock.testProguardFiles: void (java.lang.Object[])
com.android.build.gradle.internal.dsl.PrefabPackagingOptions.getHeaders: java.lang.String ()
com.android.build.gradle.internal.dsl.PrefabPackagingOptions.getLibraryName: java.lang.String ()
com.android.build.gradle.internal.dsl.PrefabPackagingOptions.getName: java.lang.String ()
com.android.build.gradle.internal.dsl.PrefabPackagingOptions.setHeaders: void (java.lang.String)
com.android.build.gradle.internal.dsl.PrefabPackagingOptions.setLibraryName: void (java.lang.String)
com.android.build.gradle.internal.dsl.PrefabPackagingOptions.setName: void (java.lang.String)
com.android.build.gradle.internal.dsl.ProductFlavor.getMatchingFallbacks: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ProductFlavor.getSigningConfig: com.android.build.api.dsl.ApkSigningConfig ()
com.android.build.gradle.internal.dsl.ProductFlavor.isDefault: boolean ()
com.android.build.gradle.internal.dsl.ProductFlavor.setDefault: void (boolean)
com.android.build.gradle.internal.dsl.ProductFlavor.setMatchingFallbacks: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ProductFlavor.setMatchingFallbacks: void (java.util.List<java.lang.String>)
com.android.build.gradle.internal.dsl.ProductFlavor.setSigningConfig: void (com.android.build.api.dsl.ApkSigningConfig)
com.android.build.gradle.internal.dsl.SdkComponentsImpl.getAdb: org.gradle.api.provider.Provider<org.gradle.api.file.RegularFile> ()
com.android.build.gradle.internal.dsl.SdkComponentsImpl.getNdkDirectory: org.gradle.api.provider.Provider<org.gradle.api.file.Directory> ()
com.android.build.gradle.internal.dsl.SdkComponentsImpl.getSdkDirectory: org.gradle.api.provider.Provider<org.gradle.api.file.Directory> ()
com.android.build.gradle.internal.dsl.ShaderOptions.getGlslcArgs: java.util.List<java.lang.String> ()
com.android.build.gradle.internal.dsl.ShaderOptions.getScopedGlslcArgs: com.google.common.collect.ListMultimap<java.lang.String, java.lang.String> ()
com.android.build.gradle.internal.dsl.ShaderOptions.glslcArgs: void (java.lang.String[])
com.android.build.gradle.internal.dsl.ShaderOptions.glslcScopedArgs: void (java.lang.String, java.lang.String[])
com.android.build.gradle.internal.dsl.SigningConfig.initWith: void (com.android.build.api.dsl.SigningConfig)
com.android.build.gradle.internal.dsl.SigningConfigImpl.getStoreFile: java.io.File ()
com.android.build.gradle.internal.dsl.SigningConfigImpl.setStoreFile: void (java.io.File)
com.android.build.gradle.internal.dsl.SplitOptions.exclude: void (java.lang.String[])
com.android.build.gradle.internal.dsl.SplitOptions.include: void (java.lang.String[])
com.android.build.gradle.internal.dsl.SplitOptions.reset: void ()
com.android.build.gradle.internal.dsl.Splits.getAbiFilters: java.util.Collection ()
com.android.build.gradle.internal.dsl.Splits.getDensityFilters: java.util.Collection ()
com.android.build.gradle.internal.dsl.TestExtensionImpl.getBuildFeatures: com.android.build.api.dsl.BuildFeatures ()
com.android.build.gradle.internal.dsl.TestExtensionImpl.getTargetProjectPath: java.lang.String ()
com.android.build.gradle.internal.dsl.TestExtensionImpl.setTargetProjectPath: void (java.lang.String)
com.android.build.gradle.internal.dsl.TestFixturesImpl.getAndroidResources: boolean ()
com.android.build.gradle.internal.dsl.TestFixturesImpl.getEnable: boolean ()
com.android.build.gradle.internal.dsl.TestFixturesImpl.setAndroidResources: void (boolean)
com.android.build.gradle.internal.dsl.TestFixturesImpl.setEnable: void (boolean)
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.all: void (kotlin.jvm.functions.Function1<? super org.gradle.api.tasks.testing.Test, kotlin.Unit>)
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.isIncludeAndroidResources: boolean ()
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.isReturnDefaultValues: boolean ()
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.setIncludeAndroidResources: void (boolean)
com.android.build.gradle.internal.dsl.TestOptions$UnitTestOptions.setReturnDefaultValues: void (boolean)
com.android.build.gradle.internal.dsl.TestOptions.emulatorSnapshots: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.EmulatorSnapshots, kotlin.Unit>)
com.android.build.gradle.internal.dsl.TestOptions.failureRetention: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.FailureRetention, kotlin.Unit>)
com.android.build.gradle.internal.dsl.TestOptions.getAnimationsDisabled: boolean ()
com.android.build.gradle.internal.dsl.TestOptions.getDeviceGroups: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.DeviceGroup> ()
com.android.build.gradle.internal.dsl.TestOptions.getDevices: org.gradle.api.ExtensiblePolymorphicDomainObjectContainer<com.android.build.api.dsl.Device> ()
com.android.build.gradle.internal.dsl.TestOptions.getEmulatorSnapshots: com.android.build.api.dsl.EmulatorSnapshots ()
com.android.build.gradle.internal.dsl.TestOptions.getExecution: java.lang.String ()
com.android.build.gradle.internal.dsl.TestOptions.getFailureRetention: com.android.build.api.dsl.FailureRetention ()
com.android.build.gradle.internal.dsl.TestOptions.getReportDir: java.lang.String ()
com.android.build.gradle.internal.dsl.TestOptions.getResultsDir: java.lang.String ()
com.android.build.gradle.internal.dsl.TestOptions.getUnitTests: com.android.build.api.dsl.UnitTestOptions ()
com.android.build.gradle.internal.dsl.TestOptions.setAnimationsDisabled: void (boolean)
com.android.build.gradle.internal.dsl.TestOptions.setExecution: void (java.lang.String)
com.android.build.gradle.internal.dsl.TestOptions.setReportDir: void (java.lang.String)
com.android.build.gradle.internal.dsl.TestOptions.setResultsDir: void (java.lang.String)
com.android.build.gradle.internal.dsl.TestOptions.unitTests: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.UnitTestOptions, kotlin.Unit>)
com.android.build.gradle.internal.dsl.TestedExtensionImpl.getTestBuildType: java.lang.String ()
com.android.build.gradle.internal.dsl.TestedExtensionImpl.getTestFixtures: com.android.build.api.dsl.TestFixtures ()
com.android.build.gradle.internal.dsl.TestedExtensionImpl.getTestNamespace: java.lang.String ()
com.android.build.gradle.internal.dsl.TestedExtensionImpl.setTestBuildType: void (java.lang.String)
com.android.build.gradle.internal.dsl.TestedExtensionImpl.setTestNamespace: void (java.lang.String)
com.android.build.gradle.internal.dsl.TestedExtensionImpl.testFixtures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestFixtures, kotlin.Unit>)
com.android.build.gradle.internal.dsl.VectorDrawablesOptions.generatedDensities: void (java.lang.String[])
com.android.builder.core.AbstractProductFlavor.getApplicationId: java.lang.String ()
com.android.builder.core.AbstractProductFlavor.getDimension: java.lang.String ()
com.android.builder.core.AbstractProductFlavor.getName: java.lang.String ()
com.android.builder.core.AbstractProductFlavor.getRenderscriptNdkModeEnabled: java.lang.Boolean ()
com.android.builder.core.AbstractProductFlavor.getRenderscriptSupportModeBlasEnabled: java.lang.Boolean ()
com.android.builder.core.AbstractProductFlavor.getRenderscriptSupportModeEnabled: java.lang.Boolean ()
com.android.builder.core.AbstractProductFlavor.getRenderscriptTargetApi: java.lang.Integer ()
com.android.builder.core.AbstractProductFlavor.getResourceConfigurations: java.util.Set<java.lang.String> ()
com.android.builder.core.AbstractProductFlavor.getTestApplicationId: java.lang.String ()
com.android.builder.core.AbstractProductFlavor.getTestFunctionalTest: java.lang.Boolean ()
com.android.builder.core.AbstractProductFlavor.getTestHandleProfiling: java.lang.Boolean ()
com.android.builder.core.AbstractProductFlavor.getTestInstrumentationRunner: java.lang.String ()
com.android.builder.core.AbstractProductFlavor.getTestInstrumentationRunnerArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.builder.core.AbstractProductFlavor.getVersionCode: java.lang.Integer ()
com.android.builder.core.AbstractProductFlavor.getVersionName: java.lang.String ()
com.android.builder.core.AbstractProductFlavor.getWearAppUnbundled: java.lang.Boolean ()
com.android.builder.core.AbstractProductFlavor.missingDimensionStrategy: void (java.lang.String, java.lang.String)
com.android.builder.core.AbstractProductFlavor.missingDimensionStrategy: void (java.lang.String, java.lang.String[])
com.android.builder.core.AbstractProductFlavor.missingDimensionStrategy: void (java.lang.String, java.util.List<java.lang.String>)
com.android.builder.core.AbstractProductFlavor.setApplicationId: void (java.lang.String)
com.android.builder.core.AbstractProductFlavor.setDimension: java.lang.Void (java.lang.String)
com.android.builder.core.AbstractProductFlavor.setDimension: void (java.lang.String)
com.android.builder.core.AbstractProductFlavor.setRenderscriptNdkModeEnabled: void (java.lang.Boolean)
com.android.builder.core.AbstractProductFlavor.setRenderscriptSupportModeBlasEnabled: void (java.lang.Boolean)
com.android.builder.core.AbstractProductFlavor.setRenderscriptSupportModeEnabled: void (java.lang.Boolean)
com.android.builder.core.AbstractProductFlavor.setRenderscriptTargetApi: void (java.lang.Integer)
com.android.builder.core.AbstractProductFlavor.setTestApplicationId: void (java.lang.String)
com.android.builder.core.AbstractProductFlavor.setTestFunctionalTest: void (java.lang.Boolean)
com.android.builder.core.AbstractProductFlavor.setTestHandleProfiling: void (java.lang.Boolean)
com.android.builder.core.AbstractProductFlavor.setTestInstrumentationRunner: void (java.lang.String)
com.android.builder.core.AbstractProductFlavor.setVersionCode: void (java.lang.Integer)
com.android.builder.core.AbstractProductFlavor.setVersionName: void (java.lang.String)
com.android.builder.core.AbstractProductFlavor.setWearAppUnbundled: void (java.lang.Boolean)
com.android.builder.core.DefaultVectorDrawablesOptions.getGeneratedDensities: java.util.Set<java.lang.String> ()
com.android.builder.core.DefaultVectorDrawablesOptions.getUseSupportLibrary: java.lang.Boolean ()
com.android.builder.core.DefaultVectorDrawablesOptions.setUseSupportLibrary: void (java.lang.Boolean)
com.android.builder.internal.BaseConfigImpl.addManifestPlaceholders: void (java.util.Map<java.lang.String, ?>)
com.android.builder.internal.BaseConfigImpl.getApplicationIdSuffix: java.lang.String ()
com.android.builder.internal.BaseConfigImpl.getManifestPlaceholders: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.builder.internal.BaseConfigImpl.getMultiDexEnabled: java.lang.Boolean ()
com.android.builder.internal.BaseConfigImpl.getMultiDexKeepFile: java.io.File ()
com.android.builder.internal.BaseConfigImpl.getMultiDexKeepProguard: java.io.File ()
com.android.builder.internal.BaseConfigImpl.getVersionNameSuffix: java.lang.String ()
com.android.builder.internal.BaseConfigImpl.setApplicationIdSuffix: void (java.lang.String)
com.android.builder.internal.BaseConfigImpl.setManifestPlaceholders: java.lang.Void (java.util.Map<java.lang.String, ?>)
com.android.builder.internal.BaseConfigImpl.setMultiDexEnabled: void (java.lang.Boolean)
com.android.builder.internal.BaseConfigImpl.setMultiDexKeepFile: void (java.io.File)
com.android.builder.internal.BaseConfigImpl.setMultiDexKeepProguard: void (java.io.File)
com.android.builder.internal.BaseConfigImpl.setVersionNameSuffix: void (java.lang.String)
com.android.builder.signing.DefaultSigningConfig.getEnableV1Signing: java.lang.Boolean ()
com.android.builder.signing.DefaultSigningConfig.getEnableV2Signing: java.lang.Boolean ()
com.android.builder.signing.DefaultSigningConfig.getEnableV3Signing: java.lang.Boolean ()
com.android.builder.signing.DefaultSigningConfig.getEnableV4Signing: java.lang.Boolean ()
com.android.builder.signing.DefaultSigningConfig.getKeyAlias: java.lang.String ()
com.android.builder.signing.DefaultSigningConfig.getKeyPassword: java.lang.String ()
com.android.builder.signing.DefaultSigningConfig.getName: java.lang.String ()
com.android.builder.signing.DefaultSigningConfig.getStoreFile: java.io.File ()
com.android.builder.signing.DefaultSigningConfig.getStorePassword: java.lang.String ()
com.android.builder.signing.DefaultSigningConfig.getStoreType: java.lang.String ()
com.android.builder.signing.DefaultSigningConfig.isV1SigningEnabled: boolean ()
com.android.builder.signing.DefaultSigningConfig.isV2SigningEnabled: boolean ()
com.android.builder.signing.DefaultSigningConfig.setEnableV1Signing: void (java.lang.Boolean)
com.android.builder.signing.DefaultSigningConfig.setEnableV2Signing: void (java.lang.Boolean)
com.android.builder.signing.DefaultSigningConfig.setEnableV3Signing: void (java.lang.Boolean)
com.android.builder.signing.DefaultSigningConfig.setEnableV4Signing: void (java.lang.Boolean)
com.android.builder.signing.DefaultSigningConfig.setKeyAlias: void (java.lang.String)
com.android.builder.signing.DefaultSigningConfig.setKeyPassword: void (java.lang.String)
com.android.builder.signing.DefaultSigningConfig.setStoreFile: void (java.io.File)
com.android.builder.signing.DefaultSigningConfig.setStorePassword: void (java.lang.String)
com.android.builder.signing.DefaultSigningConfig.setStoreType: void (java.lang.String)
com.android.builder.signing.DefaultSigningConfig.setV1SigningEnabled: void (boolean)
com.android.builder.signing.DefaultSigningConfig.setV2SigningEnabled: void (boolean)
