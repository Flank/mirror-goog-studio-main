<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 3.6.0-dev">

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/BaseExtension.java"
            line="949"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/BasePlugin.java"
            line="680"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/dsl/BuildType.java"
            line="129"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/dsl/BuildType.java"
            line="129"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/dsl/BuildType.java"
            line="132"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/dsl/BuildType.java"
            line="132"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/ExtractProguardFiles.java"
            line="38"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/ExtractProguardFiles.java"
            line="52"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/ExtractProguardFiles.java"
            line="55"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/featuresplit/FeatureSetMetadataWriterTask.kt"
            line="127"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/res/LinkApplicationAndroidResourcesTask.kt"
            line="809"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/MergeConsumerProguardFilesTask.java"
            line="75"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/transforms/ProGuardTransform.java"
            line="101"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope">
        <location
            file="src/main/java/com/android/build/gradle/internal/transforms/ProGuardTransform.java"
            line="101"/>
    </issue>

    <issue
        id="UseValueOf"
        message="Use `Integer.valueOf(index)` instead">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleReportDependenciesTask.kt"
            line="73"/>
    </issue>

    <issue
        id="UseValueOf"
        message="Use `Integer.valueOf(libraryList.size)` instead">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleReportDependenciesTask.kt"
            line="86"/>
    </issue>

    <issue
        id="UseValueOf"
        message="Use `Integer.valueOf(origIndex)` instead">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleReportDependenciesTask.kt"
            line="90"/>
    </issue>

    <issue
        id="UseValueOf"
        message="Use `Integer.valueOf(libraryDep.libraryIndex)` instead">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleReportDependenciesTask.kt"
            line="95"/>
    </issue>

    <issue
        id="UseValueOf"
        message="Use `Integer.valueOf(depIndex)` instead">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleReportDependenciesTask.kt"
            line="98"/>
    </issue>

    <issue
        id="UseValueOf"
        message="Use `Integer.valueOf(depIndex)` instead">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleReportDependenciesTask.kt"
            line="111"/>
    </issue>

    <issue
        id="UseValueOf"
        message="Use `Integer.valueOf(libraries.size)` instead">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/PerModuleReportDependenciesTask.kt"
            line="79"/>
    </issue>

    <issue
        id="UseValueOf"
        message="Use `Integer.valueOf(1)` instead">
        <location
            file="src/main/java/com/android/build/gradle/internal/core/VariantConfiguration.java"
            line="912"/>
    </issue>

    <issue
        id="UseValueOf"
        message="Use `Integer.valueOf(-1)` instead">
        <location
            file="src/main/java/com/android/build/gradle/internal/core/VariantConfiguration.java"
            line="939"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`.">
        <location
            file="src/main/java/com/android/build/gradle/internal/res/Aapt2ErrorUtils.kt"
            line="67"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`.">
        <location
            file="src/main/java/com/android/build/gradle/internal/res/Aapt2ErrorUtils.kt"
            line="88"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`.">
        <location
            file="src/main/java/com/android/build/gradle/internal/dependency/JetifyTransform.kt"
            line="128"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`.">
        <location
            file="src/main/java/com/android/build/gradle/tasks/VerifyLibraryResourcesTask.kt"
            line="284"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`.">
        <location
            file="src/main/java/com/android/build/gradle/tasks/VerifyLibraryResourcesTask.kt"
            line="284"/>
    </issue>

    <issue
        id="CommonForkJoinPool"
        message="Avoid using common ForkJoinPool, directly or indirectly (for example via CompletableFuture). It has a limited set of threads on some machines which leads to hangs. See `go/do-not-freeze`.">
        <location
            file="src/main/java/com/android/build/gradle/BasePlugin.java"
            line="249"/>
    </issue>

    <issue
        id="CommonForkJoinPool"
        message="Avoid using common ForkJoinPool, directly or indirectly (for example via CompletableFuture). It has a limited set of threads on some machines which leads to hangs. See `go/do-not-freeze`.">
        <location
            file="src/main/java/com/android/build/gradle/BasePlugin.java"
            line="430"/>
    </issue>

    <issue
        id="CommonForkJoinPool"
        message="Avoid using common ForkJoinPool, directly or indirectly (for example via CompletableFuture). It has a limited set of threads on some machines which leads to hangs. See `go/do-not-freeze`.">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleToApkTask.kt"
            line="101"/>
    </issue>

    <issue
        id="CommonForkJoinPool"
        message="Avoid using common ForkJoinPool, directly or indirectly (for example via CompletableFuture). It has a limited set of threads on some machines which leads to hangs. See `go/do-not-freeze`.">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleToStandaloneApkTask.kt"
            line="134"/>
    </issue>

    <issue
        id="CommonForkJoinPool"
        message="Avoid using common ForkJoinPool, directly or indirectly (for example via CompletableFuture). It has a limited set of threads on some machines which leads to hangs. See `go/do-not-freeze`.">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/Workers.kt"
            line="58"/>
    </issue>

    <issue
        id="NewForkJoinPool"
        message="Avoid using new ForkJoinPool instances when possible. Prefer using the IntelliJ application pool via `com.intellij.openapi.application.Application#executeOnPooledThread`, or for the Android Gradle Plugin use `com.android.build.gradle.internal.tasks.Workers`. See `go/do-not-freeze`.">
        <location
            file="src/main/java/com/android/build/gradle/internal/res/namespaced/AutoNamespaceDependenciesTask.kt"
            line="508"/>
    </issue>

    <issue
        id="NewForkJoinPool"
        message="Avoid using new ForkJoinPool instances when possible. Prefer using the IntelliJ application pool via `com.intellij.openapi.application.Application#executeOnPooledThread`, or for the Android Gradle Plugin use `com.android.build.gradle.internal.tasks.Workers`. See `go/do-not-freeze`.">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/DexMergingTask.kt"
            line="426"/>
    </issue>

    <issue
        id="NewForkJoinPool"
        message="Avoid using new ForkJoinPool instances when possible. Prefer using the IntelliJ application pool via `com.intellij.openapi.application.Application#executeOnPooledThread`, or for the Android Gradle Plugin use `com.android.build.gradle.internal.tasks.Workers`. See `go/do-not-freeze`.">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/Workers.kt"
            line="166"/>
    </issue>

</issues>
