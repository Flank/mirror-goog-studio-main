Incubating Android Gradle Plugin API.
-------------------------------------------------------------------------
ATTENTION REVIEWER: If this needs to be changed, please make sure changes
below are backwards compatible.
-------------------------------------------------------------------------
com.android.build.api.artifact.AppendRequest
com.android.build.api.artifact.AppendRequest.on: com.android.build.api.artifact.AppendRequest<FILE_TYPE> (ARTIFACT_TYPE)
com.android.build.api.artifact.ArtifactKind implements java.io.Serializable
com.android.build.api.artifact.ArtifactKind$DIRECTORY extends com.android.build.api.artifact.ArtifactKind
com.android.build.api.artifact.ArtifactKind$DIRECTORY.dataType: kotlin.reflect.KClass<org.gradle.api.file.Directory> ()
com.android.build.api.artifact.ArtifactKind$FILE extends com.android.build.api.artifact.ArtifactKind
com.android.build.api.artifact.ArtifactKind$FILE.dataType: kotlin.reflect.KClass<org.gradle.api.file.RegularFile> ()
com.android.build.api.artifact.ArtifactKind.<init>: com.android.build.api.artifact.ArtifactKind<T> (kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.artifact.ArtifactKind.dataType: kotlin.reflect.KClass<T> ()
com.android.build.api.artifact.ArtifactTransformationRequest
com.android.build.api.artifact.ArtifactTransformationRequest.submit: java.util.function.Supplier<com.android.build.api.variant.BuiltArtifacts> (org.gradle.workers.WorkQueue, java.lang.Class<? extends ParamT>, java.lang.Class<? extends org.gradle.workers.WorkAction<ParamT>>, kotlin.jvm.functions.Function1<? super ParamT, kotlin.Unit>)
com.android.build.api.artifact.ArtifactTransformationRequest.submit: void (kotlin.jvm.functions.Function1<? super com.android.build.api.variant.BuiltArtifact, ? extends java.io.File>)
com.android.build.api.artifact.ArtifactType implements java.io.Serializable
com.android.build.api.artifact.ArtifactType$Appendable implements com.android.build.api.artifact.ArtifactType$Multiple
com.android.build.api.artifact.ArtifactType$Companion
com.android.build.api.artifact.ArtifactType$Companion.<init>: com.android.build.api.artifact.ArtifactType$Companion (kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.artifact.ArtifactType$Many
com.android.build.api.artifact.ArtifactType$Multiple
com.android.build.api.artifact.ArtifactType$Multiple.name: java.lang.String ()
com.android.build.api.artifact.ArtifactType$Replaceable implements com.android.build.api.artifact.ArtifactType$Single
com.android.build.api.artifact.ArtifactType$Single
com.android.build.api.artifact.ArtifactType$Single.name: java.lang.String ()
com.android.build.api.artifact.ArtifactType$Transformable
com.android.build.api.artifact.ArtifactType.<init>: com.android.build.api.artifact.ArtifactType<T> (com.android.build.api.artifact.ArtifactKind<T>)
com.android.build.api.artifact.ArtifactType.getFolderName: java.lang.String ()
com.android.build.api.artifact.ArtifactType.getKind: com.android.build.api.artifact.ArtifactKind<T> ()
com.android.build.api.artifact.ArtifactType.isPublic: boolean ()
com.android.build.api.artifact.ArtifactType.name: java.lang.String ()
com.android.build.api.artifact.BuildArtifactType extends com.android.build.api.artifact.ArtifactType
com.android.build.api.artifact.BuildArtifactType$JAVAC_CLASSES extends com.android.build.api.artifact.BuildArtifactType
com.android.build.api.artifact.BuildArtifactType$JAVA_COMPILE_CLASSPATH extends com.android.build.api.artifact.BuildArtifactType
com.android.build.api.artifact.BuildArtifactType.<init>: com.android.build.api.artifact.BuildArtifactType (kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.artifact.BuildArtifactType.isPublic: boolean ()
com.android.build.api.artifact.MultipleTransformRequest
com.android.build.api.artifact.MultipleTransformRequest.on: void (ARTIFACT_TYPE)
com.android.build.api.artifact.Operations
com.android.build.api.artifact.Operations.append: com.android.build.api.artifact.AppendRequest<FILE_TYPE> (org.gradle.api.tasks.TaskProvider<TASK>, kotlin.jvm.functions.Function1<? super TASK, ? extends org.gradle.api.file.FileSystemLocationProperty<FILE_TYPE>>)
com.android.build.api.artifact.Operations.get: org.gradle.api.provider.Provider<FILE_TYPE> (ARTIFACT_TYPE)
com.android.build.api.artifact.Operations.getAll: org.gradle.api.provider.Provider<java.util.List<FILE_TYPE>> (ARTIFACT_TYPE)
com.android.build.api.artifact.Operations.replace: com.android.build.api.artifact.ReplaceRequest<FILE_TYPE> (org.gradle.api.tasks.TaskProvider<TASK>, kotlin.jvm.functions.Function1<? super TASK, ? extends org.gradle.api.file.FileSystemLocationProperty<FILE_TYPE>>)
com.android.build.api.artifact.Operations.transform: com.android.build.api.artifact.TransformRequest<FILE_TYPE> (org.gradle.api.tasks.TaskProvider<TASK>, kotlin.jvm.functions.Function1<? super TASK, ? extends org.gradle.api.file.FileSystemLocationProperty<FILE_TYPE>>, kotlin.jvm.functions.Function1<? super TASK, ? extends org.gradle.api.file.FileSystemLocationProperty<FILE_TYPE>>)
com.android.build.api.artifact.Operations.transformAll: com.android.build.api.artifact.MultipleTransformRequest<FILE_TYPE> (org.gradle.api.tasks.TaskProvider<TASK>, kotlin.jvm.functions.Function1<? super TASK, ? extends org.gradle.api.provider.ListProperty<FILE_TYPE>>, kotlin.jvm.functions.Function1<? super TASK, ? extends org.gradle.api.file.FileSystemLocationProperty<FILE_TYPE>>)
com.android.build.api.artifact.Operations.use: com.android.build.api.artifact.TaskBasedOperations<TASK> (org.gradle.api.tasks.TaskProvider<TASK>)
com.android.build.api.artifact.PublicArtifactType extends com.android.build.api.artifact.ArtifactType
com.android.build.api.artifact.PublicArtifactType$APK extends com.android.build.api.artifact.PublicArtifactType implements com.android.build.api.artifact.ArtifactType$Replaceable
com.android.build.api.artifact.PublicArtifactType.<init>: com.android.build.api.artifact.PublicArtifactType<T> (com.android.build.api.artifact.ArtifactKind, kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.artifact.PublicArtifactType.isPublic: boolean ()
com.android.build.api.artifact.ReplaceRequest
com.android.build.api.artifact.ReplaceRequest.on: void (ARTIFACT_TYPE)
com.android.build.api.artifact.TaskBasedOperations
com.android.build.api.artifact.TaskBasedOperations.andWrite: com.android.build.api.artifact.ArtifactTransformationRequest (ArtifactTypeT, kotlin.jvm.functions.Function1<? super TaskT, ? extends org.gradle.api.file.FileSystemLocationProperty<org.gradle.api.file.Directory>>)
com.android.build.api.artifact.TaskBasedOperations.toRead: com.android.build.api.artifact.TaskBasedOperations<TaskT> (ArtifactTypeT, kotlin.jvm.functions.Function1<? super TaskT, ? extends org.gradle.api.file.FileSystemLocationProperty<org.gradle.api.file.Directory>>)
com.android.build.api.artifact.TransformRequest
com.android.build.api.artifact.TransformRequest.on: void (ARTIFACT_TYPE)
com.android.build.api.artifact.WorkItemParameters implements org.gradle.workers.WorkParameters
com.android.build.api.artifact.WorkItemParameters.<init>: com.android.build.api.artifact.WorkItemParameters ()
com.android.build.api.artifact.WorkItemParameters.initProperties: java.io.File (com.android.build.api.variant.BuiltArtifact, org.gradle.api.file.Directory)
com.android.build.api.component.ActionableComponentObject
com.android.build.api.component.AndroidTestProperties implements com.android.build.api.component.TestComponentProperties
com.android.build.api.component.AndroidTestProperties.getApplicationId: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.component.BuildTypedComponentActionRegistrar
com.android.build.api.component.BuildTypedComponentActionRegistrar.withFlavor: com.android.build.api.component.BuildTypedComponentActionRegistrar<ComponentT> (kotlin.Pair<java.lang.String, java.lang.String>)
com.android.build.api.component.BuildTypedComponentActionRegistrar.withFlavor: void (kotlin.Pair<java.lang.String, java.lang.String>, kotlin.jvm.functions.Function1<? super ComponentT, kotlin.Unit>)
com.android.build.api.component.BuildTypedComponentActionRegistrar.withFlavor: void (kotlin.Pair<java.lang.String, java.lang.String>, org.gradle.api.Action<ComponentT>)
com.android.build.api.component.Component implements com.android.build.api.component.ComponentIdentity, com.android.build.api.component.ActionableComponentObject
com.android.build.api.component.Component.getEnabled: boolean ()
com.android.build.api.component.Component.onProperties: void (kotlin.jvm.functions.Function1<? super PropertiesT, kotlin.Unit>)
com.android.build.api.component.Component.setEnabled: void (boolean)
com.android.build.api.component.ComponentIdentity implements org.gradle.api.Named
com.android.build.api.component.ComponentIdentity.getBuildType: java.lang.String ()
com.android.build.api.component.ComponentIdentity.getFlavorName: java.lang.String ()
com.android.build.api.component.ComponentIdentity.getProductFlavors: java.util.List<kotlin.Pair<java.lang.String, java.lang.String>> ()
com.android.build.api.component.ComponentProperties implements com.android.build.api.component.ComponentIdentity, com.android.build.api.component.ActionableComponentObject
com.android.build.api.component.ComponentProperties.getOperations: com.android.build.api.artifact.Operations ()
com.android.build.api.component.ComponentProperties.getOutputs: java.util.List<com.android.build.api.variant.VariantOutput> ()
com.android.build.api.component.FilteredComponentActionRegistrar
com.android.build.api.component.FilteredComponentActionRegistrar.withBuildType: com.android.build.api.component.BuildTypedComponentActionRegistrar<ComponentT> (java.lang.String)
com.android.build.api.component.FilteredComponentActionRegistrar.withBuildType: void (java.lang.String, kotlin.jvm.functions.Function1<? super ComponentT, kotlin.Unit>)
com.android.build.api.component.FilteredComponentActionRegistrar.withBuildType: void (java.lang.String, org.gradle.api.Action<ComponentT>)
com.android.build.api.component.FilteredComponentActionRegistrar.withFlavor: com.android.build.api.component.FlavoredComponentActionRegistrar<ComponentT> (kotlin.Pair<java.lang.String, java.lang.String>)
com.android.build.api.component.FilteredComponentActionRegistrar.withFlavor: void (kotlin.Pair<java.lang.String, java.lang.String>, kotlin.jvm.functions.Function1<? super ComponentT, kotlin.Unit>)
com.android.build.api.component.FilteredComponentActionRegistrar.withFlavor: void (kotlin.Pair<java.lang.String, java.lang.String>, org.gradle.api.Action<ComponentT>)
com.android.build.api.component.FilteredComponentActionRegistrar.withName: void (java.lang.String, kotlin.jvm.functions.Function1<? super ComponentT, kotlin.Unit>)
com.android.build.api.component.FilteredComponentActionRegistrar.withName: void (java.lang.String, org.gradle.api.Action<ComponentT>)
com.android.build.api.component.FilteredComponentActionRegistrar.withName: void (java.util.regex.Pattern, org.gradle.api.Action<ComponentT>)
com.android.build.api.component.FlavoredComponentActionRegistrar implements com.android.build.api.component.BuildTypedComponentActionRegistrar
com.android.build.api.component.FlavoredComponentActionRegistrar.withBuildType: com.android.build.api.component.BuildTypedComponentActionRegistrar<ComponentT> (java.lang.String)
com.android.build.api.component.FlavoredComponentActionRegistrar.withBuildType: void (java.lang.String, kotlin.jvm.functions.Function1<? super ComponentT, kotlin.Unit>)
com.android.build.api.component.FlavoredComponentActionRegistrar.withBuildType: void (java.lang.String, org.gradle.api.Action<ComponentT>)
com.android.build.api.component.GenericFilteredComponentActionRegistrar implements com.android.build.api.component.FilteredComponentActionRegistrar
com.android.build.api.component.GenericFilteredComponentActionRegistrar.withType: com.android.build.api.component.FilteredComponentActionRegistrar<NewTypeT> (java.lang.Class<NewTypeT>)
com.android.build.api.component.GenericFilteredComponentActionRegistrar.withType: void (java.lang.Class<NewTypeT>, kotlin.jvm.functions.Function1<? super NewTypeT, kotlin.Unit>)
com.android.build.api.component.GenericFilteredComponentActionRegistrar.withType: void (java.lang.Class<NewTypeT>, org.gradle.api.Action<NewTypeT>)
com.android.build.api.component.TestComponent implements com.android.build.api.component.Component
com.android.build.api.component.TestComponentProperties implements com.android.build.api.component.ComponentProperties
com.android.build.api.component.TestComponentProperties.getTestedVariant: com.android.build.api.variant.VariantProperties ()
com.android.build.api.component.UnitTestProperties implements com.android.build.api.component.TestComponentProperties
com.android.build.api.dsl.AaptOptions
com.android.build.api.dsl.AaptOptions.additionalParameters: void (java.lang.String)
com.android.build.api.dsl.AaptOptions.additionalParameters: void (java.lang.String[])
com.android.build.api.dsl.AaptOptions.getAdditionalParameters: java.util.List<java.lang.String> ()
com.android.build.api.dsl.AaptOptions.getFailOnMissingConfigEntry: boolean ()
com.android.build.api.dsl.AaptOptions.getIgnoreAssetsPattern: java.lang.String ()
com.android.build.api.dsl.AaptOptions.getNamespaced: boolean ()
com.android.build.api.dsl.AaptOptions.getNoCompress: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.AaptOptions.noCompress: void (java.lang.String)
com.android.build.api.dsl.AaptOptions.noCompress: void (java.lang.String[])
com.android.build.api.dsl.AaptOptions.setAdditionalParameters: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.AaptOptions.setFailOnMissingConfigEntry: void (boolean)
com.android.build.api.dsl.AaptOptions.setIgnoreAssetsPattern: void (java.lang.String)
com.android.build.api.dsl.AaptOptions.setNamespaced: void (boolean)
com.android.build.api.dsl.AaptOptions.setNoCompress: void (java.util.Collection<java.lang.String>)
com.android.build.api.dsl.AbiSplit implements com.android.build.api.dsl.SplitOptions
com.android.build.api.dsl.AbiSplit.isUniversalApk: boolean ()
com.android.build.api.dsl.AbiSplit.setUniversalApk: void (boolean)
com.android.build.api.dsl.AdbOptions
com.android.build.api.dsl.AdbOptions.getInstallOptions: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.AdbOptions.getTimeOutInMs: int ()
com.android.build.api.dsl.AdbOptions.installOptions: void (java.lang.String)
com.android.build.api.dsl.AdbOptions.installOptions: void (java.lang.String[])
com.android.build.api.dsl.AdbOptions.setInstallOptions: void (java.util.Collection<java.lang.String>)
com.android.build.api.dsl.AdbOptions.setTimeOutInMs: void (int)
com.android.build.api.dsl.AnnotationProcessorOptions
com.android.build.api.dsl.AnnotationProcessorOptions.argument: void (java.lang.String, java.lang.String)
com.android.build.api.dsl.AnnotationProcessorOptions.arguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.AnnotationProcessorOptions.className: void (java.lang.String)
com.android.build.api.dsl.AnnotationProcessorOptions.classNames: void (java.lang.String[])
com.android.build.api.dsl.AnnotationProcessorOptions.compilerArgumentProvider: void (org.gradle.process.CommandLineArgumentProvider)
com.android.build.api.dsl.AnnotationProcessorOptions.compilerArgumentProviders: void (org.gradle.process.CommandLineArgumentProvider[])
com.android.build.api.dsl.AnnotationProcessorOptions.getArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.AnnotationProcessorOptions.getClassNames: java.util.List<java.lang.String> ()
com.android.build.api.dsl.AnnotationProcessorOptions.getCompilerArgumentProviders: java.util.List<org.gradle.process.CommandLineArgumentProvider> ()
com.android.build.api.dsl.AnnotationProcessorOptions.setArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.AnnotationProcessorOptions.setClassNames: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.AnnotationProcessorOptions.setCompilerArgumentProviders: void (java.util.List<org.gradle.process.CommandLineArgumentProvider>)
com.android.build.api.dsl.ApkExtension
com.android.build.api.dsl.ApplicationBuildFeatures implements com.android.build.api.dsl.BuildFeatures
com.android.build.api.dsl.ApplicationBuildFeatures.getDataBinding: java.lang.Boolean ()
com.android.build.api.dsl.ApplicationBuildFeatures.setDataBinding: void (java.lang.Boolean)
com.android.build.api.dsl.ApplicationExtension implements com.android.build.api.dsl.CommonExtension, com.android.build.api.dsl.ApkExtension, com.android.build.api.dsl.TestedExtension
com.android.build.api.dsl.ApplicationExtension.dependenciesInfo: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DependenciesInfo, kotlin.Unit>)
com.android.build.api.dsl.ApplicationExtension.getDependenciesInfo: com.android.build.api.dsl.DependenciesInfo ()
com.android.build.api.dsl.AssetPackExtension
com.android.build.api.dsl.AssetPackExtension.dynamicDelivery: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DynamicDelivery, kotlin.Unit>)
com.android.build.api.dsl.AssetPackExtension.getDynamicDelivery: com.android.build.api.dsl.DynamicDelivery ()
com.android.build.api.dsl.AssetPackExtension.getPackName: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.dsl.BaseConfig
com.android.build.api.dsl.BaseConfig.addManifestPlaceholders: void (java.util.Map<java.lang.String, ?>)
com.android.build.api.dsl.BaseConfig.consumerProguardFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.BaseConfig.consumerProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.BaseConfig.getApplicationIdSuffix: java.lang.String ()
com.android.build.api.dsl.BaseConfig.getConsumerProguardFiles: java.util.List<java.io.File> ()
com.android.build.api.dsl.BaseConfig.getManifestPlaceholders: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.api.dsl.BaseConfig.getMultiDexEnabled: java.lang.Boolean ()
com.android.build.api.dsl.BaseConfig.getMultiDexKeepFile: java.io.File ()
com.android.build.api.dsl.BaseConfig.getMultiDexKeepProguard: java.io.File ()
com.android.build.api.dsl.BaseConfig.getProguardFiles: java.util.List<java.io.File> ()
com.android.build.api.dsl.BaseConfig.getTestProguardFiles: java.util.List<java.io.File> ()
com.android.build.api.dsl.BaseConfig.getVersionNameSuffix: java.lang.String ()
com.android.build.api.dsl.BaseConfig.proguardFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.BaseConfig.proguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.BaseConfig.setApplicationIdSuffix: void (java.lang.String)
com.android.build.api.dsl.BaseConfig.setConsumerProguardFiles: void (java.util.List<java.io.File>)
com.android.build.api.dsl.BaseConfig.setManifestPlaceholders: void (java.util.Map<java.lang.String, java.lang.Object>)
com.android.build.api.dsl.BaseConfig.setMultiDexEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.BaseConfig.setMultiDexKeepFile: void (java.io.File)
com.android.build.api.dsl.BaseConfig.setMultiDexKeepProguard: void (java.io.File)
com.android.build.api.dsl.BaseConfig.setProguardFiles: void (java.util.List<java.io.File>)
com.android.build.api.dsl.BaseConfig.setTestProguardFiles: void (java.util.List<java.io.File>)
com.android.build.api.dsl.BaseConfig.setVersionNameSuffix: void (java.lang.String)
com.android.build.api.dsl.BaseConfig.testProguardFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.BaseConfig.testProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.BaseFlavor implements com.android.build.api.dsl.BaseConfig
com.android.build.api.dsl.BuildFeatures implements org.gradle.api.plugins.ExtensionAware
com.android.build.api.dsl.BuildFeatures.getAidl: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getBuildConfig: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getCompose: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getRenderScript: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getResValues: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getShaders: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getViewBinding: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.setAidl: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setBuildConfig: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setCompose: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setRenderScript: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setResValues: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setShaders: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setViewBinding: void (java.lang.Boolean)
com.android.build.api.dsl.BuildType implements org.gradle.api.Named, com.android.build.api.dsl.BaseConfig
com.android.build.api.dsl.BuildType.isDefault: boolean ()
com.android.build.api.dsl.BuildType.setDefault: void (boolean)
com.android.build.api.dsl.Cmake
com.android.build.api.dsl.Cmake.buildStagingDirectory: void (java.lang.Object)
com.android.build.api.dsl.Cmake.getBuildStagingDirectory: java.io.File ()
com.android.build.api.dsl.Cmake.getPath: java.io.File ()
com.android.build.api.dsl.Cmake.getVersion: java.lang.String ()
com.android.build.api.dsl.Cmake.path: void (java.lang.Object)
com.android.build.api.dsl.Cmake.setBuildStagingDirectory: void (java.io.File)
com.android.build.api.dsl.Cmake.setPath: void (java.io.File)
com.android.build.api.dsl.Cmake.setVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension
com.android.build.api.dsl.CommonExtension.aaptOptions: void (kotlin.jvm.functions.Function1<? super AaptOptionsT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.adbOptions: void (kotlin.jvm.functions.Function1<? super AdbOptionsT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super BuildFeaturesT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.buildTypes: void (org.gradle.api.Action<? super org.gradle.api.NamedDomainObjectContainer<BuildTypeT>>)
com.android.build.api.dsl.CommonExtension.compileOptions: void (kotlin.jvm.functions.Function1<? super CompileOptionsT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.compileSdkVersion: void (int)
com.android.build.api.dsl.CommonExtension.compileSdkVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.dataBinding: void (kotlin.jvm.functions.Function1<? super DataBindingT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.defaultConfig: void (org.gradle.api.Action<DefaultConfigT>)
com.android.build.api.dsl.CommonExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super ExternalNativeBuildT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.getAaptOptions: AaptOptionsT ()
com.android.build.api.dsl.CommonExtension.getAdbOptions: AdbOptionsT ()
com.android.build.api.dsl.CommonExtension.getBuildFeatures: BuildFeaturesT ()
com.android.build.api.dsl.CommonExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<BuildTypeT> ()
com.android.build.api.dsl.CommonExtension.getCompileOptions: CompileOptionsT ()
com.android.build.api.dsl.CommonExtension.getCompileSdkVersion: java.lang.String ()
com.android.build.api.dsl.CommonExtension.getDataBinding: DataBindingT ()
com.android.build.api.dsl.CommonExtension.getDefaultConfig: DefaultConfigT ()
com.android.build.api.dsl.CommonExtension.getExternalNativeBuild: ExternalNativeBuildT ()
com.android.build.api.dsl.CommonExtension.getJacoco: JacocoOptionsT ()
com.android.build.api.dsl.CommonExtension.getLintOptions: LintOptionsT ()
com.android.build.api.dsl.CommonExtension.getOnVariantProperties: com.android.build.api.component.GenericFilteredComponentActionRegistrar<VariantPropertiesT> ()
com.android.build.api.dsl.CommonExtension.getOnVariants: com.android.build.api.component.GenericFilteredComponentActionRegistrar<VariantT> ()
com.android.build.api.dsl.CommonExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<ProductFlavorT> ()
com.android.build.api.dsl.CommonExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<SigningConfigT> ()
com.android.build.api.dsl.CommonExtension.getSplits: SplitsT ()
com.android.build.api.dsl.CommonExtension.getTestOptions: TestOptionsT ()
com.android.build.api.dsl.CommonExtension.jacoco: void (kotlin.jvm.functions.Function1<? super JacocoOptionsT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.lintOptions: void (kotlin.jvm.functions.Function1<? super LintOptionsT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.onVariantProperties: void (kotlin.jvm.functions.Function1<? super VariantPropertiesT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.onVariantProperties: void (org.gradle.api.Action<VariantPropertiesT>)
com.android.build.api.dsl.CommonExtension.onVariants: void (kotlin.jvm.functions.Function1<? super VariantT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.onVariants: void (org.gradle.api.Action<VariantT>)
com.android.build.api.dsl.CommonExtension.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<ProductFlavorT>>)
com.android.build.api.dsl.CommonExtension.setCompileSdkVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<SigningConfigT>>)
com.android.build.api.dsl.CommonExtension.splits: void (kotlin.jvm.functions.Function1<? super SplitsT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.testOptions: void (kotlin.jvm.functions.Function1<? super TestOptionsT, kotlin.Unit>)
com.android.build.api.dsl.CompileOptions
com.android.build.api.dsl.CompileOptions.getEncoding: java.lang.String ()
com.android.build.api.dsl.CompileOptions.getSourceCompatibility: org.gradle.api.JavaVersion ()
com.android.build.api.dsl.CompileOptions.getTargetCompatibility: org.gradle.api.JavaVersion ()
com.android.build.api.dsl.CompileOptions.isCoreLibraryDesugaringEnabled: boolean ()
com.android.build.api.dsl.CompileOptions.setCoreLibraryDesugaringEnabled: void (boolean)
com.android.build.api.dsl.CompileOptions.setEncoding: void (java.lang.String)
com.android.build.api.dsl.CompileOptions.setSourceCompatibility: void (org.gradle.api.JavaVersion)
com.android.build.api.dsl.CompileOptions.setTargetCompatibility: void (org.gradle.api.JavaVersion)
com.android.build.api.dsl.CompileOptions.sourceCompatibility: void (java.lang.Object)
com.android.build.api.dsl.CompileOptions.targetCompatibility: void (java.lang.Object)
com.android.build.api.dsl.DataBinding
com.android.build.api.dsl.DataBinding.getAddDefaultAdapters: boolean ()
com.android.build.api.dsl.DataBinding.getVersion: java.lang.String ()
com.android.build.api.dsl.DataBinding.isEnabled: boolean ()
com.android.build.api.dsl.DataBinding.isEnabledForTests: boolean ()
com.android.build.api.dsl.DataBinding.setAddDefaultAdapters: void (boolean)
com.android.build.api.dsl.DataBinding.setEnabled: void (boolean)
com.android.build.api.dsl.DataBinding.setEnabledForTests: void (boolean)
com.android.build.api.dsl.DataBinding.setVersion: void (java.lang.String)
com.android.build.api.dsl.DefaultConfig implements com.android.build.api.dsl.BaseFlavor
com.android.build.api.dsl.DensitySplit implements com.android.build.api.dsl.SplitOptions
com.android.build.api.dsl.DensitySplit.compatibleScreens: void (java.lang.String[])
com.android.build.api.dsl.DensitySplit.getCompatibleScreens: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.DensitySplit.isStrict: boolean ()
com.android.build.api.dsl.DensitySplit.setCompatibleScreens: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.DensitySplit.setStrict: void (boolean)
com.android.build.api.dsl.DependenciesInfo
com.android.build.api.dsl.DependenciesInfo.getIncludeInApk: boolean ()
com.android.build.api.dsl.DependenciesInfo.getIncludeInBundle: boolean ()
com.android.build.api.dsl.DependenciesInfo.setIncludeInApk: void (boolean)
com.android.build.api.dsl.DependenciesInfo.setIncludeInBundle: void (boolean)
com.android.build.api.dsl.DynamicDelivery
com.android.build.api.dsl.DynamicDelivery.getDeliveryType: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.dsl.DynamicDelivery.getInstantDeliveryType: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.dsl.DynamicFeatureBuildFeatures implements com.android.build.api.dsl.BuildFeatures
com.android.build.api.dsl.DynamicFeatureBuildFeatures.getDataBinding: java.lang.Boolean ()
com.android.build.api.dsl.DynamicFeatureBuildFeatures.setDataBinding: void (java.lang.Boolean)
com.android.build.api.dsl.DynamicFeatureExtension implements com.android.build.api.dsl.CommonExtension, com.android.build.api.dsl.ApkExtension, com.android.build.api.dsl.TestedExtension
com.android.build.api.dsl.ExternalNativeBuild
com.android.build.api.dsl.ExternalNativeBuild.cmake: void (kotlin.jvm.functions.Function1<? super CMakeT, kotlin.Unit>)
com.android.build.api.dsl.ExternalNativeBuild.getCmake: CMakeT ()
com.android.build.api.dsl.ExternalNativeBuild.getNdkBuild: NdkBuildT ()
com.android.build.api.dsl.ExternalNativeBuild.ndkBuild: void (kotlin.jvm.functions.Function1<? super NdkBuildT, kotlin.Unit>)
com.android.build.api.dsl.JacocoOptions
com.android.build.api.dsl.JacocoOptions.getVersion: java.lang.String ()
com.android.build.api.dsl.JacocoOptions.setVersion: void (java.lang.String)
com.android.build.api.dsl.JavaCompileOptions
com.android.build.api.dsl.JavaCompileOptions.annotationProcessorOptions: void (kotlin.jvm.functions.Function1<? super AnnotationProcessorOptionsT, kotlin.Unit>)
com.android.build.api.dsl.JavaCompileOptions.getAnnotationProcessorOptions: AnnotationProcessorOptionsT ()
com.android.build.api.dsl.LibraryBuildFeatures implements com.android.build.api.dsl.BuildFeatures
com.android.build.api.dsl.LibraryBuildFeatures.getAndroidResources: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.getDataBinding: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.setAndroidResources: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBuildFeatures.setDataBinding: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryExtension implements com.android.build.api.dsl.CommonExtension, com.android.build.api.dsl.TestedExtension
com.android.build.api.dsl.LintOptions
com.android.build.api.dsl.LintOptions.baseline: void (java.io.File)
com.android.build.api.dsl.LintOptions.baseline: void (java.lang.String)
com.android.build.api.dsl.LintOptions.check: void (java.lang.String)
com.android.build.api.dsl.LintOptions.check: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.disable: void (java.lang.String)
com.android.build.api.dsl.LintOptions.disable: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.enable: void (java.lang.String)
com.android.build.api.dsl.LintOptions.enable: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.error: void (java.lang.String)
com.android.build.api.dsl.LintOptions.error: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.fatal: void (java.lang.String)
com.android.build.api.dsl.LintOptions.fatal: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.getBaselineFile: java.io.File ()
com.android.build.api.dsl.LintOptions.getCheck: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.LintOptions.getDisable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.LintOptions.getEnable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.LintOptions.getHtmlOutput: java.io.File ()
com.android.build.api.dsl.LintOptions.getHtmlReport: boolean ()
com.android.build.api.dsl.LintOptions.getLintConfig: java.io.File ()
com.android.build.api.dsl.LintOptions.getSeverityOverrides: java.util.Map<java.lang.String, java.lang.Integer> ()
com.android.build.api.dsl.LintOptions.getTextOutput: java.io.File ()
com.android.build.api.dsl.LintOptions.getTextReport: boolean ()
com.android.build.api.dsl.LintOptions.getXmlOutput: java.io.File ()
com.android.build.api.dsl.LintOptions.getXmlReport: boolean ()
com.android.build.api.dsl.LintOptions.ignore: void (java.lang.String)
com.android.build.api.dsl.LintOptions.ignore: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.informational: void (java.lang.String)
com.android.build.api.dsl.LintOptions.informational: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.isAbortOnError: boolean ()
com.android.build.api.dsl.LintOptions.isAbsolutePaths: boolean ()
com.android.build.api.dsl.LintOptions.isCheckAllWarnings: boolean ()
com.android.build.api.dsl.LintOptions.isCheckDependencies: boolean ()
com.android.build.api.dsl.LintOptions.isCheckGeneratedSources: boolean ()
com.android.build.api.dsl.LintOptions.isCheckReleaseBuilds: boolean ()
com.android.build.api.dsl.LintOptions.isCheckTestSources: boolean ()
com.android.build.api.dsl.LintOptions.isExplainIssues: boolean ()
com.android.build.api.dsl.LintOptions.isIgnoreTestSources: boolean ()
com.android.build.api.dsl.LintOptions.isIgnoreWarnings: boolean ()
com.android.build.api.dsl.LintOptions.isNoLines: boolean ()
com.android.build.api.dsl.LintOptions.isQuiet: boolean ()
com.android.build.api.dsl.LintOptions.isShowAll: boolean ()
com.android.build.api.dsl.LintOptions.isWarningsAsErrors: boolean ()
com.android.build.api.dsl.LintOptions.setAbortOnError: void (boolean)
com.android.build.api.dsl.LintOptions.setAbsolutePaths: void (boolean)
com.android.build.api.dsl.LintOptions.setBaselineFile: void (java.io.File)
com.android.build.api.dsl.LintOptions.setCheck: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.LintOptions.setCheckAllWarnings: void (boolean)
com.android.build.api.dsl.LintOptions.setCheckDependencies: void (boolean)
com.android.build.api.dsl.LintOptions.setCheckGeneratedSources: void (boolean)
com.android.build.api.dsl.LintOptions.setCheckReleaseBuilds: void (boolean)
com.android.build.api.dsl.LintOptions.setCheckTestSources: void (boolean)
com.android.build.api.dsl.LintOptions.setDisable: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.LintOptions.setEnable: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.LintOptions.setExplainIssues: void (boolean)
com.android.build.api.dsl.LintOptions.setHtmlOutput: void (java.io.File)
com.android.build.api.dsl.LintOptions.setHtmlReport: void (boolean)
com.android.build.api.dsl.LintOptions.setIgnoreTestSources: void (boolean)
com.android.build.api.dsl.LintOptions.setIgnoreWarnings: void (boolean)
com.android.build.api.dsl.LintOptions.setLintConfig: void (java.io.File)
com.android.build.api.dsl.LintOptions.setNoLines: void (boolean)
com.android.build.api.dsl.LintOptions.setQuiet: void (boolean)
com.android.build.api.dsl.LintOptions.setShowAll: void (boolean)
com.android.build.api.dsl.LintOptions.setTextOutput: void (java.io.File)
com.android.build.api.dsl.LintOptions.setTextReport: void (boolean)
com.android.build.api.dsl.LintOptions.setWarningsAsErrors: void (boolean)
com.android.build.api.dsl.LintOptions.setXmlOutput: void (java.io.File)
com.android.build.api.dsl.LintOptions.setXmlReport: void (boolean)
com.android.build.api.dsl.LintOptions.textOutput: void (java.io.File)
com.android.build.api.dsl.LintOptions.textOutput: void (java.lang.String)
com.android.build.api.dsl.LintOptions.warning: void (java.lang.String)
com.android.build.api.dsl.LintOptions.warning: void (java.lang.String[])
com.android.build.api.dsl.NdkBuild
com.android.build.api.dsl.NdkBuild.buildStagingDirectory: void (java.lang.Object)
com.android.build.api.dsl.NdkBuild.getBuildStagingDirectory: java.io.File ()
com.android.build.api.dsl.NdkBuild.getPath: java.io.File ()
com.android.build.api.dsl.NdkBuild.path: void (java.lang.Object)
com.android.build.api.dsl.NdkBuild.setBuildStagingDirectory: void (java.io.File)
com.android.build.api.dsl.NdkBuild.setPath: void (java.io.File)
com.android.build.api.dsl.PackagingOptions
com.android.build.api.dsl.PackagingOptions.doNotStrip: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.exclude: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.getDoNotStrip: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getExcludes: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getMerges: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getPickFirsts: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.merge: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.pickFirst: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.setDoNotStrip: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.PackagingOptions.setExcludes: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.PackagingOptions.setMerges: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.PackagingOptions.setPickFirsts: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.ProductFlavor implements org.gradle.api.Named, com.android.build.api.dsl.BaseFlavor
com.android.build.api.dsl.ProductFlavor.isDefault: boolean ()
com.android.build.api.dsl.ProductFlavor.setDefault: void (boolean)
com.android.build.api.dsl.SigningConfig implements org.gradle.api.Named
com.android.build.api.dsl.SigningConfig.getKeyAlias: java.lang.String ()
com.android.build.api.dsl.SigningConfig.getKeyPassword: java.lang.String ()
com.android.build.api.dsl.SigningConfig.getStoreFile: java.io.File ()
com.android.build.api.dsl.SigningConfig.getStorePassword: java.lang.String ()
com.android.build.api.dsl.SigningConfig.getStoreType: java.lang.String ()
com.android.build.api.dsl.SigningConfig.isV1SigningEnabled: boolean ()
com.android.build.api.dsl.SigningConfig.isV2SigningEnabled: boolean ()
com.android.build.api.dsl.SigningConfig.setKeyAlias: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setKeyPassword: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setStoreFile: void (java.io.File)
com.android.build.api.dsl.SigningConfig.setStorePassword: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setStoreType: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setV1SigningEnabled: void (boolean)
com.android.build.api.dsl.SigningConfig.setV2SigningEnabled: void (boolean)
com.android.build.api.dsl.SplitOptions
com.android.build.api.dsl.SplitOptions.exclude: void (java.lang.String[])
com.android.build.api.dsl.SplitOptions.include: void (java.lang.String[])
com.android.build.api.dsl.SplitOptions.isEnable: boolean ()
com.android.build.api.dsl.SplitOptions.reset: void ()
com.android.build.api.dsl.SplitOptions.setEnable: void (boolean)
com.android.build.api.dsl.Splits
com.android.build.api.dsl.Splits.abi: void (kotlin.jvm.functions.Function1<? super AbiSplitT, kotlin.Unit>)
com.android.build.api.dsl.Splits.density: void (kotlin.jvm.functions.Function1<? super DensitySplitT, kotlin.Unit>)
com.android.build.api.dsl.Splits.getAbi: AbiSplitT ()
com.android.build.api.dsl.Splits.getAbiFilters: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.Splits.getDensity: DensitySplitT ()
com.android.build.api.dsl.Splits.getDensityFilters: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.TestBuildFeatures implements com.android.build.api.dsl.BuildFeatures
com.android.build.api.dsl.TestExtension implements com.android.build.api.dsl.CommonExtension
com.android.build.api.dsl.TestOptions
com.android.build.api.dsl.TestOptions.getAnimationsDisabled: boolean ()
com.android.build.api.dsl.TestOptions.getExecution: java.lang.String ()
com.android.build.api.dsl.TestOptions.getReportDir: java.lang.String ()
com.android.build.api.dsl.TestOptions.getResultsDir: java.lang.String ()
com.android.build.api.dsl.TestOptions.getUnitTests: UnitTestOptionsT ()
com.android.build.api.dsl.TestOptions.setAnimationsDisabled: void (boolean)
com.android.build.api.dsl.TestOptions.setExecution: void (java.lang.String)
com.android.build.api.dsl.TestOptions.setReportDir: void (java.lang.String)
com.android.build.api.dsl.TestOptions.setResultsDir: void (java.lang.String)
com.android.build.api.dsl.TestOptions.unitTests: void (kotlin.jvm.functions.Function1<? super UnitTestOptionsT, kotlin.Unit>)
com.android.build.api.dsl.TestedExtension
com.android.build.api.dsl.UnitTestOptions
com.android.build.api.dsl.UnitTestOptions.all: void (kotlin.jvm.functions.Function1<? super org.gradle.api.tasks.testing.Test, kotlin.Unit>)
com.android.build.api.dsl.UnitTestOptions.getIncludeAndroidResources: boolean ()
com.android.build.api.dsl.UnitTestOptions.getReturnDefaultValues: boolean ()
com.android.build.api.dsl.UnitTestOptions.setIncludeAndroidResources: void (boolean)
com.android.build.api.dsl.UnitTestOptions.setReturnDefaultValues: void (boolean)
com.android.build.api.transform.Transform.applyToVariant: boolean (com.android.build.api.variant.VariantInfo)
com.android.build.api.variant.ApplicationVariant implements com.android.build.api.variant.Variant
com.android.build.api.variant.ApplicationVariant.dependenciesInfo: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DependenciesInfo, kotlin.Unit>)
com.android.build.api.variant.ApplicationVariant.getDebuggable: boolean ()
com.android.build.api.variant.ApplicationVariant.getDependenciesInfo: com.android.build.api.dsl.DependenciesInfo ()
com.android.build.api.variant.ApplicationVariantProperties implements com.android.build.api.variant.VariantProperties
com.android.build.api.variant.ApplicationVariantProperties.getApplicationId: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.variant.ApplicationVariantProperties.getDependenciesInfo: com.android.build.api.variant.DependenciesInfo ()
com.android.build.api.variant.BuiltArtifact
com.android.build.api.variant.BuiltArtifact.getFilters: java.util.Collection<com.android.build.api.variant.FilterConfiguration> ()
com.android.build.api.variant.BuiltArtifact.getOutputFile: java.lang.String ()
com.android.build.api.variant.BuiltArtifact.getOutputType: com.android.build.api.variant.VariantOutputConfiguration$OutputType ()
com.android.build.api.variant.BuiltArtifact.getProperties: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.api.variant.BuiltArtifact.getVersionCode: int ()
com.android.build.api.variant.BuiltArtifact.getVersionName: java.lang.String ()
com.android.build.api.variant.BuiltArtifact.isEnabled: boolean ()
com.android.build.api.variant.BuiltArtifacts
com.android.build.api.variant.BuiltArtifacts$Companion
com.android.build.api.variant.BuiltArtifacts$Companion.getLoader: com.android.build.api.variant.BuiltArtifactsLoader ()
com.android.build.api.variant.BuiltArtifacts$TransformParams implements org.gradle.workers.WorkParameters, java.io.Serializable
com.android.build.api.variant.BuiltArtifacts$TransformParams.getOutput: java.io.File ()
com.android.build.api.variant.BuiltArtifacts.getApplicationId: java.lang.String ()
com.android.build.api.variant.BuiltArtifacts.getArtifactType: com.android.build.api.artifact.ArtifactType<?> ()
com.android.build.api.variant.BuiltArtifacts.getElements: java.util.Collection<com.android.build.api.variant.BuiltArtifact> ()
com.android.build.api.variant.BuiltArtifacts.getLoader: com.android.build.api.variant.BuiltArtifactsLoader ()
com.android.build.api.variant.BuiltArtifacts.getVariantName: java.lang.String ()
com.android.build.api.variant.BuiltArtifacts.save: void (org.gradle.api.file.Directory)
com.android.build.api.variant.BuiltArtifactsLoader
com.android.build.api.variant.BuiltArtifactsLoader.load: com.android.build.api.variant.BuiltArtifacts (org.gradle.api.file.Directory)
com.android.build.api.variant.BuiltArtifactsLoader.load: com.android.build.api.variant.BuiltArtifacts (org.gradle.api.file.FileCollection)
com.android.build.api.variant.DependenciesInfo
com.android.build.api.variant.DependenciesInfo.getIncludeInApk: boolean ()
com.android.build.api.variant.DependenciesInfo.getIncludeInBundle: boolean ()
com.android.build.api.variant.DynamicFeatureVariant implements com.android.build.api.variant.Variant
com.android.build.api.variant.DynamicFeatureVariantProperties implements com.android.build.api.variant.VariantProperties
com.android.build.api.variant.DynamicFeatureVariantProperties.getApplicationId: org.gradle.api.provider.Provider<java.lang.String> ()
com.android.build.api.variant.FilterConfiguration implements java.io.Serializable
com.android.build.api.variant.FilterConfiguration$FilterType extends java.lang.Enum
com.android.build.api.variant.FilterConfiguration$FilterType.valueOf: com.android.build.api.variant.FilterConfiguration$FilterType (java.lang.String)
com.android.build.api.variant.FilterConfiguration$FilterType.values: com.android.build.api.variant.FilterConfiguration$FilterType[] ()
com.android.build.api.variant.FilterConfiguration.<init>: com.android.build.api.variant.FilterConfiguration (com.android.build.api.variant.FilterConfiguration$FilterType, java.lang.String)
com.android.build.api.variant.FilterConfiguration.component1: com.android.build.api.variant.FilterConfiguration$FilterType ()
com.android.build.api.variant.FilterConfiguration.component2: java.lang.String ()
com.android.build.api.variant.FilterConfiguration.copy$default: com.android.build.api.variant.FilterConfiguration (com.android.build.api.variant.FilterConfiguration, com.android.build.api.variant.FilterConfiguration$FilterType, java.lang.String, int, java.lang.Object)
com.android.build.api.variant.FilterConfiguration.copy: com.android.build.api.variant.FilterConfiguration (com.android.build.api.variant.FilterConfiguration$FilterType, java.lang.String)
com.android.build.api.variant.FilterConfiguration.equals: boolean (java.lang.Object)
com.android.build.api.variant.FilterConfiguration.getFilterType: com.android.build.api.variant.FilterConfiguration$FilterType ()
com.android.build.api.variant.FilterConfiguration.getIdentifier: java.lang.String ()
com.android.build.api.variant.FilterConfiguration.hashCode: int ()
com.android.build.api.variant.FilterConfiguration.toString: java.lang.String ()
com.android.build.api.variant.LibraryVariant implements com.android.build.api.variant.Variant
com.android.build.api.variant.LibraryVariantProperties implements com.android.build.api.variant.VariantProperties
com.android.build.api.variant.LibraryVariantProperties.getApplicationId: org.gradle.api.provider.Provider<java.lang.String> ()
com.android.build.api.variant.TestVariant implements com.android.build.api.variant.Variant
com.android.build.api.variant.TestVariantProperties implements com.android.build.api.variant.VariantProperties
com.android.build.api.variant.TestVariantProperties.getApplicationId: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.variant.Variant implements com.android.build.api.component.Component, com.android.build.api.component.ActionableComponentObject
com.android.build.api.variant.Variant.androidTest: void (kotlin.jvm.functions.Function1<? super com.android.build.api.component.AndroidTest<com.android.build.api.component.AndroidTestProperties>, kotlin.Unit>)
com.android.build.api.variant.Variant.androidTestProperties: void (kotlin.jvm.functions.Function1<? super com.android.build.api.component.AndroidTestProperties, kotlin.Unit>)
com.android.build.api.variant.Variant.getMinSdkVersion: int ()
com.android.build.api.variant.Variant.setMinSdkVersion: void (int)
com.android.build.api.variant.Variant.unitTest: void (kotlin.jvm.functions.Function1<? super com.android.build.api.component.UnitTest<com.android.build.api.component.UnitTestProperties>, kotlin.Unit>)
com.android.build.api.variant.Variant.unitTestProperties: void (kotlin.jvm.functions.Function1<? super com.android.build.api.component.UnitTestProperties, kotlin.Unit>)
com.android.build.api.variant.VariantInfo
com.android.build.api.variant.VariantInfo.getBuildTypeName: java.lang.String ()
com.android.build.api.variant.VariantInfo.getFlavorNames: com.google.common.collect.ImmutableList<java.lang.String> ()
com.android.build.api.variant.VariantInfo.getFullVariantName: java.lang.String ()
com.android.build.api.variant.VariantInfo.isDebuggable: boolean ()
com.android.build.api.variant.VariantInfo.isTest: boolean ()
com.android.build.api.variant.VariantOutput implements com.android.build.api.variant.VariantOutputConfiguration
com.android.build.api.variant.VariantOutput.getVersionCode: org.gradle.api.provider.Property<java.lang.Integer> ()
com.android.build.api.variant.VariantOutput.getVersionName: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.variant.VariantOutput.isEnabled: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.VariantOutputConfiguration
com.android.build.api.variant.VariantOutputConfiguration$OutputType extends java.lang.Enum
com.android.build.api.variant.VariantOutputConfiguration$OutputType.valueOf: com.android.build.api.variant.VariantOutputConfiguration$OutputType (java.lang.String)
com.android.build.api.variant.VariantOutputConfiguration$OutputType.values: com.android.build.api.variant.VariantOutputConfiguration$OutputType[] ()
com.android.build.api.variant.VariantOutputConfiguration.getFilters: java.util.Collection<com.android.build.api.variant.FilterConfiguration> ()
com.android.build.api.variant.VariantOutputConfiguration.getOutputType: com.android.build.api.variant.VariantOutputConfiguration$OutputType ()
com.android.build.api.variant.VariantProperties implements com.android.build.api.component.ComponentProperties
com.android.build.api.variant.VariantProperties.getApplicationId: org.gradle.api.provider.Provider<java.lang.String> ()
