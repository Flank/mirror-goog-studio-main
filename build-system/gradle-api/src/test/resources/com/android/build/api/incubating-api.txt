Incubating Android Gradle Plugin API.
-------------------------------------------------------------------------
ATTENTION REVIEWER: If this needs to be changed, please make sure changes
below are backwards compatible.
-------------------------------------------------------------------------
Sha256 of below classes:
d23e12262bd21776f29e92a1222a6420f8ce89e551f9c0cefbe65f5e82ca3c7b
-------------------------------------------------------------------------
com.android.build.api.artifact.ArtifactConfigurationException
com.android.build.api.artifact.ArtifactConfigurationException.<init>: com.android.build.api.artifact.ArtifactConfigurationException (java.lang.String)
com.android.build.api.artifact.ArtifactType
com.android.build.api.artifact.ArtifactType.name: java.lang.String ()
com.android.build.api.artifact.BuildArtifactTransformBuilder
com.android.build.api.artifact.BuildArtifactTransformBuilder$ConfigurationAction
com.android.build.api.artifact.BuildArtifactTransformBuilder$ConfigurationAction.accept: void (T, com.android.build.api.artifact.InputArtifactProvider, com.android.build.api.artifact.OutputFileProvider)
com.android.build.api.artifact.BuildArtifactTransformBuilder.append: com.android.build.api.artifact.BuildArtifactTransformBuilder<T> (com.android.build.api.artifact.ArtifactType) throws com.android.build.api.artifact.ArtifactConfigurationException
com.android.build.api.artifact.BuildArtifactTransformBuilder.create: T (com.android.build.api.artifact.BuildArtifactTransformBuilder.com.android.build.api.artifact.BuildArtifactTransformBuilder$ConfigurationAction<? super T>)
com.android.build.api.artifact.BuildArtifactTransformBuilder.create: T (kotlin.jvm.functions.Function3<? super T, ? super com.android.build.api.artifact.InputArtifactProvider, ? super com.android.build.api.artifact.OutputFileProvider, kotlin.Unit>)
com.android.build.api.artifact.BuildArtifactTransformBuilder.input: com.android.build.api.artifact.BuildArtifactTransformBuilder<T> (com.android.build.api.artifact.ArtifactType) throws com.android.build.api.artifact.ArtifactConfigurationException
com.android.build.api.artifact.BuildArtifactTransformBuilder.replace: com.android.build.api.artifact.BuildArtifactTransformBuilder<T> (com.android.build.api.artifact.ArtifactType) throws com.android.build.api.artifact.ArtifactConfigurationException
com.android.build.api.artifact.BuildArtifactType
com.android.build.api.artifact.BuildArtifactType.valueOf: com.android.build.api.artifact.BuildArtifactType (java.lang.String)
com.android.build.api.artifact.BuildArtifactType.values: com.android.build.api.artifact.BuildArtifactType[] ()
com.android.build.api.artifact.BuildableArtifact
com.android.build.api.artifact.BuildableArtifact.getFiles: java.util.Set<java.io.File> ()
com.android.build.api.artifact.BuildableArtifact.isEmpty: boolean ()
com.android.build.api.artifact.InputArtifactProvider
com.android.build.api.artifact.InputArtifactProvider.getArtifact: com.android.build.api.artifact.BuildableArtifact ()
com.android.build.api.artifact.InputArtifactProvider.getArtifact: com.android.build.api.artifact.BuildableArtifact (com.android.build.api.artifact.ArtifactType)
com.android.build.api.artifact.OutputFileProvider
com.android.build.api.artifact.OutputFileProvider.getFile: java.io.File ()
com.android.build.api.artifact.OutputFileProvider.getFile: java.io.File (java.lang.String, com.android.build.api.artifact.ArtifactType[]) throws com.android.build.api.artifact.ArtifactConfigurationException
com.android.build.api.dsl.ApiVersion
com.android.build.api.dsl.ApiVersion.getApiLevel: java.lang.Integer ()
com.android.build.api.dsl.ApiVersion.getApiString: java.lang.String ()
com.android.build.api.dsl.ApiVersion.getCodename: java.lang.String ()
com.android.build.api.dsl.Initializable
com.android.build.api.dsl.Initializable.initWith: void (T)
com.android.build.api.dsl.extension.AndroidExtension
com.android.build.api.dsl.extension.ApkProperties
com.android.build.api.dsl.extension.ApkProperties.getGeneratePureSplits: boolean ()
com.android.build.api.dsl.extension.ApkProperties.getPackagingOptions: com.android.build.api.dsl.options.PackagingOptions ()
com.android.build.api.dsl.extension.ApkProperties.getSplits: com.android.build.api.dsl.options.Splits ()
com.android.build.api.dsl.extension.ApkProperties.packagingOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.PackagingOptions>)
com.android.build.api.dsl.extension.ApkProperties.setGeneratePureSplits: void (boolean)
com.android.build.api.dsl.extension.ApkProperties.splits: void (org.gradle.api.Action<com.android.build.api.dsl.options.Splits>)
com.android.build.api.dsl.extension.AppExtension
com.android.build.api.dsl.extension.AppExtension.getBuildOutputs: org.gradle.api.DomainObjectSet<?> ()
com.android.build.api.dsl.extension.BuildProperties
com.android.build.api.dsl.extension.BuildProperties.getBuildToolsVersion: java.lang.String ()
com.android.build.api.dsl.extension.BuildProperties.getCompileSdkVersion: java.lang.String ()
com.android.build.api.dsl.extension.BuildProperties.getResourcePrefix: java.lang.String ()
com.android.build.api.dsl.extension.BuildProperties.getSourceSets: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.sourcesets.AndroidSourceSet> ()
com.android.build.api.dsl.extension.BuildProperties.getTransforms: java.util.List<com.android.build.api.transform.Transform> ()
com.android.build.api.dsl.extension.BuildProperties.getTransformsDependencies: java.util.List<java.util.List<java.lang.Object>> ()
com.android.build.api.dsl.extension.BuildProperties.registerTransform: void (com.android.build.api.transform.Transform)
com.android.build.api.dsl.extension.BuildProperties.registerTransform: void (com.android.build.api.transform.Transform, java.lang.Object[])
com.android.build.api.dsl.extension.BuildProperties.setBuildToolsVersion: void (java.lang.String)
com.android.build.api.dsl.extension.BuildProperties.setCompileSdkVersion: void (int)
com.android.build.api.dsl.extension.BuildProperties.setCompileSdkVersion: void (java.lang.String)
com.android.build.api.dsl.extension.BuildProperties.setResourcePrefix: void (java.lang.String)
com.android.build.api.dsl.extension.BuildProperties.sourceSets: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.api.sourcesets.AndroidSourceSet>>)
com.android.build.api.dsl.extension.BuildProperties.useLibrary: void (java.lang.String)
com.android.build.api.dsl.extension.BuildProperties.useLibrary: void (java.lang.String, boolean)
com.android.build.api.dsl.extension.EmbeddedTestProperties
com.android.build.api.dsl.extension.EmbeddedTestProperties.getTestBuildType: java.lang.String ()
com.android.build.api.dsl.extension.EmbeddedTestProperties.getTestOptions: com.android.builder.model.TestOptions ()
com.android.build.api.dsl.extension.EmbeddedTestProperties.getTestVariants: org.gradle.api.DomainObjectSet<com.android.build.api.dsl.variant.TestVariant> ()
com.android.build.api.dsl.extension.EmbeddedTestProperties.getUnitTestVariants: org.gradle.api.DomainObjectSet<com.android.build.api.dsl.variant.UnitTestVariant> ()
com.android.build.api.dsl.extension.EmbeddedTestProperties.setTestBuildType: void (java.lang.String)
com.android.build.api.dsl.extension.EmbeddedTestProperties.testOptions: void (org.gradle.api.Action<com.android.builder.model.TestOptions>)
com.android.build.api.dsl.extension.FeatureExtension
com.android.build.api.dsl.extension.FeatureExtension.baseFeature: void (boolean)
com.android.build.api.dsl.extension.FeatureExtension.getBaseFeature: boolean ()
com.android.build.api.dsl.extension.FeatureExtension.setBaseFeature: void (boolean)
com.android.build.api.dsl.extension.LibraryExtension
com.android.build.api.dsl.extension.LibraryExtension.getAidlPackageWhiteList: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.extension.LibraryExtension.getDefaultPublishConfig: java.lang.String ()
com.android.build.api.dsl.extension.LibraryExtension.getPackageBuildConfig: boolean ()
com.android.build.api.dsl.extension.LibraryExtension.setAidlPackageWhiteList: void (java.util.Collection<java.lang.String>)
com.android.build.api.dsl.extension.LibraryExtension.setDefaultPublishConfig: void (java.lang.String)
com.android.build.api.dsl.extension.LibraryExtension.setPackageBuildConfig: void (boolean)
com.android.build.api.dsl.extension.OnDeviceTestProperties
com.android.build.api.dsl.extension.OnDeviceTestProperties.adbOptions: void (org.gradle.api.Action<com.android.builder.model.AdbOptions>)
com.android.build.api.dsl.extension.OnDeviceTestProperties.getAdbOptions: com.android.builder.model.AdbOptions ()
com.android.build.api.dsl.extension.OnDeviceTestProperties.getDeviceProviders: java.util.List<com.android.builder.testing.api.DeviceProvider> ()
com.android.build.api.dsl.extension.OnDeviceTestProperties.getTestServers: java.util.List<com.android.builder.testing.api.TestServer> ()
com.android.build.api.dsl.extension.OnDeviceTestProperties.setDeviceProviders: void (java.util.List<com.android.builder.testing.api.DeviceProvider>)
com.android.build.api.dsl.extension.OnDeviceTestProperties.setTestServers: void (java.util.List<com.android.builder.testing.api.TestServer>)
com.android.build.api.dsl.extension.TestExtension
com.android.build.api.dsl.extension.TestExtension.getTargetProjectPath: java.lang.String ()
com.android.build.api.dsl.extension.TestExtension.getTargetVariant: java.lang.String ()
com.android.build.api.dsl.extension.TestExtension.setTargetProjectPath: void (java.lang.String)
com.android.build.api.dsl.extension.TestExtension.setTargetVariant: void (java.lang.String)
com.android.build.api.dsl.extension.VariantAwareProperties
com.android.build.api.dsl.extension.VariantAwareProperties.buildTypes: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.model.BuildType>>)
com.android.build.api.dsl.extension.VariantAwareProperties.defaultConfig: void (org.gradle.api.Action<com.android.build.api.dsl.model.DefaultConfig>)
com.android.build.api.dsl.extension.VariantAwareProperties.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.model.BuildType> ()
com.android.build.api.dsl.extension.VariantAwareProperties.getDefaultConfig: com.android.build.api.dsl.model.DefaultConfig ()
com.android.build.api.dsl.extension.VariantAwareProperties.getFlavorDimensionList: java.util.List<java.lang.String> ()
com.android.build.api.dsl.extension.VariantAwareProperties.getFlavorDimensions: java.util.List<java.lang.String> ()
com.android.build.api.dsl.extension.VariantAwareProperties.getPostVariants: java.util.List<org.gradle.api.Action<java.util.Collection<com.android.build.api.dsl.variant.Variant>>> ()
com.android.build.api.dsl.extension.VariantAwareProperties.getPreVariantCallbacks: java.util.List<org.gradle.api.Action<java.lang.Void>> ()
com.android.build.api.dsl.extension.VariantAwareProperties.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.model.ProductFlavor> ()
com.android.build.api.dsl.extension.VariantAwareProperties.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.options.SigningConfig> ()
com.android.build.api.dsl.extension.VariantAwareProperties.getVariantFilters: java.util.List<org.gradle.api.Action<com.android.build.api.dsl.variant.VariantFilter>> ()
com.android.build.api.dsl.extension.VariantAwareProperties.getVariants: com.android.build.api.dsl.extension.VariantCallbackHandler<com.android.build.api.dsl.variant.Variant> ()
com.android.build.api.dsl.extension.VariantAwareProperties.postVariantCallback: void (org.gradle.api.Action<java.util.Collection<com.android.build.api.dsl.variant.Variant>>)
com.android.build.api.dsl.extension.VariantAwareProperties.preVariantCallback: void (org.gradle.api.Action<java.lang.Void>)
com.android.build.api.dsl.extension.VariantAwareProperties.productFlavors: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.model.ProductFlavor>>)
com.android.build.api.dsl.extension.VariantAwareProperties.setFlavorDimensionList: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.extension.VariantAwareProperties.setFlavorDimensions: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.extension.VariantAwareProperties.setPostVariants: void (java.util.List<org.gradle.api.Action<java.util.Collection<com.android.build.api.dsl.variant.Variant>>>)
com.android.build.api.dsl.extension.VariantAwareProperties.setPreVariantCallbacks: void (java.util.List<org.gradle.api.Action<java.lang.Void>>)
com.android.build.api.dsl.extension.VariantAwareProperties.setVariantFilters: void (java.util.List<org.gradle.api.Action<com.android.build.api.dsl.variant.VariantFilter>>)
com.android.build.api.dsl.extension.VariantAwareProperties.signingConfigs: void (org.gradle.api.Action<org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.options.SigningConfig>>)
com.android.build.api.dsl.extension.VariantAwareProperties.variantFilter: void (org.gradle.api.Action<com.android.build.api.dsl.variant.VariantFilter>)
com.android.build.api.dsl.extension.VariantCallbackHandler
com.android.build.api.dsl.extension.VariantCallbackHandler.all: void (org.gradle.api.Action<T>)
com.android.build.api.dsl.extension.VariantCallbackHandler.withBuildType: com.android.build.api.dsl.extension.VariantCallbackHandler<T> (java.lang.String)
com.android.build.api.dsl.extension.VariantCallbackHandler.withBuildType: void (java.lang.String, org.gradle.api.Action<T>)
com.android.build.api.dsl.extension.VariantCallbackHandler.withName: com.android.build.api.dsl.extension.VariantCallbackHandler<T> (java.lang.String)
com.android.build.api.dsl.extension.VariantCallbackHandler.withName: void (java.lang.String, org.gradle.api.Action<T>)
com.android.build.api.dsl.extension.VariantCallbackHandler.withProductFlavor: com.android.build.api.dsl.extension.VariantCallbackHandler<T> (java.lang.String)
com.android.build.api.dsl.extension.VariantCallbackHandler.withProductFlavor: void (java.lang.String, org.gradle.api.Action<T>)
com.android.build.api.dsl.extension.VariantCallbackHandler.withType: com.android.build.api.dsl.extension.VariantCallbackHandler<S> (java.lang.Class<S>)
com.android.build.api.dsl.extension.VariantCallbackHandler.withType: void (java.lang.Class<S>, org.gradle.api.Action<S>)
com.android.build.api.dsl.extension.VariantOrExtensionProperties
com.android.build.api.dsl.extension.VariantOrExtensionProperties.aaptOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.AaptOptions>)
com.android.build.api.dsl.extension.VariantOrExtensionProperties.dataBinding: void (org.gradle.api.Action<com.android.builder.model.DataBindingOptions>)
com.android.build.api.dsl.extension.VariantOrExtensionProperties.dexOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.DexOptions>)
com.android.build.api.dsl.extension.VariantOrExtensionProperties.getAaptOptions: com.android.build.api.dsl.options.AaptOptions ()
com.android.build.api.dsl.extension.VariantOrExtensionProperties.getDataBinding: com.android.builder.model.DataBindingOptions ()
com.android.build.api.dsl.extension.VariantOrExtensionProperties.getDexOptions: com.android.build.api.dsl.options.DexOptions ()
com.android.build.api.dsl.extension.VariantOrExtensionProperties.getLintOptions: com.android.build.api.dsl.options.LintOptions ()
com.android.build.api.dsl.extension.VariantOrExtensionProperties.lintOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.LintOptions>)
com.android.build.api.dsl.model.BaseFlavor
com.android.build.api.dsl.model.BaseFlavor.getGeneratedDensities: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.model.BaseFlavor.getPostProcessing: com.android.build.api.dsl.options.PostProcessingFilesOptions ()
com.android.build.api.dsl.model.BaseFlavor.getTestApplicationId: java.lang.String ()
com.android.build.api.dsl.model.BaseFlavor.getTestFunctionalTest: java.lang.Boolean ()
com.android.build.api.dsl.model.BaseFlavor.getTestHandleProfiling: java.lang.Boolean ()
com.android.build.api.dsl.model.BaseFlavor.getTestInstrumentationRunner: java.lang.String ()
com.android.build.api.dsl.model.BaseFlavor.getTestInstrumentationRunnerArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.model.BaseFlavor.getWearAppUnbundled: java.lang.Boolean ()
com.android.build.api.dsl.model.BaseFlavor.missingDimensionStrategy: void (java.lang.String, java.lang.String)
com.android.build.api.dsl.model.BaseFlavor.missingDimensionStrategy: void (java.lang.String, java.lang.String[])
com.android.build.api.dsl.model.BaseFlavor.missingDimensionStrategy: void (java.lang.String, java.util.List<java.lang.String>)
com.android.build.api.dsl.model.BaseFlavor.postProcessing: void (org.gradle.api.Action<com.android.build.api.dsl.options.PostProcessingFilesOptions>)
com.android.build.api.dsl.model.BaseFlavor.setGeneratedDensities: void (java.lang.Iterable<java.lang.String>)
com.android.build.api.dsl.model.BaseFlavor.setTestApplicationId: void (java.lang.String)
com.android.build.api.dsl.model.BaseFlavor.setTestFunctionalTest: void (boolean)
com.android.build.api.dsl.model.BaseFlavor.setTestHandleProfiling: void (boolean)
com.android.build.api.dsl.model.BaseFlavor.setTestInstrumentationRunner: void (java.lang.String)
com.android.build.api.dsl.model.BaseFlavor.setTestInstrumentationRunnerArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.model.BaseFlavor.setWearAppUnbundled: void (java.lang.Boolean)
com.android.build.api.dsl.model.BaseFlavor.testInstrumentationRunnerArgument: void (java.lang.String, java.lang.String)
com.android.build.api.dsl.model.BaseFlavor.testInstrumentationRunnerArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.model.BaseFlavor.wearAppUnbundled: void (java.lang.Boolean)
com.android.build.api.dsl.model.BuildType
com.android.build.api.dsl.model.BuildType.getCrunchPngsDefault: boolean ()
com.android.build.api.dsl.model.BuildType.getMinifyEnabled: boolean ()
com.android.build.api.dsl.model.BuildType.getShrinkResources: boolean ()
com.android.build.api.dsl.model.BuildType.getUseProguard: java.lang.Boolean ()
com.android.build.api.dsl.model.BuildType.isCrunchPngs: boolean ()
com.android.build.api.dsl.model.BuildType.isCrunchPngsDefault: boolean ()
com.android.build.api.dsl.model.BuildType.isMinifiedEnabled: boolean ()
com.android.build.api.dsl.model.BuildType.isShrinkResources: boolean ()
com.android.build.api.dsl.model.BuildType.isUseProguard: java.lang.Boolean ()
com.android.build.api.dsl.model.BuildType.setCrunchPngsDefault: void (boolean)
com.android.build.api.dsl.model.BuildType.setMinifyEnabled: void (boolean)
com.android.build.api.dsl.model.BuildType.setShrinkResources: void (boolean)
com.android.build.api.dsl.model.BuildTypeOrProductFlavor
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.consumerProguardFile: void (java.lang.Object)
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.consumerProguardFiles: void (java.lang.Object[])
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.getApplicationIdSuffix: java.lang.String ()
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.getVersionNameSuffix: java.lang.String ()
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.proguardFile: void (java.lang.Object)
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.proguardFiles: void (java.lang.Object[])
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.setApplicationIdSuffix: void (java.lang.String)
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.setConsumerProguardFiles: void (java.lang.Iterable<?>)
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.setProguardFiles: void (java.lang.Iterable<?>)
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.setTestProguardFiles: void (java.lang.Iterable<?>)
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.setVersionNameSuffix: void (java.lang.String)
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.testProguardFile: void (java.lang.Object)
com.android.build.api.dsl.model.BuildTypeOrProductFlavor.testProguardFiles: void (java.lang.Object[])
com.android.build.api.dsl.model.BuildTypeOrVariant
com.android.build.api.dsl.model.BuildTypeOrVariant.getCrunchPngs: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.getDebuggable: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.getEmbedMicroApp: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.getJniDebuggable: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.getPostProcessing: com.android.build.api.dsl.options.PostProcessingOptions ()
com.android.build.api.dsl.model.BuildTypeOrVariant.getPseudoLocalesEnabled: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.getRenderscriptDebuggable: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.getRenderscriptOptimLevel: int ()
com.android.build.api.dsl.model.BuildTypeOrVariant.getTestCoverageEnabled: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.getZipAlignEnabled: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.isDebuggable: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.isEmbedMicroApp: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.isJniDebuggable: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.isPseudoLocalesEnabled: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.isRenderscriptDebuggable: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.isTestCoverageEnabled: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.isZipAlignEnabled: boolean ()
com.android.build.api.dsl.model.BuildTypeOrVariant.postProcessing: void (org.gradle.api.Action<com.android.build.api.dsl.options.PostProcessingOptions>)
com.android.build.api.dsl.model.BuildTypeOrVariant.setCrunchPngs: void (boolean)
com.android.build.api.dsl.model.BuildTypeOrVariant.setDebuggable: void (boolean)
com.android.build.api.dsl.model.BuildTypeOrVariant.setEmbedMicroApp: void (boolean)
com.android.build.api.dsl.model.BuildTypeOrVariant.setJniDebuggable: void (boolean)
com.android.build.api.dsl.model.BuildTypeOrVariant.setPseudoLocalesEnabled: void (boolean)
com.android.build.api.dsl.model.BuildTypeOrVariant.setRenderscriptDebuggable: void (boolean)
com.android.build.api.dsl.model.BuildTypeOrVariant.setRenderscriptOptimLevel: void (int)
com.android.build.api.dsl.model.BuildTypeOrVariant.setTestCoverageEnabled: void (boolean)
com.android.build.api.dsl.model.BuildTypeOrVariant.setZipAlignEnabled: void (boolean)
com.android.build.api.dsl.model.DefaultConfig
com.android.build.api.dsl.model.FallbackStrategy
com.android.build.api.dsl.model.FallbackStrategy.getMatchingFallbacks: java.util.List<java.lang.String> ()
com.android.build.api.dsl.model.FallbackStrategy.setMatchingFallbacks: void (java.lang.String)
com.android.build.api.dsl.model.FallbackStrategy.setMatchingFallbacks: void (java.lang.String[])
com.android.build.api.dsl.model.FallbackStrategy.setMatchingFallbacks: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.model.ProductFlavor
com.android.build.api.dsl.model.ProductFlavor.getDimension: java.lang.String ()
com.android.build.api.dsl.model.ProductFlavor.setDimension: void (java.lang.String)
com.android.build.api.dsl.model.ProductFlavorOrVariant
com.android.build.api.dsl.model.ProductFlavorOrVariant.getApplicationId: java.lang.String ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getInstrumentationOptions: com.android.build.api.dsl.options.InstrumentationOptions ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getMaxSdkVersion: java.lang.Integer ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getMinSdkVersion: com.android.build.api.dsl.ApiVersion ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getRenderscriptNdkModeEnabled: java.lang.Boolean ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getRenderscriptSupportModeBlasEnabled: java.lang.Boolean ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getRenderscriptSupportModeEnabled: java.lang.Boolean ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getRenderscriptTargetApi: java.lang.Integer ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getResConfigs: java.util.List<java.lang.String> ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getTargetSdkVersion: com.android.build.api.dsl.ApiVersion ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getVectorDrawables: com.android.build.api.dsl.options.VectorDrawablesOptions ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getVersionCode: java.lang.Integer ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.getVersionName: java.lang.String ()
com.android.build.api.dsl.model.ProductFlavorOrVariant.instrumentationOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.InstrumentationOptions>)
com.android.build.api.dsl.model.ProductFlavorOrVariant.minSdkVersion: void (int)
com.android.build.api.dsl.model.ProductFlavorOrVariant.minSdkVersion: void (java.lang.String)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setApplicationId: void (java.lang.String)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setMaxSdkVersion: void (java.lang.Integer)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setMinSdkVersion: void (com.android.build.api.dsl.ApiVersion)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setMinSdkVersion: void (int)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setMinSdkVersion: void (java.lang.String)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setRenderscriptNdkModeEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setRenderscriptSupportModeBlasEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setRenderscriptSupportModeEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setRenderscriptTargetApi: void (java.lang.Integer)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setResConfigs: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setTargetSdkVersion: void (com.android.build.api.dsl.ApiVersion)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setTargetSdkVersion: void (int)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setTargetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setVersionCode: void (java.lang.Integer)
com.android.build.api.dsl.model.ProductFlavorOrVariant.setVersionName: void (java.lang.String)
com.android.build.api.dsl.model.ProductFlavorOrVariant.targetSdkVersion: void (int)
com.android.build.api.dsl.model.ProductFlavorOrVariant.targetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.model.ProductFlavorOrVariant.vectorDrawables: void (org.gradle.api.Action<com.android.build.api.dsl.options.VectorDrawablesOptions>)
com.android.build.api.dsl.model.TypedValue
com.android.build.api.dsl.model.TypedValue.getName: java.lang.String ()
com.android.build.api.dsl.model.TypedValue.getType: java.lang.String ()
com.android.build.api.dsl.model.TypedValue.getValue: java.lang.String ()
com.android.build.api.dsl.model.VariantProperties
com.android.build.api.dsl.model.VariantProperties.buildConfigField: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.api.dsl.model.VariantProperties.compileOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.JavaCompileOptions>)
com.android.build.api.dsl.model.VariantProperties.externalNativeBuild: void (org.gradle.api.Action<com.android.build.api.dsl.options.ExternalNativeBuildOptions>)
com.android.build.api.dsl.model.VariantProperties.externalNativeBuildOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.ExternalNativeBuildOptions>)
com.android.build.api.dsl.model.VariantProperties.getBuildConfigFields: java.util.List<com.android.build.api.dsl.model.TypedValue> ()
com.android.build.api.dsl.model.VariantProperties.getCompileOptions: com.android.build.api.dsl.options.JavaCompileOptions ()
com.android.build.api.dsl.model.VariantProperties.getExternalNativeBuildOptions: com.android.build.api.dsl.options.ExternalNativeBuildOptions ()
com.android.build.api.dsl.model.VariantProperties.getJavaCompileOptions: com.android.build.api.dsl.options.JavaCompileOptions ()
com.android.build.api.dsl.model.VariantProperties.getManifestPlaceholders: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.api.dsl.model.VariantProperties.getMultiDexEnabled: java.lang.Boolean ()
com.android.build.api.dsl.model.VariantProperties.getMultiDexKeepFile: java.io.File ()
com.android.build.api.dsl.model.VariantProperties.getMultiDexKeepProguard: java.io.File ()
com.android.build.api.dsl.model.VariantProperties.getNdkOptions: com.android.build.api.dsl.options.NdkOptions ()
com.android.build.api.dsl.model.VariantProperties.getResValues: java.util.List<com.android.build.api.dsl.model.TypedValue> ()
com.android.build.api.dsl.model.VariantProperties.getShaders: com.android.build.api.dsl.options.ShaderOptions ()
com.android.build.api.dsl.model.VariantProperties.getSigningConfig: com.android.build.api.dsl.options.SigningConfig ()
com.android.build.api.dsl.model.VariantProperties.javaCompileOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.JavaCompileOptions>)
com.android.build.api.dsl.model.VariantProperties.ndkOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.NdkOptions>)
com.android.build.api.dsl.model.VariantProperties.resValue: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.api.dsl.model.VariantProperties.setBuildConfigFields: void (java.util.List<com.android.build.api.dsl.model.TypedValue>)
com.android.build.api.dsl.model.VariantProperties.setManifestPlaceholders: void (java.util.Map<java.lang.String, java.lang.Object>)
com.android.build.api.dsl.model.VariantProperties.setMultiDexEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.model.VariantProperties.setMultiDexKeepFile: void (java.io.File)
com.android.build.api.dsl.model.VariantProperties.setMultiDexKeepProguard: void (java.io.File)
com.android.build.api.dsl.model.VariantProperties.setResValues: void (java.util.List<com.android.build.api.dsl.model.TypedValue>)
com.android.build.api.dsl.model.VariantProperties.setSigningConfig: void (com.android.build.api.dsl.options.SigningConfig)
com.android.build.api.dsl.model.VariantProperties.shaderOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.ShaderOptions>)
com.android.build.api.dsl.options.AaptOptions
com.android.build.api.dsl.options.AaptOptions.getAdditionalParameters: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.AaptOptions.getCruncherEnabled: boolean ()
com.android.build.api.dsl.options.AaptOptions.getCruncherEnabledOverride: java.lang.Boolean ()
com.android.build.api.dsl.options.AaptOptions.getCruncherProcesses: int ()
com.android.build.api.dsl.options.AaptOptions.getFailOnMissingConfigEntry: boolean ()
com.android.build.api.dsl.options.AaptOptions.getIgnoreAssetsPattern: java.lang.String ()
com.android.build.api.dsl.options.AaptOptions.getNamespaced: java.lang.Boolean ()
com.android.build.api.dsl.options.AaptOptions.getNoCompress: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.options.AaptOptions.getUseNewCruncher: boolean ()
com.android.build.api.dsl.options.AaptOptions.setAdditionalParameters: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.AaptOptions.setCruncherEnabled: void (boolean)
com.android.build.api.dsl.options.AaptOptions.setCruncherProcesses: void (int)
com.android.build.api.dsl.options.AaptOptions.setFailOnMissingConfigEntry: void (boolean)
com.android.build.api.dsl.options.AaptOptions.setIgnoreAssetsPattern: void (java.lang.String)
com.android.build.api.dsl.options.AaptOptions.setNamespaced: void (java.lang.Boolean)
com.android.build.api.dsl.options.AaptOptions.setUseNewCruncher: void (boolean)
com.android.build.api.dsl.options.AbiSplitOptions
com.android.build.api.dsl.options.AbiSplitOptions.isUniversalApk: boolean ()
com.android.build.api.dsl.options.AbiSplitOptions.setUniversalApk: void (boolean)
com.android.build.api.dsl.options.AdbOptions
com.android.build.api.dsl.options.AdbOptions.getInstallOptions: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.options.AdbOptions.getTimeOutInMs: int ()
com.android.build.api.dsl.options.AdbOptions.setTimeOutInMs: void (int)
com.android.build.api.dsl.options.AnnotationProcessorOptions
com.android.build.api.dsl.options.AnnotationProcessorOptions.getArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.options.AnnotationProcessorOptions.getClassNames: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.AnnotationProcessorOptions.getIncludeCompileClasspath: java.lang.Boolean ()
com.android.build.api.dsl.options.AnnotationProcessorOptions.setArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.options.AnnotationProcessorOptions.setClassNames: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.AnnotationProcessorOptions.setIncludeCompileClasspath: void (java.lang.Boolean)
com.android.build.api.dsl.options.BuildArtifactsOptions
com.android.build.api.dsl.options.BuildArtifactsOptions.appendTo: void (com.android.build.api.artifact.ArtifactType, java.lang.String, java.lang.Class<T>, com.android.build.api.artifact.BuildArtifactTransformBuilder.com.android.build.api.artifact.BuildArtifactTransformBuilder$ConfigurationAction<? super T>)
com.android.build.api.dsl.options.BuildArtifactsOptions.appendTo: void (com.android.build.api.artifact.ArtifactType, java.lang.String, java.lang.Class<T>, kotlin.jvm.functions.Function3<? super T, ? super com.android.build.api.artifact.BuildableArtifact, ? super java.io.File, kotlin.Unit>)
com.android.build.api.dsl.options.BuildArtifactsOptions.builder: com.android.build.api.artifact.BuildArtifactTransformBuilder<T> (java.lang.String, java.lang.Class<T>)
com.android.build.api.dsl.options.BuildArtifactsOptions.replace: void (com.android.build.api.artifact.ArtifactType, java.lang.String, java.lang.Class<T>, com.android.build.api.artifact.BuildArtifactTransformBuilder.com.android.build.api.artifact.BuildArtifactTransformBuilder$ConfigurationAction<? super T>)
com.android.build.api.dsl.options.BuildArtifactsOptions.replace: void (com.android.build.api.artifact.ArtifactType, java.lang.String, java.lang.Class<T>, kotlin.jvm.functions.Function3<? super T, ? super com.android.build.api.artifact.BuildableArtifact, ? super java.io.File, kotlin.Unit>)
com.android.build.api.dsl.options.DensitySplitOptions
com.android.build.api.dsl.options.DensitySplitOptions.getAuto: boolean ()
com.android.build.api.dsl.options.DensitySplitOptions.getCompatibleScreens: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.DensitySplitOptions.getStrict: boolean ()
com.android.build.api.dsl.options.DensitySplitOptions.setAuto: void (boolean)
com.android.build.api.dsl.options.DensitySplitOptions.setStrict: void (boolean)
com.android.build.api.dsl.options.DexOptions
com.android.build.api.dsl.options.DexOptions.getAdditionalParameters: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.DexOptions.getDexInProcess: boolean ()
com.android.build.api.dsl.options.DexOptions.getIncremental: boolean ()
com.android.build.api.dsl.options.DexOptions.getJavaMaxHeapSize: java.lang.String ()
com.android.build.api.dsl.options.DexOptions.getJumboMode: boolean ()
com.android.build.api.dsl.options.DexOptions.getKeepRuntimeAnnotatedClasses: boolean ()
com.android.build.api.dsl.options.DexOptions.getMaxProcessCount: java.lang.Integer ()
com.android.build.api.dsl.options.DexOptions.getOptimize: java.lang.Boolean ()
com.android.build.api.dsl.options.DexOptions.getPreDexLibraries: boolean ()
com.android.build.api.dsl.options.DexOptions.getThreadCount: java.lang.Integer ()
com.android.build.api.dsl.options.DexOptions.setAdditionalParameters: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.DexOptions.setDexInProcess: void (boolean)
com.android.build.api.dsl.options.DexOptions.setIncremental: void (boolean)
com.android.build.api.dsl.options.DexOptions.setJavaMaxHeapSize: void (java.lang.String)
com.android.build.api.dsl.options.DexOptions.setJumboMode: void (boolean)
com.android.build.api.dsl.options.DexOptions.setKeepRuntimeAnnotatedClasses: void (boolean)
com.android.build.api.dsl.options.DexOptions.setMaxProcessCount: void (java.lang.Integer)
com.android.build.api.dsl.options.DexOptions.setOptimize: void (java.lang.Boolean)
com.android.build.api.dsl.options.DexOptions.setPreDexLibraries: void (boolean)
com.android.build.api.dsl.options.DexOptions.setThreadCount: void (java.lang.Integer)
com.android.build.api.dsl.options.ExternalNativeBuildOptions
com.android.build.api.dsl.options.ExternalNativeBuildOptions.externalNativeCmakeOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.ExternalNativeCmakeOptions>)
com.android.build.api.dsl.options.ExternalNativeBuildOptions.externalNativeNdkBuildOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions>)
com.android.build.api.dsl.options.ExternalNativeBuildOptions.getExternalNativeCmakeOptions: com.android.build.api.dsl.options.ExternalNativeCmakeOptions ()
com.android.build.api.dsl.options.ExternalNativeBuildOptions.getExternalNativeNdkBuildOptions: com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions ()
com.android.build.api.dsl.options.ExternalNativeCmakeOptions
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.getCFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.setAbiFilters: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.setArguments: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.setCFlags: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.setCppFlags: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.ExternalNativeCmakeOptions.setTargets: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.getCFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.setAbiFilters: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.setArguments: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.setCFlags: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.setCppFlags: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.ExternalNativeNdkBuildOptions.setTargets: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.InstrumentationOptions
com.android.build.api.dsl.options.InstrumentationOptions.getApplicationId: java.lang.String ()
com.android.build.api.dsl.options.InstrumentationOptions.getFunctionalTest: java.lang.Boolean ()
com.android.build.api.dsl.options.InstrumentationOptions.getHandleProfiling: java.lang.Boolean ()
com.android.build.api.dsl.options.InstrumentationOptions.getInstrumentationRunner: java.lang.String ()
com.android.build.api.dsl.options.InstrumentationOptions.getInstrumentationRunnerArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.options.InstrumentationOptions.setApplicationId: void (java.lang.String)
com.android.build.api.dsl.options.InstrumentationOptions.setFunctionalTest: void (java.lang.Boolean)
com.android.build.api.dsl.options.InstrumentationOptions.setHandleProfiling: void (java.lang.Boolean)
com.android.build.api.dsl.options.InstrumentationOptions.setInstrumentationRunner: void (java.lang.String)
com.android.build.api.dsl.options.InstrumentationOptions.setInstrumentationRunnerArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.options.JavaCompileOptions
com.android.build.api.dsl.options.JavaCompileOptions.annotationProcessorOptions: void (org.gradle.api.Action<com.android.build.api.dsl.options.AnnotationProcessorOptions>)
com.android.build.api.dsl.options.JavaCompileOptions.getAnnotationProcessorOptions: com.android.build.api.dsl.options.AnnotationProcessorOptions ()
com.android.build.api.dsl.options.JavaCompileOptions.getEncoding: java.lang.String ()
com.android.build.api.dsl.options.JavaCompileOptions.getIncremental: java.lang.Boolean ()
com.android.build.api.dsl.options.JavaCompileOptions.getSourceCompatibility: org.gradle.api.JavaVersion ()
com.android.build.api.dsl.options.JavaCompileOptions.getTargetCompatibility: org.gradle.api.JavaVersion ()
com.android.build.api.dsl.options.JavaCompileOptions.setEncoding: void (java.lang.String)
com.android.build.api.dsl.options.JavaCompileOptions.setIncremental: void (java.lang.Boolean)
com.android.build.api.dsl.options.JavaCompileOptions.setSourceCompatibility: void (java.lang.Object)
com.android.build.api.dsl.options.JavaCompileOptions.setSourceCompatibility: void (org.gradle.api.JavaVersion)
com.android.build.api.dsl.options.JavaCompileOptions.setTargetCompatibility: void (java.lang.Object)
com.android.build.api.dsl.options.JavaCompileOptions.setTargetCompatibility: void (org.gradle.api.JavaVersion)
com.android.build.api.dsl.options.LanguageSplitOptions
com.android.build.api.dsl.options.LanguageSplitOptions.getApplicationFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.LanguageSplitOptions.getAuto: boolean ()
com.android.build.api.dsl.options.LanguageSplitOptions.getEnabled: boolean ()
com.android.build.api.dsl.options.LanguageSplitOptions.getInclude: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.LanguageSplitOptions.setAuto: void (boolean)
com.android.build.api.dsl.options.LanguageSplitOptions.setEnabled: void (boolean)
com.android.build.api.dsl.options.LintOptions
com.android.build.api.dsl.options.LintOptions.baseline: void (java.io.File)
com.android.build.api.dsl.options.LintOptions.baseline: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.check: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.check: void (java.lang.String[])
com.android.build.api.dsl.options.LintOptions.disable: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.disable: void (java.lang.String[])
com.android.build.api.dsl.options.LintOptions.enable: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.enable: void (java.lang.String[])
com.android.build.api.dsl.options.LintOptions.error: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.error: void (java.lang.String[])
com.android.build.api.dsl.options.LintOptions.fatal: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.fatal: void (java.lang.String[])
com.android.build.api.dsl.options.LintOptions.getBaselineFile: java.io.File ()
com.android.build.api.dsl.options.LintOptions.getCheck: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.LintOptions.getDisable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.LintOptions.getEnable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.LintOptions.getHtmlOutput: java.io.File ()
com.android.build.api.dsl.options.LintOptions.getHtmlReport: boolean ()
com.android.build.api.dsl.options.LintOptions.getLintConfig: java.io.File ()
com.android.build.api.dsl.options.LintOptions.getTextOutput: java.io.File ()
com.android.build.api.dsl.options.LintOptions.getTextReport: boolean ()
com.android.build.api.dsl.options.LintOptions.getXmlOutput: java.io.File ()
com.android.build.api.dsl.options.LintOptions.getXmlReport: boolean ()
com.android.build.api.dsl.options.LintOptions.ignore: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.ignore: void (java.lang.String[])
com.android.build.api.dsl.options.LintOptions.informational: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.informational: void (java.lang.String[])
com.android.build.api.dsl.options.LintOptions.isAbortOnError: boolean ()
com.android.build.api.dsl.options.LintOptions.isAbsolutePaths: boolean ()
com.android.build.api.dsl.options.LintOptions.isCheckAllWarnings: boolean ()
com.android.build.api.dsl.options.LintOptions.isCheckDependencies: boolean ()
com.android.build.api.dsl.options.LintOptions.isCheckGeneratedSources: boolean ()
com.android.build.api.dsl.options.LintOptions.isCheckReleaseBuilds: boolean ()
com.android.build.api.dsl.options.LintOptions.isCheckTestSources: boolean ()
com.android.build.api.dsl.options.LintOptions.isExplainIssues: boolean ()
com.android.build.api.dsl.options.LintOptions.isIgnoreWarnings: boolean ()
com.android.build.api.dsl.options.LintOptions.isNoLines: boolean ()
com.android.build.api.dsl.options.LintOptions.isQuiet: boolean ()
com.android.build.api.dsl.options.LintOptions.isShowAll: boolean ()
com.android.build.api.dsl.options.LintOptions.isWarningsAsErrors: boolean ()
com.android.build.api.dsl.options.LintOptions.setAbortOnError: void (boolean)
com.android.build.api.dsl.options.LintOptions.setAbsolutePaths: void (boolean)
com.android.build.api.dsl.options.LintOptions.setBaselineFile: void (java.io.File)
com.android.build.api.dsl.options.LintOptions.setCheck: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.LintOptions.setCheckAllWarnings: void (boolean)
com.android.build.api.dsl.options.LintOptions.setCheckDependencies: void (boolean)
com.android.build.api.dsl.options.LintOptions.setCheckGeneratedSources: void (boolean)
com.android.build.api.dsl.options.LintOptions.setCheckReleaseBuilds: void (boolean)
com.android.build.api.dsl.options.LintOptions.setCheckTestSources: void (boolean)
com.android.build.api.dsl.options.LintOptions.setDisable: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.LintOptions.setEnable: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.LintOptions.setExplainIssues: void (boolean)
com.android.build.api.dsl.options.LintOptions.setHtmlOutput: void (java.io.File)
com.android.build.api.dsl.options.LintOptions.setHtmlReport: void (boolean)
com.android.build.api.dsl.options.LintOptions.setIgnoreWarnings: void (boolean)
com.android.build.api.dsl.options.LintOptions.setLintConfig: void (java.io.File)
com.android.build.api.dsl.options.LintOptions.setNoLines: void (boolean)
com.android.build.api.dsl.options.LintOptions.setQuiet: void (boolean)
com.android.build.api.dsl.options.LintOptions.setShowAll: void (boolean)
com.android.build.api.dsl.options.LintOptions.setTextReport: void (boolean)
com.android.build.api.dsl.options.LintOptions.setWarningsAsErrors: void (boolean)
com.android.build.api.dsl.options.LintOptions.setXmlOutput: void (java.io.File)
com.android.build.api.dsl.options.LintOptions.setXmlReport: void (boolean)
com.android.build.api.dsl.options.LintOptions.textOutput: void (java.io.File)
com.android.build.api.dsl.options.LintOptions.textOutput: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.warning: void (java.lang.String)
com.android.build.api.dsl.options.LintOptions.warning: void (java.lang.String[])
com.android.build.api.dsl.options.NdkOptions
com.android.build.api.dsl.options.NdkOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.NdkOptions.getCFlags: java.lang.String ()
com.android.build.api.dsl.options.NdkOptions.getJobs: java.lang.Integer ()
com.android.build.api.dsl.options.NdkOptions.getLdLibs: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.NdkOptions.getModuleName: java.lang.String ()
com.android.build.api.dsl.options.NdkOptions.getStl: java.lang.String ()
com.android.build.api.dsl.options.NdkOptions.setAbiFilters: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.NdkOptions.setCFlags: void (java.lang.String)
com.android.build.api.dsl.options.NdkOptions.setJobs: void (java.lang.Integer)
com.android.build.api.dsl.options.NdkOptions.setLdLibs: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.NdkOptions.setModuleName: void (java.lang.String)
com.android.build.api.dsl.options.NdkOptions.setStl: void (java.lang.String)
com.android.build.api.dsl.options.PackagingOptions
com.android.build.api.dsl.options.PackagingOptions.exclude: void (java.lang.String)
com.android.build.api.dsl.options.PackagingOptions.exclude: void (java.lang.String[])
com.android.build.api.dsl.options.PackagingOptions.getDoNotStrip: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.PackagingOptions.getExcludes: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.PackagingOptions.getMerges: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.PackagingOptions.getPickFirsts: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.PackagingOptions.merge: void (java.lang.String)
com.android.build.api.dsl.options.PackagingOptions.merge: void (java.lang.String[])
com.android.build.api.dsl.options.PackagingOptions.pickFirst: void (java.lang.String)
com.android.build.api.dsl.options.PackagingOptions.pickFirst: void (java.lang.String[])
com.android.build.api.dsl.options.PackagingOptions.setDoNotStrip: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.PackagingOptions.setExcludes: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.PackagingOptions.setMerges: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.PackagingOptions.setPickFirsts: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.PostProcessingFiles
com.android.build.api.dsl.options.PostProcessingFiles.getConsumerProguardFiles: java.util.List<java.lang.Object> ()
com.android.build.api.dsl.options.PostProcessingFiles.getProguardFiles: java.util.List<java.lang.Object> ()
com.android.build.api.dsl.options.PostProcessingFiles.getTestProguardFiles: java.util.List<java.lang.Object> ()
com.android.build.api.dsl.options.PostProcessingFiles.setConsumerProguardFiles: void (java.util.List<java.lang.Object>)
com.android.build.api.dsl.options.PostProcessingFiles.setProguardFiles: void (java.util.List<java.lang.Object>)
com.android.build.api.dsl.options.PostProcessingFiles.setTestProguardFiles: void (java.util.List<java.lang.Object>)
com.android.build.api.dsl.options.PostProcessingFilesOptions
com.android.build.api.dsl.options.PostProcessingOptions
com.android.build.api.dsl.options.PostProcessingOptions.getCodeShrinker: java.lang.String ()
com.android.build.api.dsl.options.PostProcessingOptions.isObfuscate: boolean ()
com.android.build.api.dsl.options.PostProcessingOptions.isOptimizeCode: boolean ()
com.android.build.api.dsl.options.PostProcessingOptions.isRemoveUnusedCode: boolean ()
com.android.build.api.dsl.options.PostProcessingOptions.isRemoveUnusedResources: boolean ()
com.android.build.api.dsl.options.PostProcessingOptions.setCodeShrinker: void (java.lang.String)
com.android.build.api.dsl.options.PostProcessingOptions.setObfuscate: void (boolean)
com.android.build.api.dsl.options.PostProcessingOptions.setOptimizeCode: void (boolean)
com.android.build.api.dsl.options.PostProcessingOptions.setRemoveUnusedCode: void (boolean)
com.android.build.api.dsl.options.PostProcessingOptions.setRemoveUnusedResources: void (boolean)
com.android.build.api.dsl.options.ShaderOptions
com.android.build.api.dsl.options.ShaderOptions.getGlslcArgs: java.util.List<java.lang.String> ()
com.android.build.api.dsl.options.ShaderOptions.getScopedGlslcArgs: com.google.common.collect.ListMultimap<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.options.ShaderOptions.setGlslcArgs: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.options.ShaderOptions.setScopedGlslcArgs: void (com.google.common.collect.ListMultimap<java.lang.String, java.lang.String>)
com.android.build.api.dsl.options.SigningConfig
com.android.build.api.dsl.options.SigningConfig.getKeyAlias: java.lang.String ()
com.android.build.api.dsl.options.SigningConfig.getKeyPassword: java.lang.String ()
com.android.build.api.dsl.options.SigningConfig.getStoreFile: java.io.File ()
com.android.build.api.dsl.options.SigningConfig.getStorePassword: java.lang.String ()
com.android.build.api.dsl.options.SigningConfig.getStoreType: java.lang.String ()
com.android.build.api.dsl.options.SigningConfig.getV1SigningEnabled: boolean ()
com.android.build.api.dsl.options.SigningConfig.getV2SigningEnabled: boolean ()
com.android.build.api.dsl.options.SigningConfig.isSigningReady: boolean ()
com.android.build.api.dsl.options.SigningConfig.isV1SigningEnabled: boolean ()
com.android.build.api.dsl.options.SigningConfig.isV2SigningEnabled: boolean ()
com.android.build.api.dsl.options.SigningConfig.setKeyAlias: void (java.lang.String)
com.android.build.api.dsl.options.SigningConfig.setKeyPassword: void (java.lang.String)
com.android.build.api.dsl.options.SigningConfig.setStoreFile: void (java.io.File)
com.android.build.api.dsl.options.SigningConfig.setStorePassword: void (java.lang.String)
com.android.build.api.dsl.options.SigningConfig.setStoreType: void (java.lang.String)
com.android.build.api.dsl.options.SigningConfig.setV1SigningEnabled: void (boolean)
com.android.build.api.dsl.options.SigningConfig.setV2SigningEnabled: void (boolean)
com.android.build.api.dsl.options.SplitOptions
com.android.build.api.dsl.options.SplitOptions.exclude: void (java.lang.String[])
com.android.build.api.dsl.options.SplitOptions.getApplicableFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.SplitOptions.include: void (java.lang.String[])
com.android.build.api.dsl.options.SplitOptions.isEnabled: boolean ()
com.android.build.api.dsl.options.SplitOptions.reset: void ()
com.android.build.api.dsl.options.SplitOptions.setEnabled: void (boolean)
com.android.build.api.dsl.options.Splits
com.android.build.api.dsl.options.Splits.abi: void (org.gradle.api.Action<com.android.build.api.dsl.options.AbiSplitOptions>)
com.android.build.api.dsl.options.Splits.density: void (org.gradle.api.Action<com.android.build.api.dsl.options.DensitySplitOptions>)
com.android.build.api.dsl.options.Splits.getAbi: com.android.build.api.dsl.options.AbiSplitOptions ()
com.android.build.api.dsl.options.Splits.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.Splits.getDensity: com.android.build.api.dsl.options.DensitySplitOptions ()
com.android.build.api.dsl.options.Splits.getDensityFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.Splits.getLanguage: com.android.build.api.dsl.options.LanguageSplitOptions ()
com.android.build.api.dsl.options.Splits.getLanguageFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.Splits.language: void (org.gradle.api.Action<com.android.build.api.dsl.options.LanguageSplitOptions>)
com.android.build.api.dsl.options.VectorDrawablesOptions
com.android.build.api.dsl.options.VectorDrawablesOptions.getGeneratedDensities: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.options.VectorDrawablesOptions.getUseSupportLibrary: boolean ()
com.android.build.api.dsl.options.VectorDrawablesOptions.setGeneratedDensities: void (java.util.Set<java.lang.String>)
com.android.build.api.dsl.options.VectorDrawablesOptions.setUseSupportLibrary: void (boolean)
com.android.build.api.dsl.variant.AndroidTestVariant
com.android.build.api.dsl.variant.AndroidTestVariant.getTestedVariant: com.android.build.api.dsl.variant.Variant ()
com.android.build.api.dsl.variant.ApplicationVariant
com.android.build.api.dsl.variant.ApplicationVariant.getAndroidTestVariant: com.android.build.api.dsl.variant.AndroidTestVariant ()
com.android.build.api.dsl.variant.ApplicationVariant.getUnitTestVariant: com.android.build.api.dsl.variant.UnitTestVariant ()
com.android.build.api.dsl.variant.CommonVariantProperties
com.android.build.api.dsl.variant.CommonVariantProperties.getBaseSourceSets: java.util.List<com.android.build.api.sourcesets.AndroidSourceSet> ()
com.android.build.api.dsl.variant.CommonVariantProperties.getBuildTypeName: java.lang.String ()
com.android.build.api.dsl.variant.CommonVariantProperties.getFlavorNames: java.util.List<java.lang.String> ()
com.android.build.api.dsl.variant.CommonVariantProperties.getMultiFlavorSourceSet: com.android.build.api.sourcesets.AndroidSourceSet ()
com.android.build.api.dsl.variant.CommonVariantProperties.getName: java.lang.String ()
com.android.build.api.dsl.variant.CommonVariantProperties.getVariantSourceSet: com.android.build.api.sourcesets.AndroidSourceSet ()
com.android.build.api.dsl.variant.CommonVariantProperties.multiFlavorSourceSet: void (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceSet>)
com.android.build.api.dsl.variant.CommonVariantProperties.variantSourceSet: void (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceSet>)
com.android.build.api.dsl.variant.LibraryVariant
com.android.build.api.dsl.variant.LibraryVariant.getAndroidTestVariant: com.android.build.api.dsl.variant.AndroidTestVariant ()
com.android.build.api.dsl.variant.LibraryVariant.getUnitTestVariant: com.android.build.api.dsl.variant.UnitTestVariant ()
com.android.build.api.dsl.variant.TestVariant
com.android.build.api.dsl.variant.UnitTestVariant
com.android.build.api.dsl.variant.UnitTestVariant.getTestedVariant: com.android.build.api.dsl.variant.Variant ()
com.android.build.api.dsl.variant.Variant
com.android.build.api.dsl.variant.VariantFilter
com.android.build.api.dsl.variant.VariantFilter.getBuildType: java.lang.String ()
com.android.build.api.dsl.variant.VariantFilter.getFlavors: java.util.List<java.lang.String> ()
com.android.build.api.dsl.variant.VariantFilter.ignoreAll: void ()
com.android.build.api.dsl.variant.VariantFilter.ignoreAndroidTests: void ()
com.android.build.api.dsl.variant.VariantFilter.ignoreTests: void ()
com.android.build.api.dsl.variant.VariantFilter.ignoreUnitTests: void ()
com.android.build.api.plugin.AndroidBasePlugin
com.android.build.api.plugin.AndroidBasePlugin.<init>: com.android.build.api.plugin.AndroidBasePlugin ()
com.android.build.api.plugin.AndroidBasePlugin.apply: void (java.lang.Object)
com.android.build.api.plugin.AndroidBasePlugin.apply: void (org.gradle.api.Project)
com.android.build.api.plugin.AppPlugin
com.android.build.api.plugin.AppPlugin.<init>: com.android.build.api.plugin.AppPlugin ()
com.android.build.api.plugin.AppPlugin.apply: void (java.lang.Object)
com.android.build.api.plugin.AppPlugin.apply: void (org.gradle.api.Project)
com.android.build.api.plugin.DynamicFeaturePlugin
com.android.build.api.plugin.DynamicFeaturePlugin.<init>: com.android.build.api.plugin.DynamicFeaturePlugin ()
com.android.build.api.plugin.DynamicFeaturePlugin.apply: void (java.lang.Object)
com.android.build.api.plugin.DynamicFeaturePlugin.apply: void (org.gradle.api.Project)
com.android.build.api.plugin.FeaturePlugin
com.android.build.api.plugin.FeaturePlugin.<init>: com.android.build.api.plugin.FeaturePlugin ()
com.android.build.api.plugin.FeaturePlugin.apply: void (java.lang.Object)
com.android.build.api.plugin.FeaturePlugin.apply: void (org.gradle.api.Project)
com.android.build.api.plugin.InstantAppPlugin
com.android.build.api.plugin.InstantAppPlugin.<init>: com.android.build.api.plugin.InstantAppPlugin ()
com.android.build.api.plugin.InstantAppPlugin.apply: void (java.lang.Object)
com.android.build.api.plugin.InstantAppPlugin.apply: void (org.gradle.api.Project)
com.android.build.api.plugin.LibraryPlugin
com.android.build.api.plugin.LibraryPlugin.<init>: com.android.build.api.plugin.LibraryPlugin ()
com.android.build.api.plugin.LibraryPlugin.apply: void (java.lang.Object)
com.android.build.api.plugin.LibraryPlugin.apply: void (org.gradle.api.Project)
com.android.build.api.plugin.LintPlugin
com.android.build.api.plugin.LintPlugin.<init>: com.android.build.api.plugin.LintPlugin ()
com.android.build.api.plugin.LintPlugin.apply: void (java.lang.Object)
com.android.build.api.plugin.LintPlugin.apply: void (org.gradle.api.Project)
com.android.build.api.plugin.TestPlugin
com.android.build.api.plugin.TestPlugin.<init>: com.android.build.api.plugin.TestPlugin ()
com.android.build.api.plugin.TestPlugin.apply: void (java.lang.Object)
com.android.build.api.plugin.TestPlugin.apply: void (org.gradle.api.Project)
com.android.build.api.sourcesets.AndroidSourceDirectorySet
com.android.build.api.sourcesets.AndroidSourceDirectorySet.getFilter: org.gradle.api.tasks.util.PatternFilterable ()
com.android.build.api.sourcesets.AndroidSourceDirectorySet.getSourceDirectoryTrees: java.util.List<org.gradle.api.file.ConfigurableFileTree> ()
com.android.build.api.sourcesets.AndroidSourceDirectorySet.getSourceFiles: org.gradle.api.file.FileTree ()
com.android.build.api.sourcesets.AndroidSourceDirectorySet.getSrcDirs: java.util.Set<java.io.File> ()
com.android.build.api.sourcesets.AndroidSourceDirectorySet.setSrcDirs: void (java.lang.Iterable<?>)
com.android.build.api.sourcesets.AndroidSourceDirectorySet.srcDir: void (java.lang.Object)
com.android.build.api.sourcesets.AndroidSourceDirectorySet.srcDirs: void (java.lang.Object[])
com.android.build.api.sourcesets.AndroidSourceFile
com.android.build.api.sourcesets.AndroidSourceFile.getSrcFile: java.io.File ()
com.android.build.api.sourcesets.AndroidSourceFile.setSrcFile: void (java.io.File)
com.android.build.api.sourcesets.AndroidSourceFile.srcFile: com.android.build.api.sourcesets.AndroidSourceFile (java.lang.Object)
com.android.build.api.sourcesets.AndroidSourceSet
com.android.build.api.sourcesets.AndroidSourceSet.aidl: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceDirectorySet>)
com.android.build.api.sourcesets.AndroidSourceSet.assets: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceDirectorySet>)
com.android.build.api.sourcesets.AndroidSourceSet.getAidl: com.android.build.api.sourcesets.AndroidSourceDirectorySet ()
com.android.build.api.sourcesets.AndroidSourceSet.getAnnotationProcessorConfigurationName: java.lang.String ()
com.android.build.api.sourcesets.AndroidSourceSet.getApiConfigurationName: java.lang.String ()
com.android.build.api.sourcesets.AndroidSourceSet.getAssets: com.android.build.api.sourcesets.AndroidSourceDirectorySet ()
com.android.build.api.sourcesets.AndroidSourceSet.getCompileConfigurationName: java.lang.String ()
com.android.build.api.sourcesets.AndroidSourceSet.getCompileOnlyConfigurationName: java.lang.String ()
com.android.build.api.sourcesets.AndroidSourceSet.getImplementationConfigurationName: java.lang.String ()
com.android.build.api.sourcesets.AndroidSourceSet.getJava: com.android.build.api.sourcesets.AndroidSourceDirectorySet ()
com.android.build.api.sourcesets.AndroidSourceSet.getJni: com.android.build.api.sourcesets.AndroidSourceDirectorySet ()
com.android.build.api.sourcesets.AndroidSourceSet.getJniLibs: com.android.build.api.sourcesets.AndroidSourceDirectorySet ()
com.android.build.api.sourcesets.AndroidSourceSet.getManifest: com.android.build.api.sourcesets.AndroidSourceFile ()
com.android.build.api.sourcesets.AndroidSourceSet.getPackageConfigurationName: java.lang.String ()
com.android.build.api.sourcesets.AndroidSourceSet.getProvidedConfigurationName: java.lang.String ()
com.android.build.api.sourcesets.AndroidSourceSet.getRenderscript: com.android.build.api.sourcesets.AndroidSourceDirectorySet ()
com.android.build.api.sourcesets.AndroidSourceSet.getRes: com.android.build.api.sourcesets.AndroidSourceDirectorySet ()
com.android.build.api.sourcesets.AndroidSourceSet.getResources: com.android.build.api.sourcesets.AndroidSourceDirectorySet ()
com.android.build.api.sourcesets.AndroidSourceSet.getRuntimeOnlyConfigurationName: java.lang.String ()
com.android.build.api.sourcesets.AndroidSourceSet.getShaders: com.android.build.api.sourcesets.AndroidSourceDirectorySet ()
com.android.build.api.sourcesets.AndroidSourceSet.getWearAppConfigurationName: java.lang.String ()
com.android.build.api.sourcesets.AndroidSourceSet.java: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceDirectorySet>)
com.android.build.api.sourcesets.AndroidSourceSet.jni: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceDirectorySet>)
com.android.build.api.sourcesets.AndroidSourceSet.jniLibs: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceDirectorySet>)
com.android.build.api.sourcesets.AndroidSourceSet.manifest: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceFile>)
com.android.build.api.sourcesets.AndroidSourceSet.renderscript: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceDirectorySet>)
com.android.build.api.sourcesets.AndroidSourceSet.res: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceDirectorySet>)
com.android.build.api.sourcesets.AndroidSourceSet.resources: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceDirectorySet>)
com.android.build.api.sourcesets.AndroidSourceSet.setRoot: com.android.build.api.sourcesets.AndroidSourceSet (java.lang.String)
com.android.build.api.sourcesets.AndroidSourceSet.shaders: com.android.build.api.sourcesets.AndroidSourceSet (org.gradle.api.Action<com.android.build.api.sourcesets.AndroidSourceDirectorySet>)
