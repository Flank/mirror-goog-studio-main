Incubating Android Gradle Plugin API.
-------------------------------------------------------------------------
ATTENTION REVIEWER: If this needs to be changed, please make sure changes
below are backwards compatible.
-------------------------------------------------------------------------
com.android.build.api.artifact.Artifact implements java.io.Serializable
com.android.build.api.artifact.Artifact$Appendable
com.android.build.api.artifact.Artifact$Category extends java.lang.Enum
com.android.build.api.artifact.Artifact$Category.valueOf: com.android.build.api.artifact.Artifact$Category (java.lang.String)
com.android.build.api.artifact.Artifact$Category.values: com.android.build.api.artifact.Artifact$Category[] ()
com.android.build.api.artifact.Artifact$Companion
com.android.build.api.artifact.Artifact$Companion.<init>: com.android.build.api.artifact.Artifact$Companion (kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.artifact.Artifact$ContainsMany
com.android.build.api.artifact.Artifact$Multiple extends com.android.build.api.artifact.Artifact
com.android.build.api.artifact.Artifact$Multiple.<init>: com.android.build.api.artifact.Artifact$Multiple<FileTypeT> (com.android.build.api.artifact.ArtifactKind<FileTypeT>, com.android.build.api.artifact.Artifact$Category)
com.android.build.api.artifact.Artifact$Replaceable
com.android.build.api.artifact.Artifact$Single extends com.android.build.api.artifact.Artifact
com.android.build.api.artifact.Artifact$Single.<init>: com.android.build.api.artifact.Artifact$Single<FileTypeT> (com.android.build.api.artifact.ArtifactKind<FileTypeT>, com.android.build.api.artifact.Artifact$Category)
com.android.build.api.artifact.Artifact$Transformable
com.android.build.api.artifact.Artifact.<init>: com.android.build.api.artifact.Artifact<T> (com.android.build.api.artifact.ArtifactKind<T>, com.android.build.api.artifact.Artifact$Category)
com.android.build.api.artifact.Artifact.getCategory: com.android.build.api.artifact.Artifact$Category ()
com.android.build.api.artifact.Artifact.getFileSystemLocationName: java.lang.String ()
com.android.build.api.artifact.Artifact.getFolderName: java.lang.String ()
com.android.build.api.artifact.Artifact.getKind: com.android.build.api.artifact.ArtifactKind<T> ()
com.android.build.api.artifact.Artifact.name: java.lang.String ()
com.android.build.api.artifact.ArtifactKind implements java.io.Serializable
com.android.build.api.artifact.ArtifactKind$DIRECTORY extends com.android.build.api.artifact.ArtifactKind
com.android.build.api.artifact.ArtifactKind$DIRECTORY.dataType: kotlin.reflect.KClass<org.gradle.api.file.Directory> ()
com.android.build.api.artifact.ArtifactKind$FILE extends com.android.build.api.artifact.ArtifactKind
com.android.build.api.artifact.ArtifactKind$FILE.dataType: kotlin.reflect.KClass<org.gradle.api.file.RegularFile> ()
com.android.build.api.artifact.ArtifactKind.<init>: com.android.build.api.artifact.ArtifactKind<T> (kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.artifact.ArtifactKind.dataType: kotlin.reflect.KClass<T> ()
com.android.build.api.artifact.ArtifactTransformationRequest
com.android.build.api.artifact.ArtifactTransformationRequest.submit: java.util.function.Supplier<com.android.build.api.variant.BuiltArtifacts> (TaskT, org.gradle.workers.WorkQueue, java.lang.Class<? extends org.gradle.workers.WorkAction<ParamT>>, kotlin.jvm.functions.Function3<? super com.android.build.api.variant.BuiltArtifact, ? super org.gradle.api.file.Directory, ? super ParamT, ? extends java.io.File>)
com.android.build.api.artifact.ArtifactTransformationRequest.submit: void (TaskT, kotlin.jvm.functions.Function1<? super com.android.build.api.variant.BuiltArtifact, ? extends java.io.File>)
com.android.build.api.artifact.Artifacts
com.android.build.api.artifact.Artifacts.get: org.gradle.api.provider.Provider<FileTypeT> (com.android.build.api.artifact.SingleArtifact<FileTypeT>)
com.android.build.api.artifact.Artifacts.getAll: org.gradle.api.provider.Provider<java.util.List<FileTypeT>> (com.android.build.api.artifact.MultipleArtifact<FileTypeT>)
com.android.build.api.artifact.Artifacts.getBuiltArtifactsLoader: com.android.build.api.variant.BuiltArtifactsLoader ()
com.android.build.api.artifact.Artifacts.use: com.android.build.api.artifact.TaskBasedOperation<TaskT> (org.gradle.api.tasks.TaskProvider<TaskT>)
com.android.build.api.artifact.CombiningOperationRequest
com.android.build.api.artifact.CombiningOperationRequest.toTransform: void (ArtifactTypeT)
com.android.build.api.artifact.InAndOutDirectoryOperationRequest
com.android.build.api.artifact.InAndOutDirectoryOperationRequest.toTransform: void (ArtifactTypeT)
com.android.build.api.artifact.InAndOutDirectoryOperationRequest.toTransformMany: com.android.build.api.artifact.ArtifactTransformationRequest<TaskT> (ArtifactTypeT)
com.android.build.api.artifact.InAndOutFileOperationRequest
com.android.build.api.artifact.InAndOutFileOperationRequest.toTransform: void (ArtifactTypeT)
com.android.build.api.artifact.MultipleArtifact extends com.android.build.api.artifact.Artifact$Multiple
com.android.build.api.artifact.MultipleArtifact$MULTIDEX_KEEP_PROGUARD extends com.android.build.api.artifact.MultipleArtifact implements com.android.build.api.artifact.Artifact$Transformable, com.android.build.api.artifact.Artifact$Replaceable
com.android.build.api.artifact.MultipleArtifact.<init>: com.android.build.api.artifact.MultipleArtifact<FileTypeT> (com.android.build.api.artifact.ArtifactKind, com.android.build.api.artifact.Artifact$Category, kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.artifact.OutOperationRequest
com.android.build.api.artifact.OutOperationRequest.toAppendTo: void (ArtifactTypeT)
com.android.build.api.artifact.OutOperationRequest.toCreate: void (ArtifactTypeT)
com.android.build.api.artifact.SingleArtifact extends com.android.build.api.artifact.Artifact$Single
com.android.build.api.artifact.SingleArtifact$AAR extends com.android.build.api.artifact.SingleArtifact implements com.android.build.api.artifact.Artifact$Transformable
com.android.build.api.artifact.SingleArtifact$APK extends com.android.build.api.artifact.SingleArtifact implements com.android.build.api.artifact.Artifact$Transformable, com.android.build.api.artifact.Artifact$Replaceable, com.android.build.api.artifact.Artifact$ContainsMany
com.android.build.api.artifact.SingleArtifact$BUNDLE extends com.android.build.api.artifact.SingleArtifact implements com.android.build.api.artifact.Artifact$Transformable
com.android.build.api.artifact.SingleArtifact$MERGED_MANIFEST extends com.android.build.api.artifact.SingleArtifact implements com.android.build.api.artifact.Artifact$Replaceable, com.android.build.api.artifact.Artifact$Transformable
com.android.build.api.artifact.SingleArtifact$OBFUSCATION_MAPPING_FILE extends com.android.build.api.artifact.SingleArtifact
com.android.build.api.artifact.SingleArtifact$OBFUSCATION_MAPPING_FILE.getFolderName: java.lang.String ()
com.android.build.api.artifact.SingleArtifact$PUBLIC_ANDROID_RESOURCES_LIST extends com.android.build.api.artifact.SingleArtifact
com.android.build.api.artifact.SingleArtifact.<init>: com.android.build.api.artifact.SingleArtifact<T> (com.android.build.api.artifact.ArtifactKind, com.android.build.api.artifact.Artifact$Category, java.lang.String, kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.artifact.SingleArtifact.getFileSystemLocationName: java.lang.String ()
com.android.build.api.artifact.TaskBasedOperation
com.android.build.api.artifact.TaskBasedOperation.wiredWith: com.android.build.api.artifact.CombiningOperationRequest<FileTypeT> (kotlin.jvm.functions.Function1<? super TaskT, ? extends org.gradle.api.provider.ListProperty<FileTypeT>>, kotlin.jvm.functions.Function1<? super TaskT, ? extends org.gradle.api.file.FileSystemLocationProperty<FileTypeT>>)
com.android.build.api.artifact.TaskBasedOperation.wiredWith: com.android.build.api.artifact.OutOperationRequest<FileTypeT> (kotlin.jvm.functions.Function1<? super TaskT, ? extends org.gradle.api.file.FileSystemLocationProperty<FileTypeT>>)
com.android.build.api.artifact.TaskBasedOperation.wiredWithDirectories: com.android.build.api.artifact.InAndOutDirectoryOperationRequest<TaskT> (kotlin.jvm.functions.Function1<? super TaskT, ? extends org.gradle.api.file.DirectoryProperty>, kotlin.jvm.functions.Function1<? super TaskT, ? extends org.gradle.api.file.DirectoryProperty>)
com.android.build.api.artifact.TaskBasedOperation.wiredWithFiles: com.android.build.api.artifact.InAndOutFileOperationRequest (kotlin.jvm.functions.Function1<? super TaskT, ? extends org.gradle.api.file.RegularFileProperty>, kotlin.jvm.functions.Function1<? super TaskT, ? extends org.gradle.api.file.RegularFileProperty>)
com.android.build.api.component.Component implements com.android.build.api.component.ComponentIdentity
com.android.build.api.component.Component.getArtifacts: com.android.build.api.artifact.Artifacts ()
com.android.build.api.component.Component.setAsmFramesComputationMode: void (com.android.build.api.instrumentation.FramesComputationMode)
com.android.build.api.component.Component.transformClassesWith: void (java.lang.Class<? extends com.android.build.api.instrumentation.AsmClassVisitorFactory<ParamT>>, com.android.build.api.instrumentation.InstrumentationScope, kotlin.jvm.functions.Function1<? super ParamT, kotlin.Unit>)
com.android.build.api.component.ComponentBuilder implements com.android.build.api.component.ComponentIdentity
com.android.build.api.component.ComponentBuilder.getEnable: boolean ()
com.android.build.api.component.ComponentBuilder.getEnabled: boolean ()
com.android.build.api.component.ComponentBuilder.setEnable: void (boolean)
com.android.build.api.component.ComponentBuilder.setEnabled: void (boolean)
com.android.build.api.component.ComponentIdentity
com.android.build.api.component.ComponentIdentity.getBuildType: java.lang.String ()
com.android.build.api.component.ComponentIdentity.getFlavorName: java.lang.String ()
com.android.build.api.component.ComponentIdentity.getName: java.lang.String ()
com.android.build.api.component.ComponentIdentity.getProductFlavors: java.util.List<kotlin.Pair<java.lang.String, java.lang.String>> ()
com.android.build.api.component.TestComponent implements com.android.build.api.component.Component
com.android.build.api.component.TestFixtures implements com.android.build.api.variant.AarComponent, com.android.build.api.component.Component
com.android.build.api.dsl.AaptOptions implements com.android.build.api.dsl.AndroidResources
com.android.build.api.dsl.AarMetadata
com.android.build.api.dsl.AarMetadata.getMinCompileSdk: java.lang.Integer ()
com.android.build.api.dsl.AarMetadata.setMinCompileSdk: void (java.lang.Integer)
com.android.build.api.dsl.AbiSplit implements com.android.build.api.dsl.SplitOptions
com.android.build.api.dsl.AbiSplit.isUniversalApk: boolean ()
com.android.build.api.dsl.AbiSplit.setUniversalApk: void (boolean)
com.android.build.api.dsl.AdbOptions implements com.android.build.api.dsl.Installation
com.android.build.api.dsl.AndroidResources.additionalParameters: void (java.lang.String)
com.android.build.api.dsl.AndroidResources.additionalParameters: void (java.lang.String[])
com.android.build.api.dsl.AndroidResources.getAdditionalParameters: java.util.List<java.lang.String> ()
com.android.build.api.dsl.AndroidResources.getFailOnMissingConfigEntry: boolean ()
com.android.build.api.dsl.AndroidResources.getIgnoreAssetsPattern: java.lang.String ()
com.android.build.api.dsl.AndroidResources.getNamespaced: boolean ()
com.android.build.api.dsl.AndroidResources.getNoCompress: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.AndroidResources.noCompress: void (java.lang.String)
com.android.build.api.dsl.AndroidResources.noCompress: void (java.lang.String[])
com.android.build.api.dsl.AndroidResources.setFailOnMissingConfigEntry: void (boolean)
com.android.build.api.dsl.AndroidResources.setIgnoreAssetsPattern: void (java.lang.String)
com.android.build.api.dsl.AndroidResources.setNamespaced: void (boolean)
com.android.build.api.dsl.AndroidSourceDirectorySet implements org.gradle.api.Named, org.gradle.api.tasks.util.PatternFilterable
com.android.build.api.dsl.AndroidSourceDirectorySet.getName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceDirectorySet.setSrcDirs: java.lang.Object (java.lang.Iterable<?>)
com.android.build.api.dsl.AndroidSourceDirectorySet.srcDir: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.AndroidSourceDirectorySet.srcDirs: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.AndroidSourceFile implements org.gradle.api.Named
com.android.build.api.dsl.AndroidSourceFile.getName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceFile.srcFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.AndroidSourceSet implements org.gradle.api.Named
com.android.build.api.dsl.AndroidSourceSet.aidl: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.assets: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.getAidl: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getAnnotationProcessorConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getApiConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getAssets: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getCompileOnlyConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getImplementationConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getJava: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getJni: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getJniLibs: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getKotlin: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getManifest: com.android.build.api.dsl.AndroidSourceFile ()
com.android.build.api.dsl.AndroidSourceSet.getMlModels: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getRenderscript: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getRes: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getResources: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getRuntimeOnlyConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getShaders: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getWearAppConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.java: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.jni: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.jniLibs: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.kotlin: void (org.gradle.api.Action<com.android.build.api.dsl.AndroidSourceDirectorySet>)
com.android.build.api.dsl.AndroidSourceSet.manifest: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceFile, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.mlModels: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.renderscript: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.res: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.resources: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.setRoot: java.lang.Object (java.lang.String)
com.android.build.api.dsl.AndroidSourceSet.shaders: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AnnotationProcessorOptions
com.android.build.api.dsl.AnnotationProcessorOptions.argument: void (java.lang.String, java.lang.String)
com.android.build.api.dsl.AnnotationProcessorOptions.arguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.AnnotationProcessorOptions.className: void (java.lang.String)
com.android.build.api.dsl.AnnotationProcessorOptions.classNames: void (java.lang.String[])
com.android.build.api.dsl.AnnotationProcessorOptions.compilerArgumentProvider: void (org.gradle.process.CommandLineArgumentProvider)
com.android.build.api.dsl.AnnotationProcessorOptions.compilerArgumentProviders: void (org.gradle.process.CommandLineArgumentProvider[])
com.android.build.api.dsl.AnnotationProcessorOptions.getArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.AnnotationProcessorOptions.getClassNames: java.util.List<java.lang.String> ()
com.android.build.api.dsl.AnnotationProcessorOptions.getCompilerArgumentProviders: java.util.List<org.gradle.process.CommandLineArgumentProvider> ()
com.android.build.api.dsl.ApkExtension
com.android.build.api.dsl.ApkSigningConfig implements com.android.build.api.dsl.SigningConfig
com.android.build.api.dsl.ApkSigningConfig.getEnableV1Signing: java.lang.Boolean ()
com.android.build.api.dsl.ApkSigningConfig.getEnableV2Signing: java.lang.Boolean ()
com.android.build.api.dsl.ApkSigningConfig.getEnableV3Signing: java.lang.Boolean ()
com.android.build.api.dsl.ApkSigningConfig.getEnableV4Signing: java.lang.Boolean ()
com.android.build.api.dsl.ApkSigningConfig.isV1SigningEnabled: boolean ()
com.android.build.api.dsl.ApkSigningConfig.isV2SigningEnabled: boolean ()
com.android.build.api.dsl.ApkSigningConfig.setEnableV1Signing: void (java.lang.Boolean)
com.android.build.api.dsl.ApkSigningConfig.setEnableV2Signing: void (java.lang.Boolean)
com.android.build.api.dsl.ApkSigningConfig.setEnableV3Signing: void (java.lang.Boolean)
com.android.build.api.dsl.ApkSigningConfig.setEnableV4Signing: void (java.lang.Boolean)
com.android.build.api.dsl.ApkSigningConfig.setV1SigningEnabled: void (boolean)
com.android.build.api.dsl.ApkSigningConfig.setV2SigningEnabled: void (boolean)
com.android.build.api.dsl.ApplicationBaseFlavor implements com.android.build.api.dsl.BaseFlavor, com.android.build.api.dsl.ApplicationVariantDimension
com.android.build.api.dsl.ApplicationBaseFlavor.getApplicationId: java.lang.String ()
com.android.build.api.dsl.ApplicationBaseFlavor.getMaxSdk: java.lang.Integer ()
com.android.build.api.dsl.ApplicationBaseFlavor.getTargetSdk: java.lang.Integer ()
com.android.build.api.dsl.ApplicationBaseFlavor.getTargetSdkPreview: java.lang.String ()
com.android.build.api.dsl.ApplicationBaseFlavor.getVersionCode: java.lang.Integer ()
com.android.build.api.dsl.ApplicationBaseFlavor.getVersionName: java.lang.String ()
com.android.build.api.dsl.ApplicationBaseFlavor.maxSdkVersion: void (int)
com.android.build.api.dsl.ApplicationBaseFlavor.setApplicationId: void (java.lang.String)
com.android.build.api.dsl.ApplicationBaseFlavor.setMaxSdk: void (java.lang.Integer)
com.android.build.api.dsl.ApplicationBaseFlavor.setTargetSdk: void (java.lang.Integer)
com.android.build.api.dsl.ApplicationBaseFlavor.setTargetSdkPreview: void (java.lang.String)
com.android.build.api.dsl.ApplicationBaseFlavor.setTargetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.ApplicationBaseFlavor.setVersionCode: void (java.lang.Integer)
com.android.build.api.dsl.ApplicationBaseFlavor.setVersionName: void (java.lang.String)
com.android.build.api.dsl.ApplicationBaseFlavor.targetSdkVersion: void (int)
com.android.build.api.dsl.ApplicationBaseFlavor.targetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.ApplicationBuildFeatures implements com.android.build.api.dsl.BuildFeatures
com.android.build.api.dsl.ApplicationBuildFeatures.getDataBinding: java.lang.Boolean ()
com.android.build.api.dsl.ApplicationBuildFeatures.getMlModelBinding: java.lang.Boolean ()
com.android.build.api.dsl.ApplicationBuildFeatures.setDataBinding: void (java.lang.Boolean)
com.android.build.api.dsl.ApplicationBuildFeatures.setMlModelBinding: void (java.lang.Boolean)
com.android.build.api.dsl.ApplicationBuildType implements com.android.build.api.dsl.BuildType, com.android.build.api.dsl.ApplicationVariantDimension
com.android.build.api.dsl.ApplicationBuildType.isCrunchPngs: java.lang.Boolean ()
com.android.build.api.dsl.ApplicationBuildType.isDebuggable: boolean ()
com.android.build.api.dsl.ApplicationBuildType.isDefault: boolean ()
com.android.build.api.dsl.ApplicationBuildType.isEmbedMicroApp: boolean ()
com.android.build.api.dsl.ApplicationBuildType.setCrunchPngs: void (java.lang.Boolean)
com.android.build.api.dsl.ApplicationBuildType.setDebuggable: void (boolean)
com.android.build.api.dsl.ApplicationBuildType.setDefault: void (boolean)
com.android.build.api.dsl.ApplicationBuildType.setEmbedMicroApp: void (boolean)
com.android.build.api.dsl.ApplicationDefaultConfig implements com.android.build.api.dsl.ApplicationBaseFlavor, com.android.build.api.dsl.DefaultConfig
com.android.build.api.dsl.ApplicationExtension implements com.android.build.api.dsl.CommonExtension, com.android.build.api.dsl.ApkExtension, com.android.build.api.dsl.TestedExtension
com.android.build.api.dsl.ApplicationExtension.bundle: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Bundle, kotlin.Unit>)
com.android.build.api.dsl.ApplicationExtension.dependenciesInfo: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DependenciesInfo, kotlin.Unit>)
com.android.build.api.dsl.ApplicationExtension.getAssetPacks: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ApplicationExtension.getBundle: com.android.build.api.dsl.Bundle ()
com.android.build.api.dsl.ApplicationExtension.getDependenciesInfo: com.android.build.api.dsl.DependenciesInfo ()
com.android.build.api.dsl.ApplicationExtension.getDynamicFeatures: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ApplicationProductFlavor implements com.android.build.api.dsl.ApplicationBaseFlavor, com.android.build.api.dsl.ProductFlavor
com.android.build.api.dsl.ApplicationProductFlavor.isDefault: boolean ()
com.android.build.api.dsl.ApplicationProductFlavor.setDefault: void (boolean)
com.android.build.api.dsl.ApplicationVariantDimension implements com.android.build.api.dsl.VariantDimension
com.android.build.api.dsl.ApplicationVariantDimension.getApplicationIdSuffix: java.lang.String ()
com.android.build.api.dsl.ApplicationVariantDimension.getMultiDexEnabled: java.lang.Boolean ()
com.android.build.api.dsl.ApplicationVariantDimension.getSigningConfig: com.android.build.api.dsl.ApkSigningConfig ()
com.android.build.api.dsl.ApplicationVariantDimension.getVersionNameSuffix: java.lang.String ()
com.android.build.api.dsl.ApplicationVariantDimension.setApplicationIdSuffix: void (java.lang.String)
com.android.build.api.dsl.ApplicationVariantDimension.setMultiDexEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.ApplicationVariantDimension.setSigningConfig: void (com.android.build.api.dsl.ApkSigningConfig)
com.android.build.api.dsl.ApplicationVariantDimension.setVersionNameSuffix: void (java.lang.String)
com.android.build.api.dsl.AssetPackBundleExtension
com.android.build.api.dsl.AssetPackBundleExtension.deviceTier: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleDeviceTier, kotlin.Unit>)
com.android.build.api.dsl.AssetPackBundleExtension.getApplicationId: java.lang.String ()
com.android.build.api.dsl.AssetPackBundleExtension.getAssetPacks: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.AssetPackBundleExtension.getCompileSdk: int ()
com.android.build.api.dsl.AssetPackBundleExtension.getDeviceTier: com.android.build.api.dsl.BundleDeviceTier ()
com.android.build.api.dsl.AssetPackBundleExtension.getSigningConfig: com.android.build.api.dsl.SigningConfig ()
com.android.build.api.dsl.AssetPackBundleExtension.getTexture: com.android.build.api.dsl.BundleTexture ()
com.android.build.api.dsl.AssetPackBundleExtension.getVersionCodes: java.util.Set<java.lang.Integer> ()
com.android.build.api.dsl.AssetPackBundleExtension.getVersionTag: java.lang.String ()
com.android.build.api.dsl.AssetPackBundleExtension.setApplicationId: void (java.lang.String)
com.android.build.api.dsl.AssetPackBundleExtension.setCompileSdk: void (int)
com.android.build.api.dsl.AssetPackBundleExtension.setVersionTag: void (java.lang.String)
com.android.build.api.dsl.AssetPackBundleExtension.signingConfig: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.SigningConfig, kotlin.Unit>)
com.android.build.api.dsl.AssetPackBundleExtension.texture: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleTexture, kotlin.Unit>)
com.android.build.api.dsl.AssetPackExtension
com.android.build.api.dsl.AssetPackExtension.dynamicDelivery: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DynamicDelivery, kotlin.Unit>)
com.android.build.api.dsl.AssetPackExtension.getDynamicDelivery: com.android.build.api.dsl.DynamicDelivery ()
com.android.build.api.dsl.AssetPackExtension.getPackName: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.dsl.BaseFlavor implements com.android.build.api.dsl.VariantDimension
com.android.build.api.dsl.BaseFlavor.getMinSdk: java.lang.Integer ()
com.android.build.api.dsl.BaseFlavor.getMinSdkPreview: java.lang.String ()
com.android.build.api.dsl.BaseFlavor.getName: java.lang.String ()
com.android.build.api.dsl.BaseFlavor.getRenderscriptNdkModeEnabled: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getRenderscriptSupportModeBlasEnabled: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getRenderscriptSupportModeEnabled: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getRenderscriptTargetApi: java.lang.Integer ()
com.android.build.api.dsl.BaseFlavor.getResourceConfigurations: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.BaseFlavor.getTestApplicationId: java.lang.String ()
com.android.build.api.dsl.BaseFlavor.getTestFunctionalTest: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getTestHandleProfiling: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getTestInstrumentationRunner: java.lang.String ()
com.android.build.api.dsl.BaseFlavor.getTestInstrumentationRunnerArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.BaseFlavor.getVectorDrawables: com.android.build.api.dsl.VectorDrawables ()
com.android.build.api.dsl.BaseFlavor.getWearAppUnbundled: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.minSdkVersion: void (int)
com.android.build.api.dsl.BaseFlavor.minSdkVersion: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.resConfig: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.resConfigs: void (java.lang.String[])
com.android.build.api.dsl.BaseFlavor.resConfigs: void (java.util.Collection<java.lang.String>)
com.android.build.api.dsl.BaseFlavor.setMinSdk: void (java.lang.Integer)
com.android.build.api.dsl.BaseFlavor.setMinSdkPreview: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.setMinSdkVersion: void (int)
com.android.build.api.dsl.BaseFlavor.setMinSdkVersion: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.setRenderscriptNdkModeEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setRenderscriptSupportModeBlasEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setRenderscriptSupportModeEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setRenderscriptTargetApi: void (java.lang.Integer)
com.android.build.api.dsl.BaseFlavor.setTestApplicationId: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.setTestFunctionalTest: java.lang.Object (boolean)
com.android.build.api.dsl.BaseFlavor.setTestFunctionalTest: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setTestHandleProfiling: java.lang.Object (boolean)
com.android.build.api.dsl.BaseFlavor.setTestHandleProfiling: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setTestInstrumentationRunner: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.setTestInstrumentationRunnerArguments: java.lang.Object (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.BaseFlavor.setWearAppUnbundled: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.testInstrumentationRunnerArgument: void (java.lang.String, java.lang.String)
com.android.build.api.dsl.BaseFlavor.testInstrumentationRunnerArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.BaseFlavor.vectorDrawables: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.VectorDrawables, kotlin.Unit>)
com.android.build.api.dsl.BuildFeatures implements org.gradle.api.plugins.ExtensionAware
com.android.build.api.dsl.BuildFeatures.getAidl: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getBuildConfig: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getCompose: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getPrefab: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getRenderScript: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getResValues: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getShaders: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getViewBinding: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.setAidl: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setBuildConfig: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setCompose: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setPrefab: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setRenderScript: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setResValues: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setShaders: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setViewBinding: void (java.lang.Boolean)
com.android.build.api.dsl.BuildType implements org.gradle.api.Named, com.android.build.api.dsl.VariantDimension, org.gradle.api.plugins.ExtensionAware
com.android.build.api.dsl.BuildType.getMatchingFallbacks: java.util.List<java.lang.String> ()
com.android.build.api.dsl.BuildType.getRenderscriptOptimLevel: int ()
com.android.build.api.dsl.BuildType.isJniDebuggable: boolean ()
com.android.build.api.dsl.BuildType.isMinifyEnabled: boolean ()
com.android.build.api.dsl.BuildType.isPseudoLocalesEnabled: boolean ()
com.android.build.api.dsl.BuildType.isRenderscriptDebuggable: boolean ()
com.android.build.api.dsl.BuildType.isTestCoverageEnabled: boolean ()
com.android.build.api.dsl.BuildType.isZipAlignEnabled: boolean ()
com.android.build.api.dsl.BuildType.setJniDebuggable: void (boolean)
com.android.build.api.dsl.BuildType.setMatchingFallbacks: void (java.lang.String[])
com.android.build.api.dsl.BuildType.setMatchingFallbacks: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.BuildType.setMinifyEnabled: void (boolean)
com.android.build.api.dsl.BuildType.setPseudoLocalesEnabled: void (boolean)
com.android.build.api.dsl.BuildType.setRenderscriptDebuggable: void (boolean)
com.android.build.api.dsl.BuildType.setRenderscriptOptimLevel: void (int)
com.android.build.api.dsl.BuildType.setTestCoverageEnabled: void (boolean)
com.android.build.api.dsl.BuildType.setZipAlignEnabled: void (boolean)
com.android.build.api.dsl.Bundle
com.android.build.api.dsl.Bundle.abi: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleAbi, kotlin.Unit>)
com.android.build.api.dsl.Bundle.density: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleDensity, kotlin.Unit>)
com.android.build.api.dsl.Bundle.deviceTier: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleDeviceTier, kotlin.Unit>)
com.android.build.api.dsl.Bundle.getAbi: com.android.build.api.dsl.BundleAbi ()
com.android.build.api.dsl.Bundle.getDensity: com.android.build.api.dsl.BundleDensity ()
com.android.build.api.dsl.Bundle.getDeviceTier: com.android.build.api.dsl.BundleDeviceTier ()
com.android.build.api.dsl.Bundle.getLanguage: com.android.build.api.dsl.BundleLanguage ()
com.android.build.api.dsl.Bundle.getTexture: com.android.build.api.dsl.BundleTexture ()
com.android.build.api.dsl.Bundle.language: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleLanguage, kotlin.Unit>)
com.android.build.api.dsl.Bundle.texture: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleTexture, kotlin.Unit>)
com.android.build.api.dsl.BundleAbi
com.android.build.api.dsl.BundleAbi.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleAbi.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.BundleDensity
com.android.build.api.dsl.BundleDensity.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleDensity.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.BundleDeviceTier
com.android.build.api.dsl.BundleDeviceTier.getDefaultTier: java.lang.String ()
com.android.build.api.dsl.BundleDeviceTier.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleDeviceTier.setDefaultTier: void (java.lang.String)
com.android.build.api.dsl.BundleDeviceTier.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.BundleLanguage
com.android.build.api.dsl.BundleLanguage.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleLanguage.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.BundleTexture
com.android.build.api.dsl.BundleTexture.getDefaultFormat: java.lang.String ()
com.android.build.api.dsl.BundleTexture.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleTexture.setDefaultFormat: void (java.lang.String)
com.android.build.api.dsl.BundleTexture.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.Cmake
com.android.build.api.dsl.Cmake.buildStagingDirectory: void (java.lang.Object)
com.android.build.api.dsl.Cmake.getBuildStagingDirectory: java.io.File ()
com.android.build.api.dsl.Cmake.getPath: java.io.File ()
com.android.build.api.dsl.Cmake.getVersion: java.lang.String ()
com.android.build.api.dsl.Cmake.path: void (java.lang.Object)
com.android.build.api.dsl.Cmake.setBuildStagingDirectory: void (java.io.File)
com.android.build.api.dsl.Cmake.setPath: void (java.io.File)
com.android.build.api.dsl.Cmake.setVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.aaptOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AaptOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.adbOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AdbOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super BuildFeaturesT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.buildToolsVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.buildTypes: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<BuildTypeT>, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.compileSdkVersion: void (int)
com.android.build.api.dsl.CommonExtension.compileSdkVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.composeOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ComposeOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.debug: void (org.gradle.api.NamedDomainObjectContainer<BuildTypeT>, kotlin.jvm.functions.Function1<? super BuildTypeT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.defaultConfig: void (kotlin.jvm.functions.Function1<? super DefaultConfigT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuild, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.flavorDimensions: void (java.lang.String[])
com.android.build.api.dsl.CommonExtension.getAaptOptions: com.android.build.api.dsl.AaptOptions ()
com.android.build.api.dsl.CommonExtension.getAdbOptions: com.android.build.api.dsl.AdbOptions ()
com.android.build.api.dsl.CommonExtension.getBuildFeatures: BuildFeaturesT ()
com.android.build.api.dsl.CommonExtension.getBuildToolsVersion: java.lang.String ()
com.android.build.api.dsl.CommonExtension.getBuildTypes: org.gradle.api.NamedDomainObjectContainer<? extends BuildTypeT> ()
com.android.build.api.dsl.CommonExtension.getComposeOptions: com.android.build.api.dsl.ComposeOptions ()
com.android.build.api.dsl.CommonExtension.getDefaultConfig: DefaultConfigT ()
com.android.build.api.dsl.CommonExtension.getDefaultProguardFile: java.io.File (java.lang.String)
com.android.build.api.dsl.CommonExtension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuild ()
com.android.build.api.dsl.CommonExtension.getFlavorDimensions: java.util.List<java.lang.String> ()
com.android.build.api.dsl.CommonExtension.getInstallation: com.android.build.api.dsl.Installation ()
com.android.build.api.dsl.CommonExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.api.dsl.CommonExtension.getLintOptions: com.android.build.api.dsl.LintOptions ()
com.android.build.api.dsl.CommonExtension.getNdkPath: java.lang.String ()
com.android.build.api.dsl.CommonExtension.getNdkVersion: java.lang.String ()
com.android.build.api.dsl.CommonExtension.getPackagingOptions: com.android.build.api.dsl.PackagingOptions ()
com.android.build.api.dsl.CommonExtension.getProductFlavors: org.gradle.api.NamedDomainObjectContainer<? extends ProductFlavorT> ()
com.android.build.api.dsl.CommonExtension.getResourcePrefix: java.lang.String ()
com.android.build.api.dsl.CommonExtension.getSdkComponents: com.android.build.api.dsl.SdkComponents ()
com.android.build.api.dsl.CommonExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.ApkSigningConfig> ()
com.android.build.api.dsl.CommonExtension.getSourceSets: org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.AndroidSourceSet> ()
com.android.build.api.dsl.CommonExtension.getSplits: com.android.build.api.dsl.Splits ()
com.android.build.api.dsl.CommonExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.api.dsl.CommonExtension.installation: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Installation, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JacocoOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.lintOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LintOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.packagingOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.PackagingOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.productFlavors: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<ProductFlavorT>, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.release: void (org.gradle.api.NamedDomainObjectContainer<BuildTypeT>, kotlin.jvm.functions.Function1<? super BuildTypeT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.setBuildToolsVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.setNdkPath: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.setNdkVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.setResourcePrefix: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.signingConfigs: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.ApkSigningConfig>, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.sourceSets: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.AndroidSourceSet>, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.splits: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Splits, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.useLibrary: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.useLibrary: void (java.lang.String, boolean)
com.android.build.api.dsl.CompileOptions.getEncoding: java.lang.String ()
com.android.build.api.dsl.CompileOptions.getSourceCompatibility: org.gradle.api.JavaVersion ()
com.android.build.api.dsl.CompileOptions.getTargetCompatibility: org.gradle.api.JavaVersion ()
com.android.build.api.dsl.CompileOptions.isCoreLibraryDesugaringEnabled: boolean ()
com.android.build.api.dsl.CompileOptions.setCoreLibraryDesugaringEnabled: void (boolean)
com.android.build.api.dsl.CompileOptions.setEncoding: void (java.lang.String)
com.android.build.api.dsl.CompileOptions.setSourceCompatibility: void (org.gradle.api.JavaVersion)
com.android.build.api.dsl.CompileOptions.setTargetCompatibility: void (org.gradle.api.JavaVersion)
com.android.build.api.dsl.CompileOptions.sourceCompatibility: void (java.lang.Object)
com.android.build.api.dsl.CompileOptions.targetCompatibility: void (java.lang.Object)
com.android.build.api.dsl.ComposeOptions
com.android.build.api.dsl.ComposeOptions.getKotlinCompilerExtensionVersion: java.lang.String ()
com.android.build.api.dsl.ComposeOptions.getKotlinCompilerVersion: java.lang.String ()
com.android.build.api.dsl.ComposeOptions.getUseLiveLiterals: boolean ()
com.android.build.api.dsl.ComposeOptions.setKotlinCompilerExtensionVersion: void (java.lang.String)
com.android.build.api.dsl.ComposeOptions.setKotlinCompilerVersion: void (java.lang.String)
com.android.build.api.dsl.ComposeOptions.setUseLiveLiterals: void (boolean)
com.android.build.api.dsl.DataBinding.getAddDefaultAdapters: boolean ()
com.android.build.api.dsl.DataBinding.getAddKtx: java.lang.Boolean ()
com.android.build.api.dsl.DataBinding.getVersion: java.lang.String ()
com.android.build.api.dsl.DataBinding.isEnabled: boolean ()
com.android.build.api.dsl.DataBinding.isEnabledForTests: boolean ()
com.android.build.api.dsl.DataBinding.setAddDefaultAdapters: void (boolean)
com.android.build.api.dsl.DataBinding.setAddKtx: void (java.lang.Boolean)
com.android.build.api.dsl.DataBinding.setEnabled: void (boolean)
com.android.build.api.dsl.DataBinding.setEnabledForTests: void (boolean)
com.android.build.api.dsl.DataBinding.setVersion: void (java.lang.String)
com.android.build.api.dsl.DefaultConfig implements com.android.build.api.dsl.BaseFlavor
com.android.build.api.dsl.DensitySplit implements com.android.build.api.dsl.SplitOptions
com.android.build.api.dsl.DensitySplit.compatibleScreens: void (java.lang.String[])
com.android.build.api.dsl.DensitySplit.getCompatibleScreens: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.DensitySplit.isStrict: boolean ()
com.android.build.api.dsl.DensitySplit.setStrict: void (boolean)
com.android.build.api.dsl.DependenciesInfo
com.android.build.api.dsl.DependenciesInfo.getIncludeInApk: boolean ()
com.android.build.api.dsl.DependenciesInfo.getIncludeInBundle: boolean ()
com.android.build.api.dsl.DependenciesInfo.setIncludeInApk: void (boolean)
com.android.build.api.dsl.DependenciesInfo.setIncludeInBundle: void (boolean)
com.android.build.api.dsl.Device implements org.gradle.api.Named
com.android.build.api.dsl.DeviceGroup implements org.gradle.api.Named
com.android.build.api.dsl.DeviceGroup.getTargetDevices: org.gradle.api.DomainObjectSet<com.android.build.api.dsl.Device> ()
com.android.build.api.dsl.DexPackagingOptions
com.android.build.api.dsl.DexPackagingOptions.getUseLegacyPackaging: java.lang.Boolean ()
com.android.build.api.dsl.DexPackagingOptions.setUseLegacyPackaging: void (java.lang.Boolean)
com.android.build.api.dsl.DynamicDelivery
com.android.build.api.dsl.DynamicDelivery.getDeliveryType: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.dsl.DynamicDelivery.getInstantDeliveryType: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.dsl.DynamicFeatureBaseFlavor implements com.android.build.api.dsl.BaseFlavor, com.android.build.api.dsl.DynamicFeatureVariantDimension
com.android.build.api.dsl.DynamicFeatureBuildFeatures implements com.android.build.api.dsl.BuildFeatures
com.android.build.api.dsl.DynamicFeatureBuildFeatures.getDataBinding: java.lang.Boolean ()
com.android.build.api.dsl.DynamicFeatureBuildFeatures.getMlModelBinding: java.lang.Boolean ()
com.android.build.api.dsl.DynamicFeatureBuildFeatures.setDataBinding: void (java.lang.Boolean)
com.android.build.api.dsl.DynamicFeatureBuildFeatures.setMlModelBinding: void (java.lang.Boolean)
com.android.build.api.dsl.DynamicFeatureBuildType implements com.android.build.api.dsl.BuildType, com.android.build.api.dsl.DynamicFeatureVariantDimension
com.android.build.api.dsl.DynamicFeatureBuildType.isCrunchPngs: java.lang.Boolean ()
com.android.build.api.dsl.DynamicFeatureBuildType.setCrunchPngs: void (java.lang.Boolean)
com.android.build.api.dsl.DynamicFeatureDefaultConfig implements com.android.build.api.dsl.DynamicFeatureBaseFlavor, com.android.build.api.dsl.DefaultConfig
com.android.build.api.dsl.DynamicFeatureExtension implements com.android.build.api.dsl.CommonExtension, com.android.build.api.dsl.ApkExtension, com.android.build.api.dsl.TestedExtension
com.android.build.api.dsl.DynamicFeatureProductFlavor implements com.android.build.api.dsl.DynamicFeatureBaseFlavor, com.android.build.api.dsl.ProductFlavor
com.android.build.api.dsl.DynamicFeatureVariantDimension implements com.android.build.api.dsl.VariantDimension
com.android.build.api.dsl.EmulatorSnapshots
com.android.build.api.dsl.EmulatorSnapshots.getCompressSnapshots: boolean ()
com.android.build.api.dsl.EmulatorSnapshots.getEnableForTestFailures: boolean ()
com.android.build.api.dsl.EmulatorSnapshots.getMaxSnapshotsForTestFailures: int ()
com.android.build.api.dsl.EmulatorSnapshots.retainAll: void ()
com.android.build.api.dsl.EmulatorSnapshots.setCompressSnapshots: void (boolean)
com.android.build.api.dsl.EmulatorSnapshots.setEnableForTestFailures: void (boolean)
com.android.build.api.dsl.EmulatorSnapshots.setMaxSnapshotsForTestFailures: void (int)
com.android.build.api.dsl.ExternalNativeBuild
com.android.build.api.dsl.ExternalNativeBuild.cmake: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Cmake, kotlin.Unit>)
com.android.build.api.dsl.ExternalNativeBuild.getCmake: com.android.build.api.dsl.Cmake ()
com.android.build.api.dsl.ExternalNativeBuild.getNdkBuild: com.android.build.api.dsl.NdkBuild ()
com.android.build.api.dsl.ExternalNativeBuild.ndkBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.NdkBuild, kotlin.Unit>)
com.android.build.api.dsl.ExternalNativeBuildOptions
com.android.build.api.dsl.ExternalNativeBuildOptions.cmake: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeCmakeOptions, kotlin.Unit>)
com.android.build.api.dsl.ExternalNativeBuildOptions.getCmake: com.android.build.api.dsl.ExternalNativeCmakeOptions ()
com.android.build.api.dsl.ExternalNativeBuildOptions.getNdkBuild: com.android.build.api.dsl.ExternalNativeNdkBuildOptions ()
com.android.build.api.dsl.ExternalNativeBuildOptions.ndkBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeNdkBuildOptions, kotlin.Unit>)
com.android.build.api.dsl.ExternalNativeCmakeOptions
com.android.build.api.dsl.ExternalNativeCmakeOptions.abiFilters: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeCmakeOptions.arguments: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeCmakeOptions.cFlags: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeCmakeOptions.cppFlags: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeCmakeOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.getCFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.targets: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.abiFilters: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.arguments: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.cFlags: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.cppFlags: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getCFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.targets: void (java.lang.String[])
com.android.build.api.dsl.FailureRetention implements com.android.build.api.dsl.EmulatorSnapshots
com.android.build.api.dsl.FailureRetention.getEnable: boolean ()
com.android.build.api.dsl.FailureRetention.getMaxSnapshots: int ()
com.android.build.api.dsl.FailureRetention.setEnable: void (boolean)
com.android.build.api.dsl.FailureRetention.setMaxSnapshots: void (int)
com.android.build.api.dsl.Installation
com.android.build.api.dsl.Installation.getInstallOptions: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.Installation.getTimeOutInMs: int ()
com.android.build.api.dsl.Installation.installOptions: void (java.lang.String)
com.android.build.api.dsl.Installation.installOptions: void (java.lang.String[])
com.android.build.api.dsl.Installation.setInstallOptions: void (java.util.Collection<java.lang.String>)
com.android.build.api.dsl.Installation.setTimeOutInMs: void (int)
com.android.build.api.dsl.JacocoOptions implements com.android.build.api.dsl.TestCoverage
com.android.build.api.dsl.JacocoOptions.getVersion: java.lang.String ()
com.android.build.api.dsl.JacocoOptions.setVersion: void (java.lang.String)
com.android.build.api.dsl.JavaCompileOptions
com.android.build.api.dsl.JavaCompileOptions.annotationProcessorOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AnnotationProcessorOptions, kotlin.Unit>)
com.android.build.api.dsl.JavaCompileOptions.getAnnotationProcessorOptions: com.android.build.api.dsl.AnnotationProcessorOptions ()
com.android.build.api.dsl.JniLibsPackagingOptions
com.android.build.api.dsl.JniLibsPackagingOptions.getExcludes: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.JniLibsPackagingOptions.getKeepDebugSymbols: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.JniLibsPackagingOptions.getPickFirsts: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.JniLibsPackagingOptions.getUseLegacyPackaging: java.lang.Boolean ()
com.android.build.api.dsl.JniLibsPackagingOptions.setUseLegacyPackaging: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBaseFlavor implements com.android.build.api.dsl.BaseFlavor, com.android.build.api.dsl.LibraryVariantDimension
com.android.build.api.dsl.LibraryBaseFlavor.getTargetSdk: java.lang.Integer ()
com.android.build.api.dsl.LibraryBaseFlavor.getTargetSdkPreview: java.lang.String ()
com.android.build.api.dsl.LibraryBaseFlavor.setTargetSdk: void (java.lang.Integer)
com.android.build.api.dsl.LibraryBaseFlavor.setTargetSdkPreview: void (java.lang.String)
com.android.build.api.dsl.LibraryBaseFlavor.setTargetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.LibraryBaseFlavor.targetSdkVersion: void (int)
com.android.build.api.dsl.LibraryBaseFlavor.targetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.LibraryBuildFeatures implements com.android.build.api.dsl.BuildFeatures
com.android.build.api.dsl.LibraryBuildFeatures.getAndroidResources: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.getDataBinding: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.getMlModelBinding: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.getPrefabPublishing: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.setAndroidResources: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBuildFeatures.setDataBinding: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBuildFeatures.setMlModelBinding: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBuildFeatures.setPrefabPublishing: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBuildType implements com.android.build.api.dsl.BuildType, com.android.build.api.dsl.LibraryVariantDimension
com.android.build.api.dsl.LibraryBuildType.isDefault: boolean ()
com.android.build.api.dsl.LibraryBuildType.setDefault: void (boolean)
com.android.build.api.dsl.LibraryDefaultConfig implements com.android.build.api.dsl.LibraryBaseFlavor, com.android.build.api.dsl.DefaultConfig
com.android.build.api.dsl.LibraryExtension implements com.android.build.api.dsl.CommonExtension, com.android.build.api.dsl.TestedExtension
com.android.build.api.dsl.LibraryExtension.getAidlPackagedList: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.LibraryExtension.getPrefab: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.PrefabPackagingOptions> ()
com.android.build.api.dsl.LibraryProductFlavor implements com.android.build.api.dsl.LibraryBaseFlavor, com.android.build.api.dsl.ProductFlavor
com.android.build.api.dsl.LibraryProductFlavor.isDefault: boolean ()
com.android.build.api.dsl.LibraryProductFlavor.setDefault: void (boolean)
com.android.build.api.dsl.LibraryVariantDimension implements com.android.build.api.dsl.VariantDimension
com.android.build.api.dsl.LibraryVariantDimension.aarMetadata: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AarMetadata, kotlin.Unit>)
com.android.build.api.dsl.LibraryVariantDimension.consumerProguardFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.LibraryVariantDimension.consumerProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.LibraryVariantDimension.getAarMetadata: com.android.build.api.dsl.AarMetadata ()
com.android.build.api.dsl.LibraryVariantDimension.getConsumerProguardFiles: java.util.List<java.io.File> ()
com.android.build.api.dsl.LibraryVariantDimension.getMultiDexEnabled: java.lang.Boolean ()
com.android.build.api.dsl.LibraryVariantDimension.getSigningConfig: com.android.build.api.dsl.ApkSigningConfig ()
com.android.build.api.dsl.LibraryVariantDimension.setMultiDexEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryVariantDimension.setSigningConfig: void (com.android.build.api.dsl.ApkSigningConfig)
com.android.build.api.dsl.Lint.baseline: void (java.io.File)
com.android.build.api.dsl.Lint.baseline: void (java.lang.String)
com.android.build.api.dsl.Lint.check: void (java.lang.String)
com.android.build.api.dsl.Lint.check: void (java.lang.String[])
com.android.build.api.dsl.Lint.checkOnly: void (java.lang.String)
com.android.build.api.dsl.Lint.checkOnly: void (java.lang.String[])
com.android.build.api.dsl.Lint.disable: void (java.lang.String)
com.android.build.api.dsl.Lint.disable: void (java.lang.String[])
com.android.build.api.dsl.Lint.enable: void (java.lang.String)
com.android.build.api.dsl.Lint.enable: void (java.lang.String[])
com.android.build.api.dsl.Lint.error: void (java.lang.String)
com.android.build.api.dsl.Lint.error: void (java.lang.String[])
com.android.build.api.dsl.Lint.fatal: void (java.lang.String)
com.android.build.api.dsl.Lint.fatal: void (java.lang.String[])
com.android.build.api.dsl.Lint.getBaselineFile: java.io.File ()
com.android.build.api.dsl.Lint.getCheckOnly: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getDisable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getEnable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getHtmlOutput: java.io.File ()
com.android.build.api.dsl.Lint.getHtmlReport: boolean ()
com.android.build.api.dsl.Lint.getLintConfig: java.io.File ()
com.android.build.api.dsl.Lint.getSarifOutput: java.io.File ()
com.android.build.api.dsl.Lint.getSarifReport: boolean ()
com.android.build.api.dsl.Lint.getTextOutput: java.io.File ()
com.android.build.api.dsl.Lint.getTextReport: boolean ()
com.android.build.api.dsl.Lint.getXmlOutput: java.io.File ()
com.android.build.api.dsl.Lint.getXmlReport: boolean ()
com.android.build.api.dsl.Lint.ignore: void (java.lang.String)
com.android.build.api.dsl.Lint.ignore: void (java.lang.String[])
com.android.build.api.dsl.Lint.informational: void (java.lang.String)
com.android.build.api.dsl.Lint.informational: void (java.lang.String[])
com.android.build.api.dsl.Lint.isAbortOnError: boolean ()
com.android.build.api.dsl.Lint.isAbsolutePaths: boolean ()
com.android.build.api.dsl.Lint.isCheckAllWarnings: boolean ()
com.android.build.api.dsl.Lint.isCheckDependencies: boolean ()
com.android.build.api.dsl.Lint.isCheckGeneratedSources: boolean ()
com.android.build.api.dsl.Lint.isCheckReleaseBuilds: boolean ()
com.android.build.api.dsl.Lint.isCheckTestSources: boolean ()
com.android.build.api.dsl.Lint.isExplainIssues: boolean ()
com.android.build.api.dsl.Lint.isIgnoreTestSources: boolean ()
com.android.build.api.dsl.Lint.isIgnoreWarnings: boolean ()
com.android.build.api.dsl.Lint.isNoLines: boolean ()
com.android.build.api.dsl.Lint.isQuiet: boolean ()
com.android.build.api.dsl.Lint.isShowAll: boolean ()
com.android.build.api.dsl.Lint.isWarningsAsErrors: boolean ()
com.android.build.api.dsl.Lint.setAbortOnError: void (boolean)
com.android.build.api.dsl.Lint.setAbsolutePaths: void (boolean)
com.android.build.api.dsl.Lint.setBaselineFile: void (java.io.File)
com.android.build.api.dsl.Lint.setCheckAllWarnings: void (boolean)
com.android.build.api.dsl.Lint.setCheckDependencies: void (boolean)
com.android.build.api.dsl.Lint.setCheckGeneratedSources: void (boolean)
com.android.build.api.dsl.Lint.setCheckReleaseBuilds: void (boolean)
com.android.build.api.dsl.Lint.setCheckTestSources: void (boolean)
com.android.build.api.dsl.Lint.setExplainIssues: void (boolean)
com.android.build.api.dsl.Lint.setHtmlOutput: void (java.io.File)
com.android.build.api.dsl.Lint.setHtmlReport: void (boolean)
com.android.build.api.dsl.Lint.setIgnoreTestSources: void (boolean)
com.android.build.api.dsl.Lint.setIgnoreWarnings: void (boolean)
com.android.build.api.dsl.Lint.setLintConfig: void (java.io.File)
com.android.build.api.dsl.Lint.setNoLines: void (boolean)
com.android.build.api.dsl.Lint.setQuiet: void (boolean)
com.android.build.api.dsl.Lint.setSarifOutput: void (java.io.File)
com.android.build.api.dsl.Lint.setSarifReport: void (boolean)
com.android.build.api.dsl.Lint.setShowAll: void (boolean)
com.android.build.api.dsl.Lint.setTextOutput: void (java.io.File)
com.android.build.api.dsl.Lint.setTextReport: void (boolean)
com.android.build.api.dsl.Lint.setWarningsAsErrors: void (boolean)
com.android.build.api.dsl.Lint.setXmlOutput: void (java.io.File)
com.android.build.api.dsl.Lint.setXmlReport: void (boolean)
com.android.build.api.dsl.Lint.textOutput: void (java.io.File)
com.android.build.api.dsl.Lint.textOutput: void (java.lang.String)
com.android.build.api.dsl.Lint.warning: void (java.lang.String)
com.android.build.api.dsl.Lint.warning: void (java.lang.String[])
com.android.build.api.dsl.LintOptions implements com.android.build.api.dsl.Lint
com.android.build.api.dsl.ManagedVirtualDevice implements com.android.build.api.dsl.Device
com.android.build.api.dsl.ManagedVirtualDevice.getAbi: java.lang.String ()
com.android.build.api.dsl.ManagedVirtualDevice.getApiLevel: int ()
com.android.build.api.dsl.ManagedVirtualDevice.getDevice: java.lang.String ()
com.android.build.api.dsl.ManagedVirtualDevice.getSystemImageSource: java.lang.String ()
com.android.build.api.dsl.ManagedVirtualDevice.setAbi: void (java.lang.String)
com.android.build.api.dsl.ManagedVirtualDevice.setApiLevel: void (int)
com.android.build.api.dsl.ManagedVirtualDevice.setDevice: void (java.lang.String)
com.android.build.api.dsl.ManagedVirtualDevice.setSystemImageSource: void (java.lang.String)
com.android.build.api.dsl.Ndk
com.android.build.api.dsl.Ndk.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Ndk.getCFlags: java.lang.String ()
com.android.build.api.dsl.Ndk.getDebugSymbolLevel: java.lang.String ()
com.android.build.api.dsl.Ndk.getJobs: java.lang.Integer ()
com.android.build.api.dsl.Ndk.getLdLibs: java.util.List<java.lang.String> ()
com.android.build.api.dsl.Ndk.getModuleName: java.lang.String ()
com.android.build.api.dsl.Ndk.getStl: java.lang.String ()
com.android.build.api.dsl.Ndk.setCFlags: void (java.lang.String)
com.android.build.api.dsl.Ndk.setDebugSymbolLevel: void (java.lang.String)
com.android.build.api.dsl.Ndk.setJobs: void (java.lang.Integer)
com.android.build.api.dsl.Ndk.setModuleName: void (java.lang.String)
com.android.build.api.dsl.Ndk.setStl: void (java.lang.String)
com.android.build.api.dsl.NdkBuild
com.android.build.api.dsl.NdkBuild.buildStagingDirectory: void (java.lang.Object)
com.android.build.api.dsl.NdkBuild.getBuildStagingDirectory: java.io.File ()
com.android.build.api.dsl.NdkBuild.getPath: java.io.File ()
com.android.build.api.dsl.NdkBuild.path: void (java.lang.Object)
com.android.build.api.dsl.NdkBuild.setBuildStagingDirectory: void (java.io.File)
com.android.build.api.dsl.NdkBuild.setPath: void (java.io.File)
com.android.build.api.dsl.PackagingOptions
com.android.build.api.dsl.PackagingOptions.dex: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DexPackagingOptions, kotlin.Unit>)
com.android.build.api.dsl.PackagingOptions.doNotStrip: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.exclude: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.getDex: com.android.build.api.dsl.DexPackagingOptions ()
com.android.build.api.dsl.PackagingOptions.getDoNotStrip: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getExcludes: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getJniLibs: com.android.build.api.dsl.JniLibsPackagingOptions ()
com.android.build.api.dsl.PackagingOptions.getMerges: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getPickFirsts: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getResources: com.android.build.api.dsl.ResourcesPackagingOptions ()
com.android.build.api.dsl.PackagingOptions.jniLibs: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JniLibsPackagingOptions, kotlin.Unit>)
com.android.build.api.dsl.PackagingOptions.merge: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.pickFirst: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.resources: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ResourcesPackagingOptions, kotlin.Unit>)
com.android.build.api.dsl.PrefabPackagingOptions
com.android.build.api.dsl.PrefabPackagingOptions.getHeaders: java.lang.String ()
com.android.build.api.dsl.PrefabPackagingOptions.getLibraryName: java.lang.String ()
com.android.build.api.dsl.PrefabPackagingOptions.getName: java.lang.String ()
com.android.build.api.dsl.PrefabPackagingOptions.setHeaders: void (java.lang.String)
com.android.build.api.dsl.PrefabPackagingOptions.setLibraryName: void (java.lang.String)
com.android.build.api.dsl.PrefabPackagingOptions.setName: void (java.lang.String)
com.android.build.api.dsl.ProductFlavor implements org.gradle.api.Named, com.android.build.api.dsl.BaseFlavor, org.gradle.api.plugins.ExtensionAware
com.android.build.api.dsl.ProductFlavor.getDimension: java.lang.String ()
com.android.build.api.dsl.ProductFlavor.getMatchingFallbacks: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ProductFlavor.setDimension: java.lang.Void (java.lang.String)
com.android.build.api.dsl.ProductFlavor.setDimension: void (java.lang.String)
com.android.build.api.dsl.ProductFlavor.setMatchingFallbacks: void (java.lang.String[])
com.android.build.api.dsl.ProductFlavor.setMatchingFallbacks: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.ResourcesPackagingOptions
com.android.build.api.dsl.ResourcesPackagingOptions.getExcludes: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ResourcesPackagingOptions.getMerges: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ResourcesPackagingOptions.getPickFirsts: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.SdkComponents
com.android.build.api.dsl.SdkComponents.getAdb: org.gradle.api.provider.Provider<org.gradle.api.file.RegularFile> ()
com.android.build.api.dsl.SdkComponents.getNdkDirectory: org.gradle.api.provider.Provider<org.gradle.api.file.Directory> ()
com.android.build.api.dsl.SdkComponents.getSdkDirectory: org.gradle.api.provider.Provider<org.gradle.api.file.Directory> ()
com.android.build.api.dsl.Shaders
com.android.build.api.dsl.Shaders.getGlslcArgs: java.util.List<java.lang.String> ()
com.android.build.api.dsl.Shaders.getScopedGlslcArgs: com.google.common.collect.ListMultimap<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.Shaders.glslcArgs: void (java.lang.String[])
com.android.build.api.dsl.Shaders.glslcScopedArgs: void (java.lang.String, java.lang.String[])
com.android.build.api.dsl.SigningConfig implements org.gradle.api.Named
com.android.build.api.dsl.SigningConfig.getKeyAlias: java.lang.String ()
com.android.build.api.dsl.SigningConfig.getKeyPassword: java.lang.String ()
com.android.build.api.dsl.SigningConfig.getStoreFile: java.io.File ()
com.android.build.api.dsl.SigningConfig.getStorePassword: java.lang.String ()
com.android.build.api.dsl.SigningConfig.getStoreType: java.lang.String ()
com.android.build.api.dsl.SigningConfig.setKeyAlias: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setKeyPassword: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setStoreFile: void (java.io.File)
com.android.build.api.dsl.SigningConfig.setStorePassword: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setStoreType: void (java.lang.String)
com.android.build.api.dsl.SplitOptions
com.android.build.api.dsl.SplitOptions.exclude: void (java.lang.String[])
com.android.build.api.dsl.SplitOptions.include: void (java.lang.String[])
com.android.build.api.dsl.SplitOptions.isEnable: boolean ()
com.android.build.api.dsl.SplitOptions.reset: void ()
com.android.build.api.dsl.SplitOptions.setEnable: void (boolean)
com.android.build.api.dsl.Splits
com.android.build.api.dsl.Splits.abi: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AbiSplit, kotlin.Unit>)
com.android.build.api.dsl.Splits.density: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DensitySplit, kotlin.Unit>)
com.android.build.api.dsl.Splits.getAbi: com.android.build.api.dsl.AbiSplit ()
com.android.build.api.dsl.Splits.getAbiFilters: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.Splits.getDensity: com.android.build.api.dsl.DensitySplit ()
com.android.build.api.dsl.Splits.getDensityFilters: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.TestBaseFlavor implements com.android.build.api.dsl.BaseFlavor, com.android.build.api.dsl.TestVariantDimension
com.android.build.api.dsl.TestBaseFlavor.getMaxSdk: java.lang.Integer ()
com.android.build.api.dsl.TestBaseFlavor.getTargetSdk: java.lang.Integer ()
com.android.build.api.dsl.TestBaseFlavor.getTargetSdkPreview: java.lang.String ()
com.android.build.api.dsl.TestBaseFlavor.maxSdkVersion: void (int)
com.android.build.api.dsl.TestBaseFlavor.setMaxSdk: void (java.lang.Integer)
com.android.build.api.dsl.TestBaseFlavor.setTargetSdk: void (java.lang.Integer)
com.android.build.api.dsl.TestBaseFlavor.setTargetSdkPreview: void (java.lang.String)
com.android.build.api.dsl.TestBaseFlavor.setTargetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.TestBaseFlavor.targetSdkVersion: void (int)
com.android.build.api.dsl.TestBaseFlavor.targetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.TestBuildFeatures implements com.android.build.api.dsl.BuildFeatures
com.android.build.api.dsl.TestBuildType implements com.android.build.api.dsl.BuildType, com.android.build.api.dsl.TestVariantDimension
com.android.build.api.dsl.TestBuildType.isCrunchPngs: java.lang.Boolean ()
com.android.build.api.dsl.TestBuildType.isDebuggable: boolean ()
com.android.build.api.dsl.TestBuildType.setCrunchPngs: void (java.lang.Boolean)
com.android.build.api.dsl.TestBuildType.setDebuggable: void (boolean)
com.android.build.api.dsl.TestDefaultConfig implements com.android.build.api.dsl.TestBaseFlavor, com.android.build.api.dsl.DefaultConfig
com.android.build.api.dsl.TestExtension implements com.android.build.api.dsl.CommonExtension
com.android.build.api.dsl.TestExtension.getTargetProjectPath: java.lang.String ()
com.android.build.api.dsl.TestExtension.setTargetProjectPath: void (java.lang.String)
com.android.build.api.dsl.TestOptions
com.android.build.api.dsl.TestOptions.emulatorSnapshots: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.EmulatorSnapshots, kotlin.Unit>)
com.android.build.api.dsl.TestOptions.failureRetention: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.FailureRetention, kotlin.Unit>)
com.android.build.api.dsl.TestOptions.getAnimationsDisabled: boolean ()
com.android.build.api.dsl.TestOptions.getDeviceGroups: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.DeviceGroup> ()
com.android.build.api.dsl.TestOptions.getDevices: org.gradle.api.ExtensiblePolymorphicDomainObjectContainer<com.android.build.api.dsl.Device> ()
com.android.build.api.dsl.TestOptions.getEmulatorSnapshots: com.android.build.api.dsl.EmulatorSnapshots ()
com.android.build.api.dsl.TestOptions.getExecution: java.lang.String ()
com.android.build.api.dsl.TestOptions.getFailureRetention: com.android.build.api.dsl.FailureRetention ()
com.android.build.api.dsl.TestOptions.getReportDir: java.lang.String ()
com.android.build.api.dsl.TestOptions.getResultsDir: java.lang.String ()
com.android.build.api.dsl.TestOptions.getUnitTests: com.android.build.api.dsl.UnitTestOptions ()
com.android.build.api.dsl.TestOptions.setAnimationsDisabled: void (boolean)
com.android.build.api.dsl.TestOptions.setExecution: void (java.lang.String)
com.android.build.api.dsl.TestOptions.setReportDir: void (java.lang.String)
com.android.build.api.dsl.TestOptions.setResultsDir: void (java.lang.String)
com.android.build.api.dsl.TestOptions.unitTests: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.UnitTestOptions, kotlin.Unit>)
com.android.build.api.dsl.TestProductFlavor implements com.android.build.api.dsl.TestBaseFlavor, com.android.build.api.dsl.ProductFlavor
com.android.build.api.dsl.TestVariantDimension implements com.android.build.api.dsl.VariantDimension
com.android.build.api.dsl.TestVariantDimension.getMultiDexEnabled: java.lang.Boolean ()
com.android.build.api.dsl.TestVariantDimension.getSigningConfig: com.android.build.api.dsl.ApkSigningConfig ()
com.android.build.api.dsl.TestVariantDimension.setMultiDexEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.TestVariantDimension.setSigningConfig: void (com.android.build.api.dsl.ApkSigningConfig)
com.android.build.api.dsl.TestedExtension
com.android.build.api.dsl.TestedExtension.getTestBuildType: java.lang.String ()
com.android.build.api.dsl.TestedExtension.getTestNamespace: java.lang.String ()
com.android.build.api.dsl.TestedExtension.setTestBuildType: void (java.lang.String)
com.android.build.api.dsl.TestedExtension.setTestNamespace: void (java.lang.String)
com.android.build.api.dsl.UnitTestOptions
com.android.build.api.dsl.UnitTestOptions.all: void (kotlin.jvm.functions.Function1<? super org.gradle.api.tasks.testing.Test, kotlin.Unit>)
com.android.build.api.dsl.UnitTestOptions.isIncludeAndroidResources: boolean ()
com.android.build.api.dsl.UnitTestOptions.isReturnDefaultValues: boolean ()
com.android.build.api.dsl.UnitTestOptions.setIncludeAndroidResources: void (boolean)
com.android.build.api.dsl.UnitTestOptions.setReturnDefaultValues: void (boolean)
com.android.build.api.dsl.VariantDimension
com.android.build.api.dsl.VariantDimension.addManifestPlaceholders: void (java.util.Map<java.lang.String, ?>)
com.android.build.api.dsl.VariantDimension.buildConfigField: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.api.dsl.VariantDimension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuildOptions, kotlin.Unit>)
com.android.build.api.dsl.VariantDimension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuildOptions ()
com.android.build.api.dsl.VariantDimension.getJavaCompileOptions: com.android.build.api.dsl.JavaCompileOptions ()
com.android.build.api.dsl.VariantDimension.getManifestPlaceholders: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.api.dsl.VariantDimension.getMultiDexKeepFile: java.io.File ()
com.android.build.api.dsl.VariantDimension.getMultiDexKeepProguard: java.io.File ()
com.android.build.api.dsl.VariantDimension.getNdk: com.android.build.api.dsl.Ndk ()
com.android.build.api.dsl.VariantDimension.getProguardFiles: java.util.List<java.io.File> ()
com.android.build.api.dsl.VariantDimension.getShaders: com.android.build.api.dsl.Shaders ()
com.android.build.api.dsl.VariantDimension.getTestProguardFiles: java.util.List<java.io.File> ()
com.android.build.api.dsl.VariantDimension.javaCompileOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JavaCompileOptions, kotlin.Unit>)
com.android.build.api.dsl.VariantDimension.ndk: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Ndk, kotlin.Unit>)
com.android.build.api.dsl.VariantDimension.proguardFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.VariantDimension.proguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.VariantDimension.resValue: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.api.dsl.VariantDimension.setManifestPlaceholders: java.lang.Void (java.util.Map<java.lang.String, ?>)
com.android.build.api.dsl.VariantDimension.setMultiDexKeepFile: void (java.io.File)
com.android.build.api.dsl.VariantDimension.setMultiDexKeepProguard: void (java.io.File)
com.android.build.api.dsl.VariantDimension.shaders: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Shaders, kotlin.Unit>)
com.android.build.api.dsl.VariantDimension.testProguardFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.VariantDimension.testProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.VectorDrawables
com.android.build.api.dsl.VectorDrawables.generatedDensities: void (java.lang.String[])
com.android.build.api.dsl.VectorDrawables.getGeneratedDensities: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.VectorDrawables.getUseSupportLibrary: java.lang.Boolean ()
com.android.build.api.dsl.VectorDrawables.setUseSupportLibrary: void (java.lang.Boolean)
com.android.build.api.extension.AndroidComponentsExtension
com.android.build.api.extension.AndroidComponentsExtension.androidTest: void (com.android.build.api.extension.VariantSelector, kotlin.jvm.functions.Function1<? super com.android.build.api.component.AndroidTest, kotlin.Unit>)
com.android.build.api.extension.AndroidComponentsExtension.androidTest: void (com.android.build.api.extension.VariantSelector, org.gradle.api.Action<com.android.build.api.component.AndroidTest>)
com.android.build.api.extension.AndroidComponentsExtension.androidTests: void (com.android.build.api.extension.VariantSelector, kotlin.jvm.functions.Function1<? super com.android.build.api.component.AndroidTest, kotlin.Unit>)
com.android.build.api.extension.AndroidComponentsExtension.androidTests: void (com.android.build.api.extension.VariantSelector, org.gradle.api.Action<com.android.build.api.component.AndroidTest>)
com.android.build.api.extension.AndroidComponentsExtension.beforeVariants: void (com.android.build.api.extension.VariantSelector, kotlin.jvm.functions.Function1<? super VariantBuilderT, kotlin.Unit>)
com.android.build.api.extension.AndroidComponentsExtension.beforeVariants: void (com.android.build.api.extension.VariantSelector, org.gradle.api.Action<VariantBuilderT>)
com.android.build.api.extension.AndroidComponentsExtension.getSdkComponents: com.android.build.api.dsl.SdkComponents ()
com.android.build.api.extension.AndroidComponentsExtension.onVariants: void (com.android.build.api.extension.VariantSelector, kotlin.jvm.functions.Function1<? super VariantT, kotlin.Unit>)
com.android.build.api.extension.AndroidComponentsExtension.onVariants: void (com.android.build.api.extension.VariantSelector, org.gradle.api.Action<VariantT>)
com.android.build.api.extension.AndroidComponentsExtension.registerExtension: void (com.android.build.api.extension.DslExtension, kotlin.jvm.functions.Function1<? super com.android.build.api.extension.VariantExtensionConfig<VariantT>, ? extends com.android.build.api.variant.VariantExtension>)
com.android.build.api.extension.AndroidComponentsExtension.selector: com.android.build.api.extension.VariantSelector ()
com.android.build.api.extension.AndroidComponentsExtension.unitTest: void (com.android.build.api.extension.VariantSelector, kotlin.jvm.functions.Function1<? super com.android.build.api.component.UnitTest, kotlin.Unit>)
com.android.build.api.extension.AndroidComponentsExtension.unitTest: void (com.android.build.api.extension.VariantSelector, org.gradle.api.Action<com.android.build.api.component.UnitTest>)
com.android.build.api.extension.AndroidComponentsExtension.unitTests: void (com.android.build.api.extension.VariantSelector, kotlin.jvm.functions.Function1<? super com.android.build.api.component.UnitTest, kotlin.Unit>)
com.android.build.api.extension.AndroidComponentsExtension.unitTests: void (com.android.build.api.extension.VariantSelector, org.gradle.api.Action<com.android.build.api.component.UnitTest>)
com.android.build.api.extension.ApplicationAndroidComponentsExtension implements com.android.build.api.extension.AndroidComponentsExtension
com.android.build.api.extension.DslExtension
com.android.build.api.extension.DslExtension$Builder
com.android.build.api.extension.DslExtension$Builder.<init>: com.android.build.api.extension.DslExtension$Builder (java.lang.String)
com.android.build.api.extension.DslExtension$Builder.build: com.android.build.api.extension.DslExtension ()
com.android.build.api.extension.DslExtension$Builder.extendBuildTypeWith: com.android.build.api.extension.DslExtension$Builder (java.lang.Class<?>)
com.android.build.api.extension.DslExtension$Builder.extendProductFlavorWith: com.android.build.api.extension.DslExtension$Builder (java.lang.Class<?>)
com.android.build.api.extension.DslExtension$Builder.extendProjectWith: com.android.build.api.extension.DslExtension$Builder (java.lang.Class<?>)
com.android.build.api.extension.DslExtension.<init>: com.android.build.api.extension.DslExtension (java.lang.String, java.lang.Class, java.lang.Class, java.lang.Class, kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.extension.DslExtension.getBuildTypeExtensionType: java.lang.Class<?> ()
com.android.build.api.extension.DslExtension.getDslName: java.lang.String ()
com.android.build.api.extension.DslExtension.getProductFlavorExtensionType: java.lang.Class<?> ()
com.android.build.api.extension.DslExtension.getProjectExtensionType: java.lang.Class<?> ()
com.android.build.api.extension.DynamicFeatureAndroidComponentsExtension implements com.android.build.api.extension.AndroidComponentsExtension
com.android.build.api.extension.LibraryAndroidComponentsExtension implements com.android.build.api.extension.AndroidComponentsExtension
com.android.build.api.extension.TestAndroidComponentsExtension implements com.android.build.api.extension.AndroidComponentsExtension
com.android.build.api.extension.VariantExtensionConfig
com.android.build.api.extension.VariantExtensionConfig.buildTypeExtension: T (java.lang.Class<T>)
com.android.build.api.extension.VariantExtensionConfig.getVariant: VariantT ()
com.android.build.api.extension.VariantExtensionConfig.productFlavorsExtensions: java.util.List<T> (java.lang.Class<T>)
com.android.build.api.extension.VariantExtensionConfig.projectExtension: T (java.lang.Class<T>)
com.android.build.api.extension.VariantSelector
com.android.build.api.extension.VariantSelector.all: com.android.build.api.extension.VariantSelector ()
com.android.build.api.extension.VariantSelector.withBuildType: com.android.build.api.extension.VariantSelector (java.lang.String)
com.android.build.api.extension.VariantSelector.withFlavor: com.android.build.api.extension.VariantSelector (kotlin.Pair<java.lang.String, java.lang.String>)
com.android.build.api.extension.VariantSelector.withName: com.android.build.api.extension.VariantSelector (java.lang.String)
com.android.build.api.extension.VariantSelector.withName: com.android.build.api.extension.VariantSelector (java.util.regex.Pattern)
com.android.build.api.instrumentation.AsmClassVisitorFactory implements java.io.Serializable
com.android.build.api.instrumentation.AsmClassVisitorFactory.createClassVisitor: org.objectweb.asm.ClassVisitor (com.android.build.api.instrumentation.ClassContext, org.objectweb.asm.ClassVisitor)
com.android.build.api.instrumentation.AsmClassVisitorFactory.getInstrumentationContext: com.android.build.api.instrumentation.InstrumentationContext ()
com.android.build.api.instrumentation.AsmClassVisitorFactory.getParameters: org.gradle.api.provider.Property<ParametersT> ()
com.android.build.api.instrumentation.AsmClassVisitorFactory.isInstrumentable: boolean (com.android.build.api.instrumentation.ClassData)
com.android.build.api.instrumentation.ClassContext
com.android.build.api.instrumentation.ClassContext.getCurrentClassData: com.android.build.api.instrumentation.ClassData ()
com.android.build.api.instrumentation.ClassContext.loadClassData: com.android.build.api.instrumentation.ClassData (java.lang.String)
com.android.build.api.instrumentation.ClassData
com.android.build.api.instrumentation.ClassData.getClassAnnotations: java.util.List<java.lang.String> ()
com.android.build.api.instrumentation.ClassData.getClassName: java.lang.String ()
com.android.build.api.instrumentation.ClassData.getInterfaces: java.util.List<java.lang.String> ()
com.android.build.api.instrumentation.ClassData.getSuperClasses: java.util.List<java.lang.String> ()
com.android.build.api.instrumentation.FramesComputationMode extends java.lang.Enum
com.android.build.api.instrumentation.FramesComputationMode.valueOf: com.android.build.api.instrumentation.FramesComputationMode (java.lang.String)
com.android.build.api.instrumentation.FramesComputationMode.values: com.android.build.api.instrumentation.FramesComputationMode[] ()
com.android.build.api.instrumentation.InstrumentationContext implements java.io.Serializable
com.android.build.api.instrumentation.InstrumentationContext.getApiVersion: org.gradle.api.provider.Property<java.lang.Integer> ()
com.android.build.api.instrumentation.InstrumentationParameters implements java.io.Serializable
com.android.build.api.instrumentation.InstrumentationParameters$None implements com.android.build.api.instrumentation.InstrumentationParameters
com.android.build.api.instrumentation.InstrumentationParameters$None.<init>: com.android.build.api.instrumentation.InstrumentationParameters$None ()
com.android.build.api.instrumentation.InstrumentationScope extends java.lang.Enum
com.android.build.api.instrumentation.InstrumentationScope.valueOf: com.android.build.api.instrumentation.InstrumentationScope (java.lang.String)
com.android.build.api.instrumentation.InstrumentationScope.values: com.android.build.api.instrumentation.InstrumentationScope[] ()
com.android.build.api.transform.Transform.applyToVariant: boolean (com.android.build.api.variant.VariantInfo)
com.android.build.api.variant.AarComponent implements org.gradle.api.component.Component
com.android.build.api.variant.AarComponent.getAarMetadata: com.android.build.api.variant.AarMetadata ()
com.android.build.api.variant.AarMetadata
com.android.build.api.variant.AarMetadata.getMinCompileSdk: org.gradle.api.provider.Property<java.lang.Integer> ()
com.android.build.api.variant.AndroidResources
com.android.build.api.variant.AndroidResources.getAaptAdditionalParameters: org.gradle.api.provider.ListProperty<java.lang.String> ()
com.android.build.api.variant.AndroidResources.getIgnoreAssetsPatterns: org.gradle.api.provider.ListProperty<java.lang.String> ()
com.android.build.api.variant.AndroidVersion
com.android.build.api.variant.AndroidVersion.getApiLevel: int ()
com.android.build.api.variant.AndroidVersion.getCodename: java.lang.String ()
com.android.build.api.variant.ApkComponent
com.android.build.api.variant.ApkComponent.getAndroidResources: com.android.build.api.variant.AndroidResources ()
com.android.build.api.variant.ApkComponent.getPackaging: com.android.build.api.variant.ApkPackaging ()
com.android.build.api.variant.ApkComponent.getRenderscript: com.android.build.api.variant.Renderscript ()
com.android.build.api.variant.ApkPackaging implements com.android.build.api.variant.Packaging
com.android.build.api.variant.ApkPackaging.getDex: com.android.build.api.variant.DexPackagingOptions ()
com.android.build.api.variant.ApkPackaging.getJniLibs: com.android.build.api.variant.JniLibsApkPackaging ()
com.android.build.api.variant.ApplicationVariant implements com.android.build.api.variant.ApkComponent, com.android.build.api.variant.Variant
com.android.build.api.variant.ApplicationVariant.getAndroidTest: com.android.build.api.component.AndroidTest ()
com.android.build.api.variant.ApplicationVariant.getApplicationId: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.variant.ApplicationVariant.getDependenciesInfo: com.android.build.api.variant.DependenciesInfo ()
com.android.build.api.variant.ApplicationVariant.getOutputs: java.util.List<com.android.build.api.variant.VariantOutput> ()
com.android.build.api.variant.ApplicationVariant.getSigningConfig: com.android.build.api.variant.SigningConfig ()
com.android.build.api.variant.ApplicationVariantBuilder implements com.android.build.api.variant.VariantBuilder, com.android.build.api.variant.HasAndroidTestBuilder
com.android.build.api.variant.ApplicationVariantBuilder.getDebuggable: boolean ()
com.android.build.api.variant.ApplicationVariantBuilder.getDependenciesInfo: com.android.build.api.variant.DependenciesInfoBuilder ()
com.android.build.api.variant.BuildConfigField implements java.io.Serializable
com.android.build.api.variant.BuildConfigField.<init>: com.android.build.api.variant.BuildConfigField<T> (java.lang.String, T, java.lang.String)
com.android.build.api.variant.BuildConfigField.getComment: java.lang.String ()
com.android.build.api.variant.BuildConfigField.getType: java.lang.String ()
com.android.build.api.variant.BuildConfigField.getValue: T ()
com.android.build.api.variant.BuiltArtifact implements com.android.build.api.variant.VariantOutputConfiguration
com.android.build.api.variant.BuiltArtifact.getOutputFile: java.lang.String ()
com.android.build.api.variant.BuiltArtifact.getVersionCode: java.lang.Integer ()
com.android.build.api.variant.BuiltArtifact.getVersionName: java.lang.String ()
com.android.build.api.variant.BuiltArtifacts
com.android.build.api.variant.BuiltArtifacts$Companion
com.android.build.api.variant.BuiltArtifacts$TransformParams implements org.gradle.workers.WorkParameters, java.io.Serializable
com.android.build.api.variant.BuiltArtifacts$TransformParams.getOutput: java.io.File ()
com.android.build.api.variant.BuiltArtifacts.getApplicationId: java.lang.String ()
com.android.build.api.variant.BuiltArtifacts.getArtifactType: com.android.build.api.artifact.Artifact<?> ()
com.android.build.api.variant.BuiltArtifacts.getElements: java.util.Collection<com.android.build.api.variant.BuiltArtifact> ()
com.android.build.api.variant.BuiltArtifacts.getVariantName: java.lang.String ()
com.android.build.api.variant.BuiltArtifacts.save: void (org.gradle.api.file.Directory)
com.android.build.api.variant.BuiltArtifactsLoader
com.android.build.api.variant.BuiltArtifactsLoader.load: com.android.build.api.variant.BuiltArtifacts (org.gradle.api.file.Directory)
com.android.build.api.variant.BuiltArtifactsLoader.load: com.android.build.api.variant.BuiltArtifacts (org.gradle.api.file.FileCollection)
com.android.build.api.variant.DependenciesInfo
com.android.build.api.variant.DependenciesInfo.getIncludedInApk: boolean ()
com.android.build.api.variant.DependenciesInfo.getIncludedInBundle: boolean ()
com.android.build.api.variant.DependenciesInfoBuilder
com.android.build.api.variant.DependenciesInfoBuilder.getIncludedInApk: boolean ()
com.android.build.api.variant.DependenciesInfoBuilder.getIncludedInBundle: boolean ()
com.android.build.api.variant.DependenciesInfoBuilder.setIncludedInApk: void (boolean)
com.android.build.api.variant.DependenciesInfoBuilder.setIncludedInBundle: void (boolean)
com.android.build.api.variant.DexPackagingOptions
com.android.build.api.variant.DexPackagingOptions.getUseLegacyPackaging: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.DynamicFeatureVariant implements com.android.build.api.variant.Variant, com.android.build.api.variant.ApkComponent
com.android.build.api.variant.DynamicFeatureVariant.getAndroidTest: com.android.build.api.component.AndroidTest ()
com.android.build.api.variant.DynamicFeatureVariant.getApplicationId: org.gradle.api.provider.Provider<java.lang.String> ()
com.android.build.api.variant.DynamicFeatureVariantBuilder implements com.android.build.api.variant.VariantBuilder, com.android.build.api.variant.HasAndroidTestBuilder
com.android.build.api.variant.ExternalNativeBuild
com.android.build.api.variant.ExternalNativeBuild.getAbiFilters: org.gradle.api.provider.SetProperty<java.lang.String> ()
com.android.build.api.variant.ExternalNativeBuild.getArguments: org.gradle.api.provider.ListProperty<java.lang.String> ()
com.android.build.api.variant.ExternalNativeBuild.getCFlags: org.gradle.api.provider.ListProperty<java.lang.String> ()
com.android.build.api.variant.ExternalNativeBuild.getCppFlags: org.gradle.api.provider.ListProperty<java.lang.String> ()
com.android.build.api.variant.ExternalNativeBuild.getTargets: org.gradle.api.provider.SetProperty<java.lang.String> ()
com.android.build.api.variant.ExternalNdkBuild implements com.android.build.api.variant.ExternalNativeBuild
com.android.build.api.variant.FilterConfiguration
com.android.build.api.variant.FilterConfiguration$FilterType extends java.lang.Enum
com.android.build.api.variant.FilterConfiguration$FilterType.valueOf: com.android.build.api.variant.FilterConfiguration$FilterType (java.lang.String)
com.android.build.api.variant.FilterConfiguration$FilterType.values: com.android.build.api.variant.FilterConfiguration$FilterType[] ()
com.android.build.api.variant.FilterConfiguration.getFilterType: com.android.build.api.variant.FilterConfiguration$FilterType ()
com.android.build.api.variant.FilterConfiguration.getIdentifier: java.lang.String ()
com.android.build.api.variant.HasAndroidTestBuilder
com.android.build.api.variant.HasAndroidTestBuilder.getAndroidTestEnabled: boolean ()
com.android.build.api.variant.HasAndroidTestBuilder.getEnableAndroidTest: boolean ()
com.android.build.api.variant.HasAndroidTestBuilder.setAndroidTestEnabled: void (boolean)
com.android.build.api.variant.HasAndroidTestBuilder.setEnableAndroidTest: void (boolean)
com.android.build.api.variant.JniLibsApkPackaging implements com.android.build.api.variant.JniLibsPackaging
com.android.build.api.variant.JniLibsApkPackaging.getUseLegacyPackaging: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.JniLibsPackaging
com.android.build.api.variant.JniLibsPackaging.getExcludes: org.gradle.api.provider.SetProperty<java.lang.String> ()
com.android.build.api.variant.JniLibsPackaging.getKeepDebugSymbols: org.gradle.api.provider.SetProperty<java.lang.String> ()
com.android.build.api.variant.JniLibsPackaging.getPickFirsts: org.gradle.api.provider.SetProperty<java.lang.String> ()
com.android.build.api.variant.LibraryVariant implements com.android.build.api.variant.Variant, com.android.build.api.variant.AarComponent
com.android.build.api.variant.LibraryVariant.getAndroidTest: com.android.build.api.component.AndroidTest ()
com.android.build.api.variant.LibraryVariant.getApplicationId: org.gradle.api.provider.Provider<java.lang.String> ()
com.android.build.api.variant.LibraryVariant.getRenderscript: com.android.build.api.variant.Renderscript ()
com.android.build.api.variant.LibraryVariantBuilder implements com.android.build.api.variant.VariantBuilder, com.android.build.api.variant.HasAndroidTestBuilder
com.android.build.api.variant.Packaging
com.android.build.api.variant.Packaging.getJniLibs: com.android.build.api.variant.JniLibsPackaging ()
com.android.build.api.variant.Packaging.getResources: com.android.build.api.variant.ResourcesPackaging ()
com.android.build.api.variant.Renderscript
com.android.build.api.variant.Renderscript.getNdkModeEnabled: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.Renderscript.getOptimLevel: org.gradle.api.provider.Property<java.lang.Integer> ()
com.android.build.api.variant.Renderscript.getSupportModeBlasEnabled: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.Renderscript.getSupportModeEnabled: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.ResValue implements java.io.Serializable
com.android.build.api.variant.ResValue$Key implements java.io.Serializable
com.android.build.api.variant.ResValue$Key.getName: java.lang.String ()
com.android.build.api.variant.ResValue$Key.getType: java.lang.String ()
com.android.build.api.variant.ResValue.<init>: com.android.build.api.variant.ResValue (java.lang.String, java.lang.String)
com.android.build.api.variant.ResValue.<init>: com.android.build.api.variant.ResValue (java.lang.String, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.variant.ResValue.getComment: java.lang.String ()
com.android.build.api.variant.ResValue.getValue: java.lang.String ()
com.android.build.api.variant.Resource
com.android.build.api.variant.Resource.getPseudoLocalesEnabled: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.Resource.getResValues: org.gradle.api.provider.MapProperty<com.android.build.api.variant.ResValue$Key, com.android.build.api.variant.ResValue> ()
com.android.build.api.variant.Resource.makeResValueKey: com.android.build.api.variant.ResValue$Key (java.lang.String, java.lang.String)
com.android.build.api.variant.ResourcesPackaging
com.android.build.api.variant.ResourcesPackaging.getExcludes: org.gradle.api.provider.SetProperty<java.lang.String> ()
com.android.build.api.variant.ResourcesPackaging.getMerges: org.gradle.api.provider.SetProperty<java.lang.String> ()
com.android.build.api.variant.ResourcesPackaging.getPickFirsts: org.gradle.api.provider.SetProperty<java.lang.String> ()
com.android.build.api.variant.SigningConfig
com.android.build.api.variant.SigningConfig.getEnableV1Signing: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.SigningConfig.getEnableV2Signing: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.SigningConfig.getEnableV3Signing: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.SigningConfig.getEnableV4Signing: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.TestApkComponent implements com.android.build.api.variant.ApkComponent
com.android.build.api.variant.TestApkComponent.getFunctionalTest: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.TestApkComponent.getHandleProfiling: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.TestApkComponent.getInstrumentationRunner: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.variant.TestApkComponent.getTestLabel: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.variant.TestVariant implements com.android.build.api.variant.TestApkComponent, com.android.build.api.variant.Variant
com.android.build.api.variant.TestVariant.getApplicationId: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.variant.TestVariant.getTestedApplicationId: org.gradle.api.provider.Provider<java.lang.String> ()
com.android.build.api.variant.TestVariantBuilder implements com.android.build.api.variant.VariantBuilder
com.android.build.api.variant.Variant implements com.android.build.api.component.Component, com.android.build.api.variant.Resource
com.android.build.api.variant.Variant.getApplicationId: org.gradle.api.provider.Provider<java.lang.String> ()
com.android.build.api.variant.Variant.getBuildConfigFields: org.gradle.api.provider.MapProperty<java.lang.String, com.android.build.api.variant.BuildConfigField<? extends java.io.Serializable>> ()
com.android.build.api.variant.Variant.getExtension: T (java.lang.Class<T>)
com.android.build.api.variant.Variant.getExternalNativeBuild: com.android.build.api.variant.ExternalNativeBuild ()
com.android.build.api.variant.Variant.getManifestPlaceholders: org.gradle.api.provider.MapProperty<java.lang.String, java.lang.String> ()
com.android.build.api.variant.Variant.getMaxSdkVersion: java.lang.Integer ()
com.android.build.api.variant.Variant.getMinSdkVersion: com.android.build.api.variant.AndroidVersion ()
com.android.build.api.variant.Variant.getNamespace: org.gradle.api.provider.Provider<java.lang.String> ()
com.android.build.api.variant.Variant.getPackaging: com.android.build.api.variant.Packaging ()
com.android.build.api.variant.Variant.getProguardFiles: org.gradle.api.provider.ListProperty<org.gradle.api.file.RegularFile> ()
com.android.build.api.variant.Variant.getTargetSdkVersion: com.android.build.api.variant.AndroidVersion ()
com.android.build.api.variant.Variant.getUnitTest: com.android.build.api.component.UnitTest ()
com.android.build.api.variant.VariantBuilder implements com.android.build.api.component.ComponentBuilder
com.android.build.api.variant.VariantBuilder.getEnableUnitTest: boolean ()
com.android.build.api.variant.VariantBuilder.getMaxSdk: java.lang.Integer ()
com.android.build.api.variant.VariantBuilder.getMinSdk: java.lang.Integer ()
com.android.build.api.variant.VariantBuilder.getMinSdkPreview: java.lang.String ()
com.android.build.api.variant.VariantBuilder.getRenderscriptTargetApi: int ()
com.android.build.api.variant.VariantBuilder.getTargetSdk: java.lang.Integer ()
com.android.build.api.variant.VariantBuilder.getTargetSdkPreview: java.lang.String ()
com.android.build.api.variant.VariantBuilder.getUnitTestEnabled: boolean ()
com.android.build.api.variant.VariantBuilder.registerExtension: void (java.lang.Class<? extends T>, T)
com.android.build.api.variant.VariantBuilder.setEnableUnitTest: void (boolean)
com.android.build.api.variant.VariantBuilder.setMaxSdk: void (java.lang.Integer)
com.android.build.api.variant.VariantBuilder.setMinSdk: void (java.lang.Integer)
com.android.build.api.variant.VariantBuilder.setMinSdkPreview: void (java.lang.String)
com.android.build.api.variant.VariantBuilder.setRenderscriptTargetApi: void (int)
com.android.build.api.variant.VariantBuilder.setTargetSdk: void (java.lang.Integer)
com.android.build.api.variant.VariantBuilder.setTargetSdkPreview: void (java.lang.String)
com.android.build.api.variant.VariantBuilder.setUnitTestEnabled: void (boolean)
com.android.build.api.variant.VariantExtension
com.android.build.api.variant.VariantInfo
com.android.build.api.variant.VariantInfo.getBuildTypeName: java.lang.String ()
com.android.build.api.variant.VariantInfo.getFlavorNames: com.google.common.collect.ImmutableList<java.lang.String> ()
com.android.build.api.variant.VariantInfo.getFullVariantName: java.lang.String ()
com.android.build.api.variant.VariantInfo.isDebuggable: boolean ()
com.android.build.api.variant.VariantInfo.isTest: boolean ()
com.android.build.api.variant.VariantOutput implements com.android.build.api.variant.VariantOutputConfiguration
com.android.build.api.variant.VariantOutput.getEnable: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.VariantOutput.getEnabled: org.gradle.api.provider.Property<java.lang.Boolean> ()
com.android.build.api.variant.VariantOutput.getVersionCode: org.gradle.api.provider.Property<java.lang.Integer> ()
com.android.build.api.variant.VariantOutput.getVersionName: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.variant.VariantOutputConfiguration
com.android.build.api.variant.VariantOutputConfiguration$OutputType extends java.lang.Enum
com.android.build.api.variant.VariantOutputConfiguration$OutputType.valueOf: com.android.build.api.variant.VariantOutputConfiguration$OutputType (java.lang.String)
com.android.build.api.variant.VariantOutputConfiguration$OutputType.values: com.android.build.api.variant.VariantOutputConfiguration$OutputType[] ()
com.android.build.api.variant.VariantOutputConfiguration.getFilters: java.util.Collection<com.android.build.api.variant.FilterConfiguration> ()
com.android.build.api.variant.VariantOutputConfiguration.getOutputType: com.android.build.api.variant.VariantOutputConfiguration$OutputType ()
