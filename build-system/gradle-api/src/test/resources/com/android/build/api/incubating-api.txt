Incubating Android Gradle Plugin API.
-------------------------------------------------------------------------
ATTENTION REVIEWER: If this needs to be changed, please make sure changes
below are backwards compatible.
-------------------------------------------------------------------------
com.android.build.api.AndroidPluginVersion.dev: com.android.build.api.AndroidPluginVersion ()
com.android.build.api.artifact.MultipleArtifact$ALL_CLASSES_DIRS extends com.android.build.api.artifact.MultipleArtifact implements com.android.build.api.artifact.Artifact$Appendable, com.android.build.api.artifact.Artifact$Transformable, com.android.build.api.artifact.Artifact$Replaceable
com.android.build.api.artifact.MultipleArtifact$ALL_CLASSES_JARS extends com.android.build.api.artifact.MultipleArtifact implements com.android.build.api.artifact.Artifact$Appendable, com.android.build.api.artifact.Artifact$Transformable, com.android.build.api.artifact.Artifact$Replaceable
com.android.build.api.artifact.MultipleArtifact$ASSETS extends com.android.build.api.artifact.MultipleArtifact implements com.android.build.api.artifact.Artifact$Appendable, com.android.build.api.artifact.Artifact$Transformable, com.android.build.api.artifact.Artifact$Replaceable
com.android.build.api.artifact.SingleArtifact$METADATA_LIBRARY_DEPENDENCIES_REPORT extends com.android.build.api.artifact.SingleArtifact implements com.android.build.api.artifact.Artifact$Replaceable, com.android.build.api.artifact.Artifact$Transformable
com.android.build.api.attributes.ProductFlavorAttr$Companion
com.android.build.api.attributes.ProductFlavorAttr$Companion.of: org.gradle.api.attributes.Attribute<com.android.build.api.attributes.ProductFlavorAttr> (java.lang.String)
com.android.build.api.attributes.ProductFlavorAttr.of: org.gradle.api.attributes.Attribute<com.android.build.api.attributes.ProductFlavorAttr> (java.lang.String)
com.android.build.api.dsl.AaptOptions implements com.android.build.api.dsl.AndroidResources
com.android.build.api.dsl.AarMetadata.getMinAgpVersion: java.lang.String ()
com.android.build.api.dsl.AarMetadata.setMinAgpVersion: void (java.lang.String)
com.android.build.api.dsl.AbiSplit.isUniversalApk: boolean ()
com.android.build.api.dsl.AbiSplit.setUniversalApk: void (boolean)
com.android.build.api.dsl.AdbOptions implements com.android.build.api.dsl.Installation
com.android.build.api.dsl.AndroidResources.additionalParameters: void (java.lang.String)
com.android.build.api.dsl.AndroidResources.additionalParameters: void (java.lang.String[])
com.android.build.api.dsl.AndroidResources.getAdditionalParameters: java.util.List<java.lang.String> ()
com.android.build.api.dsl.AndroidResources.getNamespaced: boolean ()
com.android.build.api.dsl.AndroidResources.noCompress: void (java.lang.String)
com.android.build.api.dsl.AndroidResources.noCompress: void (java.lang.String[])
com.android.build.api.dsl.AndroidResources.setNamespaced: void (boolean)
com.android.build.api.dsl.AndroidSourceDirectorySet implements org.gradle.api.Named
com.android.build.api.dsl.AndroidSourceDirectorySet.getName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceDirectorySet.setSrcDirs: java.lang.Object (java.lang.Iterable<?>)
com.android.build.api.dsl.AndroidSourceDirectorySet.srcDir: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.AndroidSourceDirectorySet.srcDirs: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.AndroidSourceFile implements org.gradle.api.Named
com.android.build.api.dsl.AndroidSourceFile.getName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceFile.srcFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.AndroidSourceSet implements org.gradle.api.Named
com.android.build.api.dsl.AndroidSourceSet.aidl: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.assets: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.getAidl: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getAnnotationProcessorConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getApiConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getAssets: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getCompileOnlyConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getImplementationConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getJava: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getJni: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getJniLibs: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getKotlin: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getManifest: com.android.build.api.dsl.AndroidSourceFile ()
com.android.build.api.dsl.AndroidSourceSet.getMlModels: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getRenderscript: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getRes: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getResources: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getRuntimeOnlyConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.getShaders: com.android.build.api.dsl.AndroidSourceDirectorySet ()
com.android.build.api.dsl.AndroidSourceSet.getWearAppConfigurationName: java.lang.String ()
com.android.build.api.dsl.AndroidSourceSet.java: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.jni: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.jniLibs: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.kotlin: void (org.gradle.api.Action<com.android.build.api.dsl.AndroidSourceDirectorySet>)
com.android.build.api.dsl.AndroidSourceSet.manifest: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceFile, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.mlModels: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.renderscript: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.res: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.resources: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AndroidSourceSet.setRoot: java.lang.Object (java.lang.String)
com.android.build.api.dsl.AndroidSourceSet.shaders: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AndroidSourceDirectorySet, kotlin.Unit>)
com.android.build.api.dsl.AnnotationProcessorOptions.argument: void (java.lang.String, java.lang.String)
com.android.build.api.dsl.AnnotationProcessorOptions.arguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.AnnotationProcessorOptions.className: void (java.lang.String)
com.android.build.api.dsl.AnnotationProcessorOptions.classNames: void (java.lang.String[])
com.android.build.api.dsl.AnnotationProcessorOptions.compilerArgumentProvider: void (org.gradle.process.CommandLineArgumentProvider)
com.android.build.api.dsl.AnnotationProcessorOptions.compilerArgumentProviders: void (org.gradle.process.CommandLineArgumentProvider[])
com.android.build.api.dsl.ApkExtension
com.android.build.api.dsl.ApkSigningConfig.getEnableV1Signing: java.lang.Boolean ()
com.android.build.api.dsl.ApkSigningConfig.getEnableV2Signing: java.lang.Boolean ()
com.android.build.api.dsl.ApkSigningConfig.getEnableV3Signing: java.lang.Boolean ()
com.android.build.api.dsl.ApkSigningConfig.getEnableV4Signing: java.lang.Boolean ()
com.android.build.api.dsl.ApkSigningConfig.isV1SigningEnabled: boolean ()
com.android.build.api.dsl.ApkSigningConfig.isV2SigningEnabled: boolean ()
com.android.build.api.dsl.ApkSigningConfig.setEnableV1Signing: void (java.lang.Boolean)
com.android.build.api.dsl.ApkSigningConfig.setEnableV2Signing: void (java.lang.Boolean)
com.android.build.api.dsl.ApkSigningConfig.setEnableV3Signing: void (java.lang.Boolean)
com.android.build.api.dsl.ApkSigningConfig.setEnableV4Signing: void (java.lang.Boolean)
com.android.build.api.dsl.ApkSigningConfig.setV1SigningEnabled: void (boolean)
com.android.build.api.dsl.ApkSigningConfig.setV2SigningEnabled: void (boolean)
com.android.build.api.dsl.ApplicationBaseFlavor.getApplicationId: java.lang.String ()
com.android.build.api.dsl.ApplicationBaseFlavor.getMaxSdk: java.lang.Integer ()
com.android.build.api.dsl.ApplicationBaseFlavor.getTargetSdk: java.lang.Integer ()
com.android.build.api.dsl.ApplicationBaseFlavor.getTargetSdkPreview: java.lang.String ()
com.android.build.api.dsl.ApplicationBaseFlavor.getVersionCode: java.lang.Integer ()
com.android.build.api.dsl.ApplicationBaseFlavor.getVersionName: java.lang.String ()
com.android.build.api.dsl.ApplicationBaseFlavor.maxSdkVersion: void (int)
com.android.build.api.dsl.ApplicationBaseFlavor.setApplicationId: void (java.lang.String)
com.android.build.api.dsl.ApplicationBaseFlavor.setMaxSdk: void (java.lang.Integer)
com.android.build.api.dsl.ApplicationBaseFlavor.setTargetSdk: void (java.lang.Integer)
com.android.build.api.dsl.ApplicationBaseFlavor.setTargetSdkPreview: void (java.lang.String)
com.android.build.api.dsl.ApplicationBaseFlavor.setTargetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.ApplicationBaseFlavor.setVersionCode: void (java.lang.Integer)
com.android.build.api.dsl.ApplicationBaseFlavor.setVersionName: void (java.lang.String)
com.android.build.api.dsl.ApplicationBaseFlavor.targetSdkVersion: void (int)
com.android.build.api.dsl.ApplicationBaseFlavor.targetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.ApplicationBuildFeatures.getDataBinding: java.lang.Boolean ()
com.android.build.api.dsl.ApplicationBuildFeatures.getMlModelBinding: java.lang.Boolean ()
com.android.build.api.dsl.ApplicationBuildFeatures.setDataBinding: void (java.lang.Boolean)
com.android.build.api.dsl.ApplicationBuildFeatures.setMlModelBinding: void (java.lang.Boolean)
com.android.build.api.dsl.ApplicationBuildType.isCrunchPngs: java.lang.Boolean ()
com.android.build.api.dsl.ApplicationBuildType.isDebuggable: boolean ()
com.android.build.api.dsl.ApplicationBuildType.isDefault: boolean ()
com.android.build.api.dsl.ApplicationBuildType.isEmbedMicroApp: boolean ()
com.android.build.api.dsl.ApplicationBuildType.setCrunchPngs: void (java.lang.Boolean)
com.android.build.api.dsl.ApplicationBuildType.setDebuggable: void (boolean)
com.android.build.api.dsl.ApplicationBuildType.setDefault: void (boolean)
com.android.build.api.dsl.ApplicationBuildType.setEmbedMicroApp: void (boolean)
com.android.build.api.dsl.ApplicationExtension.getAssetPacks: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ApplicationExtension.getDynamicFeatures: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ApplicationProductFlavor.isDefault: boolean ()
com.android.build.api.dsl.ApplicationProductFlavor.setDefault: void (boolean)
com.android.build.api.dsl.ApplicationVariantDimension.getApplicationIdSuffix: java.lang.String ()
com.android.build.api.dsl.ApplicationVariantDimension.getMultiDexEnabled: java.lang.Boolean ()
com.android.build.api.dsl.ApplicationVariantDimension.getSigningConfig: com.android.build.api.dsl.ApkSigningConfig ()
com.android.build.api.dsl.ApplicationVariantDimension.getVersionNameSuffix: java.lang.String ()
com.android.build.api.dsl.ApplicationVariantDimension.setApplicationIdSuffix: void (java.lang.String)
com.android.build.api.dsl.ApplicationVariantDimension.setMultiDexEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.ApplicationVariantDimension.setSigningConfig: void (com.android.build.api.dsl.ApkSigningConfig)
com.android.build.api.dsl.ApplicationVariantDimension.setVersionNameSuffix: void (java.lang.String)
com.android.build.api.dsl.AssetPackBundleExtension.deviceTier: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleDeviceTier, kotlin.Unit>)
com.android.build.api.dsl.AssetPackBundleExtension.getApplicationId: java.lang.String ()
com.android.build.api.dsl.AssetPackBundleExtension.getAssetPacks: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.AssetPackBundleExtension.getCompileSdk: int ()
com.android.build.api.dsl.AssetPackBundleExtension.getDeviceTier: com.android.build.api.dsl.BundleDeviceTier ()
com.android.build.api.dsl.AssetPackBundleExtension.getSigningConfig: com.android.build.api.dsl.SigningConfig ()
com.android.build.api.dsl.AssetPackBundleExtension.getTexture: com.android.build.api.dsl.BundleTexture ()
com.android.build.api.dsl.AssetPackBundleExtension.getVersionCodes: java.util.Set<java.lang.Integer> ()
com.android.build.api.dsl.AssetPackBundleExtension.getVersionTag: java.lang.String ()
com.android.build.api.dsl.AssetPackBundleExtension.setApplicationId: void (java.lang.String)
com.android.build.api.dsl.AssetPackBundleExtension.setCompileSdk: void (int)
com.android.build.api.dsl.AssetPackBundleExtension.setVersionTag: void (java.lang.String)
com.android.build.api.dsl.AssetPackBundleExtension.signingConfig: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.SigningConfig, kotlin.Unit>)
com.android.build.api.dsl.AssetPackBundleExtension.texture: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleTexture, kotlin.Unit>)
com.android.build.api.dsl.AssetPackExtension.dynamicDelivery: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DynamicDelivery, kotlin.Unit>)
com.android.build.api.dsl.AssetPackExtension.getDynamicDelivery: com.android.build.api.dsl.DynamicDelivery ()
com.android.build.api.dsl.AssetPackExtension.getPackName: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.dsl.BaseFlavor.getMinSdk: java.lang.Integer ()
com.android.build.api.dsl.BaseFlavor.getMinSdkPreview: java.lang.String ()
com.android.build.api.dsl.BaseFlavor.getName: java.lang.String ()
com.android.build.api.dsl.BaseFlavor.getRenderscriptNdkModeEnabled: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getRenderscriptSupportModeBlasEnabled: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getRenderscriptSupportModeEnabled: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getRenderscriptTargetApi: java.lang.Integer ()
com.android.build.api.dsl.BaseFlavor.getResourceConfigurations: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.BaseFlavor.getTestApplicationId: java.lang.String ()
com.android.build.api.dsl.BaseFlavor.getTestFunctionalTest: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getTestHandleProfiling: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.getTestInstrumentationRunner: java.lang.String ()
com.android.build.api.dsl.BaseFlavor.getTestInstrumentationRunnerArguments: java.util.Map<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.BaseFlavor.getVectorDrawables: com.android.build.api.dsl.VectorDrawables ()
com.android.build.api.dsl.BaseFlavor.getWearAppUnbundled: java.lang.Boolean ()
com.android.build.api.dsl.BaseFlavor.initWith: void (com.android.build.api.dsl.BaseFlavor)
com.android.build.api.dsl.BaseFlavor.minSdkVersion: void (int)
com.android.build.api.dsl.BaseFlavor.minSdkVersion: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.missingDimensionStrategy: void (java.lang.String, java.lang.String)
com.android.build.api.dsl.BaseFlavor.missingDimensionStrategy: void (java.lang.String, java.lang.String[])
com.android.build.api.dsl.BaseFlavor.missingDimensionStrategy: void (java.lang.String, java.util.List<java.lang.String>)
com.android.build.api.dsl.BaseFlavor.resConfig: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.resConfigs: void (java.lang.String[])
com.android.build.api.dsl.BaseFlavor.resConfigs: void (java.util.Collection<java.lang.String>)
com.android.build.api.dsl.BaseFlavor.setMinSdk: void (java.lang.Integer)
com.android.build.api.dsl.BaseFlavor.setMinSdkPreview: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.setMinSdkVersion: void (int)
com.android.build.api.dsl.BaseFlavor.setMinSdkVersion: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.setRenderscriptNdkModeEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setRenderscriptSupportModeBlasEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setRenderscriptSupportModeEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setRenderscriptTargetApi: void (java.lang.Integer)
com.android.build.api.dsl.BaseFlavor.setTestApplicationId: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.setTestFunctionalTest: java.lang.Object (boolean)
com.android.build.api.dsl.BaseFlavor.setTestFunctionalTest: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setTestHandleProfiling: java.lang.Object (boolean)
com.android.build.api.dsl.BaseFlavor.setTestHandleProfiling: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.setTestInstrumentationRunner: void (java.lang.String)
com.android.build.api.dsl.BaseFlavor.setTestInstrumentationRunnerArguments: java.lang.Object (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.BaseFlavor.setWearAppUnbundled: void (java.lang.Boolean)
com.android.build.api.dsl.BaseFlavor.testInstrumentationRunnerArgument: void (java.lang.String, java.lang.String)
com.android.build.api.dsl.BaseFlavor.testInstrumentationRunnerArguments: void (java.util.Map<java.lang.String, java.lang.String>)
com.android.build.api.dsl.BaseFlavor.vectorDrawables: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.VectorDrawables, kotlin.Unit>)
com.android.build.api.dsl.BuildFeatures.getAidl: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getBuildConfig: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getCompose: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getPrefab: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getRenderScript: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getResValues: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getShaders: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.getViewBinding: java.lang.Boolean ()
com.android.build.api.dsl.BuildFeatures.setAidl: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setBuildConfig: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setCompose: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setPrefab: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setRenderScript: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setResValues: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setShaders: void (java.lang.Boolean)
com.android.build.api.dsl.BuildFeatures.setViewBinding: void (java.lang.Boolean)
com.android.build.api.dsl.BuildType.getEnableUnitTestCoverage: boolean ()
com.android.build.api.dsl.BuildType.getMatchingFallbacks: java.util.List<java.lang.String> ()
com.android.build.api.dsl.BuildType.getPostprocessing: com.android.build.api.dsl.PostProcessing ()
com.android.build.api.dsl.BuildType.getRenderscriptOptimLevel: int ()
com.android.build.api.dsl.BuildType.initWith: void (com.android.build.api.dsl.BuildType)
com.android.build.api.dsl.BuildType.isJniDebuggable: boolean ()
com.android.build.api.dsl.BuildType.isMinifyEnabled: boolean ()
com.android.build.api.dsl.BuildType.isPseudoLocalesEnabled: boolean ()
com.android.build.api.dsl.BuildType.isRenderscriptDebuggable: boolean ()
com.android.build.api.dsl.BuildType.isShrinkResources: boolean ()
com.android.build.api.dsl.BuildType.isTestCoverageEnabled: boolean ()
com.android.build.api.dsl.BuildType.isZipAlignEnabled: boolean ()
com.android.build.api.dsl.BuildType.postprocessing: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.PostProcessing, kotlin.Unit>)
com.android.build.api.dsl.BuildType.setEnableUnitTestCoverage: void (boolean)
com.android.build.api.dsl.BuildType.setJniDebuggable: void (boolean)
com.android.build.api.dsl.BuildType.setMatchingFallbacks: void (java.lang.String[])
com.android.build.api.dsl.BuildType.setMatchingFallbacks: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.BuildType.setMinifyEnabled: void (boolean)
com.android.build.api.dsl.BuildType.setPseudoLocalesEnabled: void (boolean)
com.android.build.api.dsl.BuildType.setRenderscriptDebuggable: void (boolean)
com.android.build.api.dsl.BuildType.setRenderscriptOptimLevel: void (int)
com.android.build.api.dsl.BuildType.setShrinkResources: void (boolean)
com.android.build.api.dsl.BuildType.setTestCoverageEnabled: void (boolean)
com.android.build.api.dsl.BuildType.setZipAlignEnabled: void (boolean)
com.android.build.api.dsl.Bundle.codeTransparency: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleCodeTransparency, kotlin.Unit>)
com.android.build.api.dsl.Bundle.deviceTier: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.BundleDeviceTier, kotlin.Unit>)
com.android.build.api.dsl.Bundle.getCodeTransparency: com.android.build.api.dsl.BundleCodeTransparency ()
com.android.build.api.dsl.Bundle.getDeviceTier: com.android.build.api.dsl.BundleDeviceTier ()
com.android.build.api.dsl.Bundle.getIntegrityConfigDir: org.gradle.api.file.DirectoryProperty ()
com.android.build.api.dsl.Bundle.getStoreArchive: com.android.build.api.dsl.StoreArchive ()
com.android.build.api.dsl.Bundle.storeArchive: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.StoreArchive, kotlin.Unit>)
com.android.build.api.dsl.BundleAbi.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleAbi.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.BundleCodeTransparency
com.android.build.api.dsl.BundleCodeTransparency.getSigning: com.android.build.api.dsl.SigningConfig ()
com.android.build.api.dsl.BundleCodeTransparency.signing: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.SigningConfig, kotlin.Unit>)
com.android.build.api.dsl.BundleDensity.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleDensity.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.BundleDeviceTier
com.android.build.api.dsl.BundleDeviceTier.getDefaultTier: java.lang.String ()
com.android.build.api.dsl.BundleDeviceTier.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleDeviceTier.setDefaultTier: void (java.lang.String)
com.android.build.api.dsl.BundleDeviceTier.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.BundleLanguage.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleLanguage.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.BundleTexture.getDefaultFormat: java.lang.String ()
com.android.build.api.dsl.BundleTexture.getEnableSplit: java.lang.Boolean ()
com.android.build.api.dsl.BundleTexture.setDefaultFormat: void (java.lang.String)
com.android.build.api.dsl.BundleTexture.setEnableSplit: void (java.lang.Boolean)
com.android.build.api.dsl.CommonExtension.aaptOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AaptOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.adbOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AdbOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.buildFeatures: void (kotlin.jvm.functions.Function1<? super BuildFeaturesT, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.buildToolsVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.compileSdkVersion: void (int)
com.android.build.api.dsl.CommonExtension.compileSdkVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.composeOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ComposeOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.flavorDimensions: void (java.lang.String[])
com.android.build.api.dsl.CommonExtension.getAaptOptions: com.android.build.api.dsl.AaptOptions ()
com.android.build.api.dsl.CommonExtension.getAdbOptions: com.android.build.api.dsl.AdbOptions ()
com.android.build.api.dsl.CommonExtension.getBuildFeatures: BuildFeaturesT ()
com.android.build.api.dsl.CommonExtension.getBuildToolsVersion: java.lang.String ()
com.android.build.api.dsl.CommonExtension.getComposeOptions: com.android.build.api.dsl.ComposeOptions ()
com.android.build.api.dsl.CommonExtension.getDefaultProguardFile: java.io.File (java.lang.String)
com.android.build.api.dsl.CommonExtension.getExperimentalProperties: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.api.dsl.CommonExtension.getFlavorDimensions: java.util.List<java.lang.String> ()
com.android.build.api.dsl.CommonExtension.getJacoco: com.android.build.api.dsl.JacocoOptions ()
com.android.build.api.dsl.CommonExtension.getLintOptions: com.android.build.api.dsl.LintOptions ()
com.android.build.api.dsl.CommonExtension.getNdkPath: java.lang.String ()
com.android.build.api.dsl.CommonExtension.getNdkVersion: java.lang.String ()
com.android.build.api.dsl.CommonExtension.getPackagingOptions: com.android.build.api.dsl.PackagingOptions ()
com.android.build.api.dsl.CommonExtension.getResourcePrefix: java.lang.String ()
com.android.build.api.dsl.CommonExtension.getSdkComponents: com.android.build.api.dsl.SdkComponents ()
com.android.build.api.dsl.CommonExtension.getSigningConfigs: org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.ApkSigningConfig> ()
com.android.build.api.dsl.CommonExtension.getSourceSets: org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.AndroidSourceSet> ()
com.android.build.api.dsl.CommonExtension.getSplits: com.android.build.api.dsl.Splits ()
com.android.build.api.dsl.CommonExtension.getTestOptions: com.android.build.api.dsl.TestOptions ()
com.android.build.api.dsl.CommonExtension.jacoco: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JacocoOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.lintOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.LintOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.packagingOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.PackagingOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.setBuildToolsVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.setNdkPath: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.setNdkVersion: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.setResourcePrefix: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.signingConfigs: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.ApkSigningConfig>, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.sourceSets: void (kotlin.jvm.functions.Function1<? super org.gradle.api.NamedDomainObjectContainer<? extends com.android.build.api.dsl.AndroidSourceSet>, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.splits: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Splits, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.testOptions: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestOptions, kotlin.Unit>)
com.android.build.api.dsl.CommonExtension.useLibrary: void (java.lang.String)
com.android.build.api.dsl.CommonExtension.useLibrary: void (java.lang.String, boolean)
com.android.build.api.dsl.CompileOptions.getEncoding: java.lang.String ()
com.android.build.api.dsl.CompileOptions.getSourceCompatibility: org.gradle.api.JavaVersion ()
com.android.build.api.dsl.CompileOptions.getTargetCompatibility: org.gradle.api.JavaVersion ()
com.android.build.api.dsl.CompileOptions.isCoreLibraryDesugaringEnabled: boolean ()
com.android.build.api.dsl.CompileOptions.setCoreLibraryDesugaringEnabled: void (boolean)
com.android.build.api.dsl.CompileOptions.setEncoding: void (java.lang.String)
com.android.build.api.dsl.CompileOptions.setSourceCompatibility: void (org.gradle.api.JavaVersion)
com.android.build.api.dsl.CompileOptions.setTargetCompatibility: void (org.gradle.api.JavaVersion)
com.android.build.api.dsl.CompileOptions.sourceCompatibility: void (java.lang.Object)
com.android.build.api.dsl.CompileOptions.targetCompatibility: void (java.lang.Object)
com.android.build.api.dsl.ComposeOptions
com.android.build.api.dsl.ComposeOptions.getKotlinCompilerExtensionVersion: java.lang.String ()
com.android.build.api.dsl.ComposeOptions.getKotlinCompilerVersion: java.lang.String ()
com.android.build.api.dsl.ComposeOptions.getUseLiveLiterals: boolean ()
com.android.build.api.dsl.ComposeOptions.setKotlinCompilerExtensionVersion: void (java.lang.String)
com.android.build.api.dsl.ComposeOptions.setKotlinCompilerVersion: void (java.lang.String)
com.android.build.api.dsl.ComposeOptions.setUseLiveLiterals: void (boolean)
com.android.build.api.dsl.DensitySplit.compatibleScreens: void (java.lang.String[])
com.android.build.api.dsl.DensitySplit.getCompatibleScreens: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.DensitySplit.isStrict: boolean ()
com.android.build.api.dsl.DensitySplit.setStrict: void (boolean)
com.android.build.api.dsl.DependenciesInfo.getIncludeInApk: boolean ()
com.android.build.api.dsl.DependenciesInfo.getIncludeInBundle: boolean ()
com.android.build.api.dsl.DependenciesInfo.setIncludeInApk: void (boolean)
com.android.build.api.dsl.DependenciesInfo.setIncludeInBundle: void (boolean)
com.android.build.api.dsl.Device implements org.gradle.api.Named
com.android.build.api.dsl.DeviceGroup implements org.gradle.api.Named
com.android.build.api.dsl.DeviceGroup.getTargetDevices: org.gradle.api.DomainObjectSet<com.android.build.api.dsl.Device> ()
com.android.build.api.dsl.DexPackagingOptions
com.android.build.api.dsl.DexPackagingOptions.getUseLegacyPackaging: java.lang.Boolean ()
com.android.build.api.dsl.DexPackagingOptions.setUseLegacyPackaging: void (java.lang.Boolean)
com.android.build.api.dsl.DynamicDelivery
com.android.build.api.dsl.DynamicDelivery.getDeliveryType: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.dsl.DynamicDelivery.getInstantDeliveryType: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.dsl.DynamicFeatureBuildFeatures.getDataBinding: java.lang.Boolean ()
com.android.build.api.dsl.DynamicFeatureBuildFeatures.getMlModelBinding: java.lang.Boolean ()
com.android.build.api.dsl.DynamicFeatureBuildFeatures.setDataBinding: void (java.lang.Boolean)
com.android.build.api.dsl.DynamicFeatureBuildFeatures.setMlModelBinding: void (java.lang.Boolean)
com.android.build.api.dsl.DynamicFeatureBuildType.isCrunchPngs: java.lang.Boolean ()
com.android.build.api.dsl.DynamicFeatureBuildType.setCrunchPngs: void (java.lang.Boolean)
com.android.build.api.dsl.EmulatorSnapshots
com.android.build.api.dsl.EmulatorSnapshots.getCompressSnapshots: boolean ()
com.android.build.api.dsl.EmulatorSnapshots.getEnableForTestFailures: boolean ()
com.android.build.api.dsl.EmulatorSnapshots.getMaxSnapshotsForTestFailures: int ()
com.android.build.api.dsl.EmulatorSnapshots.retainAll: void ()
com.android.build.api.dsl.EmulatorSnapshots.setCompressSnapshots: void (boolean)
com.android.build.api.dsl.EmulatorSnapshots.setEnableForTestFailures: void (boolean)
com.android.build.api.dsl.EmulatorSnapshots.setMaxSnapshotsForTestFailures: void (int)
com.android.build.api.dsl.ExternalNativeBuildOptions
com.android.build.api.dsl.ExternalNativeBuildOptions.cmake: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeCmakeOptions, kotlin.Unit>)
com.android.build.api.dsl.ExternalNativeBuildOptions.getCmake: com.android.build.api.dsl.ExternalNativeCmakeOptions ()
com.android.build.api.dsl.ExternalNativeBuildOptions.getNdkBuild: com.android.build.api.dsl.ExternalNativeNdkBuildOptions ()
com.android.build.api.dsl.ExternalNativeBuildOptions.ndkBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeNdkBuildOptions, kotlin.Unit>)
com.android.build.api.dsl.ExternalNativeCmakeOptions
com.android.build.api.dsl.ExternalNativeCmakeOptions.abiFilters: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeCmakeOptions.arguments: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeCmakeOptions.cFlags: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeCmakeOptions.cppFlags: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeCmakeOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.getCFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeCmakeOptions.targets: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.abiFilters: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.arguments: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.cFlags: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.cppFlags: void (java.lang.String[])
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getArguments: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getCFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getCppFlags: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.getTargets: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ExternalNativeNdkBuildOptions.targets: void (java.lang.String[])
com.android.build.api.dsl.FailureRetention implements com.android.build.api.dsl.EmulatorSnapshots
com.android.build.api.dsl.FailureRetention.getEnable: boolean ()
com.android.build.api.dsl.FailureRetention.getMaxSnapshots: int ()
com.android.build.api.dsl.FailureRetention.setEnable: void (boolean)
com.android.build.api.dsl.FailureRetention.setMaxSnapshots: void (int)
com.android.build.api.dsl.HasInitWith
com.android.build.api.dsl.HasInitWith.initWith: void (T)
com.android.build.api.dsl.Installation.getInstallOptions: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.Installation.getTimeOutInMs: int ()
com.android.build.api.dsl.Installation.installOptions: void (java.lang.String)
com.android.build.api.dsl.Installation.installOptions: void (java.lang.String[])
com.android.build.api.dsl.Installation.setInstallOptions: void (java.util.Collection<java.lang.String>)
com.android.build.api.dsl.Installation.setTimeOutInMs: void (int)
com.android.build.api.dsl.JacocoOptions implements com.android.build.api.dsl.TestCoverage
com.android.build.api.dsl.JacocoOptions.getVersion: java.lang.String ()
com.android.build.api.dsl.JacocoOptions.setVersion: void (java.lang.String)
com.android.build.api.dsl.JniLibsPackagingOptions
com.android.build.api.dsl.JniLibsPackagingOptions.getExcludes: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.JniLibsPackagingOptions.getKeepDebugSymbols: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.JniLibsPackagingOptions.getPickFirsts: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.JniLibsPackagingOptions.getUseLegacyPackaging: java.lang.Boolean ()
com.android.build.api.dsl.JniLibsPackagingOptions.setUseLegacyPackaging: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBaseFlavor.getTargetSdk: java.lang.Integer ()
com.android.build.api.dsl.LibraryBaseFlavor.getTargetSdkPreview: java.lang.String ()
com.android.build.api.dsl.LibraryBaseFlavor.setTargetSdk: void (java.lang.Integer)
com.android.build.api.dsl.LibraryBaseFlavor.setTargetSdkPreview: void (java.lang.String)
com.android.build.api.dsl.LibraryBaseFlavor.setTargetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.LibraryBaseFlavor.targetSdkVersion: void (int)
com.android.build.api.dsl.LibraryBaseFlavor.targetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.LibraryBuildFeatures.getAndroidResources: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.getDataBinding: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.getMlModelBinding: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.getPrefabPublishing: java.lang.Boolean ()
com.android.build.api.dsl.LibraryBuildFeatures.setAndroidResources: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBuildFeatures.setDataBinding: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBuildFeatures.setMlModelBinding: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBuildFeatures.setPrefabPublishing: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryBuildType.isDefault: boolean ()
com.android.build.api.dsl.LibraryBuildType.setDefault: void (boolean)
com.android.build.api.dsl.LibraryExtension.getAidlPackagedList: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.LibraryExtension.getPrefab: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.PrefabPackagingOptions> ()
com.android.build.api.dsl.LibraryProductFlavor.isDefault: boolean ()
com.android.build.api.dsl.LibraryProductFlavor.setDefault: void (boolean)
com.android.build.api.dsl.LibraryVariantDimension.aarMetadata: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AarMetadata, kotlin.Unit>)
com.android.build.api.dsl.LibraryVariantDimension.aarMetadata: void (org.gradle.api.Action<com.android.build.api.dsl.AarMetadata>)
com.android.build.api.dsl.LibraryVariantDimension.consumerProguardFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.LibraryVariantDimension.consumerProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.LibraryVariantDimension.getAarMetadata: com.android.build.api.dsl.AarMetadata ()
com.android.build.api.dsl.LibraryVariantDimension.getConsumerProguardFiles: java.util.List<java.io.File> ()
com.android.build.api.dsl.LibraryVariantDimension.getMultiDexEnabled: java.lang.Boolean ()
com.android.build.api.dsl.LibraryVariantDimension.getSigningConfig: com.android.build.api.dsl.ApkSigningConfig ()
com.android.build.api.dsl.LibraryVariantDimension.setMultiDexEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.LibraryVariantDimension.setSigningConfig: void (com.android.build.api.dsl.ApkSigningConfig)
com.android.build.api.dsl.Lint.getAbortOnError: boolean ()
com.android.build.api.dsl.Lint.getAbsolutePaths: boolean ()
com.android.build.api.dsl.Lint.getBaseline: java.io.File ()
com.android.build.api.dsl.Lint.getCheckAllWarnings: boolean ()
com.android.build.api.dsl.Lint.getCheckDependencies: boolean ()
com.android.build.api.dsl.Lint.getCheckGeneratedSources: boolean ()
com.android.build.api.dsl.Lint.getCheckOnly: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getCheckReleaseBuilds: boolean ()
com.android.build.api.dsl.Lint.getCheckTestSources: boolean ()
com.android.build.api.dsl.Lint.getDisable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getEnable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getError: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getExplainIssues: boolean ()
com.android.build.api.dsl.Lint.getFatal: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getHtmlOutput: java.io.File ()
com.android.build.api.dsl.Lint.getHtmlReport: boolean ()
com.android.build.api.dsl.Lint.getIgnore: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getIgnoreTestFixturesSources: boolean ()
com.android.build.api.dsl.Lint.getIgnoreTestSources: boolean ()
com.android.build.api.dsl.Lint.getIgnoreWarnings: boolean ()
com.android.build.api.dsl.Lint.getInformational: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getLintConfig: java.io.File ()
com.android.build.api.dsl.Lint.getNoLines: boolean ()
com.android.build.api.dsl.Lint.getQuiet: boolean ()
com.android.build.api.dsl.Lint.getSarifOutput: java.io.File ()
com.android.build.api.dsl.Lint.getSarifReport: boolean ()
com.android.build.api.dsl.Lint.getShowAll: boolean ()
com.android.build.api.dsl.Lint.getTextOutput: java.io.File ()
com.android.build.api.dsl.Lint.getTextReport: boolean ()
com.android.build.api.dsl.Lint.getWarning: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Lint.getWarningsAsErrors: boolean ()
com.android.build.api.dsl.Lint.getXmlOutput: java.io.File ()
com.android.build.api.dsl.Lint.getXmlReport: boolean ()
com.android.build.api.dsl.Lint.setAbortOnError: void (boolean)
com.android.build.api.dsl.Lint.setAbsolutePaths: void (boolean)
com.android.build.api.dsl.Lint.setBaseline: void (java.io.File)
com.android.build.api.dsl.Lint.setCheckAllWarnings: void (boolean)
com.android.build.api.dsl.Lint.setCheckDependencies: void (boolean)
com.android.build.api.dsl.Lint.setCheckGeneratedSources: void (boolean)
com.android.build.api.dsl.Lint.setCheckReleaseBuilds: void (boolean)
com.android.build.api.dsl.Lint.setCheckTestSources: void (boolean)
com.android.build.api.dsl.Lint.setExplainIssues: void (boolean)
com.android.build.api.dsl.Lint.setHtmlOutput: void (java.io.File)
com.android.build.api.dsl.Lint.setHtmlReport: void (boolean)
com.android.build.api.dsl.Lint.setIgnoreTestFixturesSources: void (boolean)
com.android.build.api.dsl.Lint.setIgnoreTestSources: void (boolean)
com.android.build.api.dsl.Lint.setIgnoreWarnings: void (boolean)
com.android.build.api.dsl.Lint.setLintConfig: void (java.io.File)
com.android.build.api.dsl.Lint.setNoLines: void (boolean)
com.android.build.api.dsl.Lint.setQuiet: void (boolean)
com.android.build.api.dsl.Lint.setSarifOutput: void (java.io.File)
com.android.build.api.dsl.Lint.setSarifReport: void (boolean)
com.android.build.api.dsl.Lint.setShowAll: void (boolean)
com.android.build.api.dsl.Lint.setTextOutput: void (java.io.File)
com.android.build.api.dsl.Lint.setTextReport: void (boolean)
com.android.build.api.dsl.Lint.setWarningsAsErrors: void (boolean)
com.android.build.api.dsl.Lint.setXmlOutput: void (java.io.File)
com.android.build.api.dsl.Lint.setXmlReport: void (boolean)
com.android.build.api.dsl.LintOptions
com.android.build.api.dsl.LintOptions.baseline: void (java.io.File)
com.android.build.api.dsl.LintOptions.baseline: void (java.lang.String)
com.android.build.api.dsl.LintOptions.check: void (java.lang.String)
com.android.build.api.dsl.LintOptions.check: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.checkOnly: void (java.lang.String)
com.android.build.api.dsl.LintOptions.checkOnly: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.disable: void (java.lang.String)
com.android.build.api.dsl.LintOptions.disable: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.enable: void (java.lang.String)
com.android.build.api.dsl.LintOptions.enable: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.error: void (java.lang.String)
com.android.build.api.dsl.LintOptions.error: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.fatal: void (java.lang.String)
com.android.build.api.dsl.LintOptions.fatal: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.getBaselineFile: java.io.File ()
com.android.build.api.dsl.LintOptions.getCheckOnly: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.LintOptions.getDisable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.LintOptions.getEnable: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.LintOptions.getHtmlOutput: java.io.File ()
com.android.build.api.dsl.LintOptions.getHtmlReport: boolean ()
com.android.build.api.dsl.LintOptions.getLintConfig: java.io.File ()
com.android.build.api.dsl.LintOptions.getSarifOutput: java.io.File ()
com.android.build.api.dsl.LintOptions.getSarifReport: boolean ()
com.android.build.api.dsl.LintOptions.getTextOutput: java.io.File ()
com.android.build.api.dsl.LintOptions.getTextReport: boolean ()
com.android.build.api.dsl.LintOptions.getXmlOutput: java.io.File ()
com.android.build.api.dsl.LintOptions.getXmlReport: boolean ()
com.android.build.api.dsl.LintOptions.ignore: void (java.lang.String)
com.android.build.api.dsl.LintOptions.ignore: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.informational: void (java.lang.String)
com.android.build.api.dsl.LintOptions.informational: void (java.lang.String[])
com.android.build.api.dsl.LintOptions.isAbortOnError: boolean ()
com.android.build.api.dsl.LintOptions.isAbsolutePaths: boolean ()
com.android.build.api.dsl.LintOptions.isCheckAllWarnings: boolean ()
com.android.build.api.dsl.LintOptions.isCheckDependencies: boolean ()
com.android.build.api.dsl.LintOptions.isCheckGeneratedSources: boolean ()
com.android.build.api.dsl.LintOptions.isCheckReleaseBuilds: boolean ()
com.android.build.api.dsl.LintOptions.isCheckTestSources: boolean ()
com.android.build.api.dsl.LintOptions.isExplainIssues: boolean ()
com.android.build.api.dsl.LintOptions.isIgnoreTestSources: boolean ()
com.android.build.api.dsl.LintOptions.isIgnoreWarnings: boolean ()
com.android.build.api.dsl.LintOptions.isNoLines: boolean ()
com.android.build.api.dsl.LintOptions.isQuiet: boolean ()
com.android.build.api.dsl.LintOptions.isShowAll: boolean ()
com.android.build.api.dsl.LintOptions.isWarningsAsErrors: boolean ()
com.android.build.api.dsl.LintOptions.setAbortOnError: void (boolean)
com.android.build.api.dsl.LintOptions.setAbsolutePaths: void (boolean)
com.android.build.api.dsl.LintOptions.setBaselineFile: void (java.io.File)
com.android.build.api.dsl.LintOptions.setCheckAllWarnings: void (boolean)
com.android.build.api.dsl.LintOptions.setCheckDependencies: void (boolean)
com.android.build.api.dsl.LintOptions.setCheckGeneratedSources: void (boolean)
com.android.build.api.dsl.LintOptions.setCheckReleaseBuilds: void (boolean)
com.android.build.api.dsl.LintOptions.setCheckTestSources: void (boolean)
com.android.build.api.dsl.LintOptions.setExplainIssues: void (boolean)
com.android.build.api.dsl.LintOptions.setHtmlOutput: void (java.io.File)
com.android.build.api.dsl.LintOptions.setHtmlReport: void (boolean)
com.android.build.api.dsl.LintOptions.setIgnoreTestSources: void (boolean)
com.android.build.api.dsl.LintOptions.setIgnoreWarnings: void (boolean)
com.android.build.api.dsl.LintOptions.setLintConfig: void (java.io.File)
com.android.build.api.dsl.LintOptions.setNoLines: void (boolean)
com.android.build.api.dsl.LintOptions.setQuiet: void (boolean)
com.android.build.api.dsl.LintOptions.setSarifOutput: void (java.io.File)
com.android.build.api.dsl.LintOptions.setSarifReport: void (boolean)
com.android.build.api.dsl.LintOptions.setShowAll: void (boolean)
com.android.build.api.dsl.LintOptions.setTextOutput: void (java.io.File)
com.android.build.api.dsl.LintOptions.setTextReport: void (boolean)
com.android.build.api.dsl.LintOptions.setWarningsAsErrors: void (boolean)
com.android.build.api.dsl.LintOptions.setXmlOutput: void (java.io.File)
com.android.build.api.dsl.LintOptions.setXmlReport: void (boolean)
com.android.build.api.dsl.LintOptions.textOutput: void (java.io.File)
com.android.build.api.dsl.LintOptions.textOutput: void (java.lang.String)
com.android.build.api.dsl.LintOptions.warning: void (java.lang.String)
com.android.build.api.dsl.LintOptions.warning: void (java.lang.String[])
com.android.build.api.dsl.ManagedDevices
com.android.build.api.dsl.ManagedDevices.getDevices: org.gradle.api.ExtensiblePolymorphicDomainObjectContainer<com.android.build.api.dsl.Device> ()
com.android.build.api.dsl.ManagedDevices.getGroups: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.DeviceGroup> ()
com.android.build.api.dsl.ManagedVirtualDevice implements com.android.build.api.dsl.Device
com.android.build.api.dsl.ManagedVirtualDevice.getAbi: java.lang.String ()
com.android.build.api.dsl.ManagedVirtualDevice.getApiLevel: int ()
com.android.build.api.dsl.ManagedVirtualDevice.getDevice: java.lang.String ()
com.android.build.api.dsl.ManagedVirtualDevice.getRequire64Bit: boolean ()
com.android.build.api.dsl.ManagedVirtualDevice.getSystemImageSource: java.lang.String ()
com.android.build.api.dsl.ManagedVirtualDevice.setAbi: void (java.lang.String)
com.android.build.api.dsl.ManagedVirtualDevice.setApiLevel: void (int)
com.android.build.api.dsl.ManagedVirtualDevice.setDevice: void (java.lang.String)
com.android.build.api.dsl.ManagedVirtualDevice.setRequire64Bit: void (boolean)
com.android.build.api.dsl.ManagedVirtualDevice.setSystemImageSource: void (java.lang.String)
com.android.build.api.dsl.Ndk
com.android.build.api.dsl.Ndk.getAbiFilters: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.Ndk.getCFlags: java.lang.String ()
com.android.build.api.dsl.Ndk.getDebugSymbolLevel: java.lang.String ()
com.android.build.api.dsl.Ndk.getJobs: java.lang.Integer ()
com.android.build.api.dsl.Ndk.getLdLibs: java.util.List<java.lang.String> ()
com.android.build.api.dsl.Ndk.getModuleName: java.lang.String ()
com.android.build.api.dsl.Ndk.getStl: java.lang.String ()
com.android.build.api.dsl.Ndk.setCFlags: void (java.lang.String)
com.android.build.api.dsl.Ndk.setDebugSymbolLevel: void (java.lang.String)
com.android.build.api.dsl.Ndk.setJobs: void (java.lang.Integer)
com.android.build.api.dsl.Ndk.setModuleName: void (java.lang.String)
com.android.build.api.dsl.Ndk.setStl: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions
com.android.build.api.dsl.PackagingOptions.dex: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DexPackagingOptions, kotlin.Unit>)
com.android.build.api.dsl.PackagingOptions.doNotStrip: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.exclude: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.getDex: com.android.build.api.dsl.DexPackagingOptions ()
com.android.build.api.dsl.PackagingOptions.getDoNotStrip: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getExcludes: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getJniLibs: com.android.build.api.dsl.JniLibsPackagingOptions ()
com.android.build.api.dsl.PackagingOptions.getMerges: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getPickFirsts: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.PackagingOptions.getResources: com.android.build.api.dsl.ResourcesPackagingOptions ()
com.android.build.api.dsl.PackagingOptions.jniLibs: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.JniLibsPackagingOptions, kotlin.Unit>)
com.android.build.api.dsl.PackagingOptions.merge: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.pickFirst: void (java.lang.String)
com.android.build.api.dsl.PackagingOptions.resources: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ResourcesPackagingOptions, kotlin.Unit>)
com.android.build.api.dsl.PostProcessing
com.android.build.api.dsl.PostProcessing.consumerProguardFile: void (java.lang.Object)
com.android.build.api.dsl.PostProcessing.consumerProguardFiles: void (java.lang.Object[])
com.android.build.api.dsl.PostProcessing.getCodeShrinker: java.lang.String ()
com.android.build.api.dsl.PostProcessing.initWith: void (com.android.build.api.dsl.PostProcessing)
com.android.build.api.dsl.PostProcessing.isObfuscate: boolean ()
com.android.build.api.dsl.PostProcessing.isOptimizeCode: boolean ()
com.android.build.api.dsl.PostProcessing.isRemoveUnusedCode: boolean ()
com.android.build.api.dsl.PostProcessing.isRemoveUnusedResources: boolean ()
com.android.build.api.dsl.PostProcessing.proguardFile: void (java.lang.Object)
com.android.build.api.dsl.PostProcessing.proguardFiles: void (java.lang.Object[])
com.android.build.api.dsl.PostProcessing.setCodeShrinker: void (java.lang.String)
com.android.build.api.dsl.PostProcessing.setConsumerProguardFiles: void (java.util.List<?>)
com.android.build.api.dsl.PostProcessing.setObfuscate: void (boolean)
com.android.build.api.dsl.PostProcessing.setOptimizeCode: void (boolean)
com.android.build.api.dsl.PostProcessing.setProguardFiles: void (java.util.List<?>)
com.android.build.api.dsl.PostProcessing.setRemoveUnusedCode: void (boolean)
com.android.build.api.dsl.PostProcessing.setRemoveUnusedResources: void (boolean)
com.android.build.api.dsl.PostProcessing.setTestProguardFiles: void (java.util.List<?>)
com.android.build.api.dsl.PostProcessing.testProguardFile: void (java.lang.Object)
com.android.build.api.dsl.PostProcessing.testProguardFiles: void (java.lang.Object[])
com.android.build.api.dsl.PrefabPackagingOptions
com.android.build.api.dsl.PrefabPackagingOptions.getHeaderOnly: boolean ()
com.android.build.api.dsl.PrefabPackagingOptions.getHeaders: java.lang.String ()
com.android.build.api.dsl.PrefabPackagingOptions.getLibraryName: java.lang.String ()
com.android.build.api.dsl.PrefabPackagingOptions.getName: java.lang.String ()
com.android.build.api.dsl.PrefabPackagingOptions.setHeaderOnly: void (boolean)
com.android.build.api.dsl.PrefabPackagingOptions.setHeaders: void (java.lang.String)
com.android.build.api.dsl.PrefabPackagingOptions.setLibraryName: void (java.lang.String)
com.android.build.api.dsl.PrefabPackagingOptions.setName: void (java.lang.String)
com.android.build.api.dsl.ProductFlavor.getDimension: java.lang.String ()
com.android.build.api.dsl.ProductFlavor.getMatchingFallbacks: java.util.List<java.lang.String> ()
com.android.build.api.dsl.ProductFlavor.setDimension: java.lang.Void (java.lang.String)
com.android.build.api.dsl.ProductFlavor.setDimension: void (java.lang.String)
com.android.build.api.dsl.ProductFlavor.setMatchingFallbacks: void (java.lang.String[])
com.android.build.api.dsl.ProductFlavor.setMatchingFallbacks: void (java.util.List<java.lang.String>)
com.android.build.api.dsl.ResourcesPackagingOptions
com.android.build.api.dsl.ResourcesPackagingOptions.getExcludes: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ResourcesPackagingOptions.getMerges: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.ResourcesPackagingOptions.getPickFirsts: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.SdkComponents
com.android.build.api.dsl.SdkComponents.getAdb: org.gradle.api.provider.Provider<org.gradle.api.file.RegularFile> ()
com.android.build.api.dsl.SdkComponents.getBootClasspath: org.gradle.api.provider.Provider<java.util.List<org.gradle.api.file.RegularFile>> ()
com.android.build.api.dsl.SdkComponents.getNdkDirectory: org.gradle.api.provider.Provider<org.gradle.api.file.Directory> ()
com.android.build.api.dsl.SdkComponents.getSdkDirectory: org.gradle.api.provider.Provider<org.gradle.api.file.Directory> ()
com.android.build.api.dsl.Shaders
com.android.build.api.dsl.Shaders.getGlslcArgs: java.util.List<java.lang.String> ()
com.android.build.api.dsl.Shaders.getScopedGlslcArgs: com.google.common.collect.ListMultimap<java.lang.String, java.lang.String> ()
com.android.build.api.dsl.Shaders.glslcArgs: void (java.lang.String[])
com.android.build.api.dsl.Shaders.glslcScopedArgs: void (java.lang.String, java.lang.String[])
com.android.build.api.dsl.SigningConfig.getKeyAlias: java.lang.String ()
com.android.build.api.dsl.SigningConfig.getKeyPassword: java.lang.String ()
com.android.build.api.dsl.SigningConfig.getStoreFile: java.io.File ()
com.android.build.api.dsl.SigningConfig.getStorePassword: java.lang.String ()
com.android.build.api.dsl.SigningConfig.getStoreType: java.lang.String ()
com.android.build.api.dsl.SigningConfig.initWith: void (com.android.build.api.dsl.SigningConfig)
com.android.build.api.dsl.SigningConfig.setKeyAlias: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setKeyPassword: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setStoreFile: void (java.io.File)
com.android.build.api.dsl.SigningConfig.setStorePassword: void (java.lang.String)
com.android.build.api.dsl.SigningConfig.setStoreType: void (java.lang.String)
com.android.build.api.dsl.Split.exclude: void (java.lang.String[])
com.android.build.api.dsl.Split.include: void (java.lang.String[])
com.android.build.api.dsl.Split.isEnable: boolean ()
com.android.build.api.dsl.Split.reset: void ()
com.android.build.api.dsl.Split.setEnable: void (boolean)
com.android.build.api.dsl.Splits
com.android.build.api.dsl.Splits.abi: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.AbiSplit, kotlin.Unit>)
com.android.build.api.dsl.Splits.density: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.DensitySplit, kotlin.Unit>)
com.android.build.api.dsl.Splits.getAbi: com.android.build.api.dsl.AbiSplit ()
com.android.build.api.dsl.Splits.getAbiFilters: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.Splits.getDensity: com.android.build.api.dsl.DensitySplit ()
com.android.build.api.dsl.Splits.getDensityFilters: java.util.Collection<java.lang.String> ()
com.android.build.api.dsl.StoreArchive
com.android.build.api.dsl.StoreArchive.getEnable: java.lang.Boolean ()
com.android.build.api.dsl.StoreArchive.setEnable: void (java.lang.Boolean)
com.android.build.api.dsl.TestBaseFlavor.getMaxSdk: java.lang.Integer ()
com.android.build.api.dsl.TestBaseFlavor.getTargetSdk: java.lang.Integer ()
com.android.build.api.dsl.TestBaseFlavor.getTargetSdkPreview: java.lang.String ()
com.android.build.api.dsl.TestBaseFlavor.maxSdkVersion: void (int)
com.android.build.api.dsl.TestBaseFlavor.setMaxSdk: void (java.lang.Integer)
com.android.build.api.dsl.TestBaseFlavor.setTargetSdk: void (java.lang.Integer)
com.android.build.api.dsl.TestBaseFlavor.setTargetSdkPreview: void (java.lang.String)
com.android.build.api.dsl.TestBaseFlavor.setTargetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.TestBaseFlavor.targetSdkVersion: void (int)
com.android.build.api.dsl.TestBaseFlavor.targetSdkVersion: void (java.lang.String)
com.android.build.api.dsl.TestBuildType.isCrunchPngs: java.lang.Boolean ()
com.android.build.api.dsl.TestBuildType.isDebuggable: boolean ()
com.android.build.api.dsl.TestBuildType.setCrunchPngs: void (java.lang.Boolean)
com.android.build.api.dsl.TestBuildType.setDebuggable: void (boolean)
com.android.build.api.dsl.TestExtension.getTargetProjectPath: java.lang.String ()
com.android.build.api.dsl.TestExtension.setTargetProjectPath: void (java.lang.String)
com.android.build.api.dsl.TestFixtures
com.android.build.api.dsl.TestFixtures.getAndroidResources: boolean ()
com.android.build.api.dsl.TestFixtures.getEnable: boolean ()
com.android.build.api.dsl.TestFixtures.setAndroidResources: void (boolean)
com.android.build.api.dsl.TestFixtures.setEnable: void (boolean)
com.android.build.api.dsl.TestOptions
com.android.build.api.dsl.TestOptions.emulatorSnapshots: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.EmulatorSnapshots, kotlin.Unit>)
com.android.build.api.dsl.TestOptions.failureRetention: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.FailureRetention, kotlin.Unit>)
com.android.build.api.dsl.TestOptions.getAnimationsDisabled: boolean ()
com.android.build.api.dsl.TestOptions.getDeviceGroups: org.gradle.api.NamedDomainObjectContainer<com.android.build.api.dsl.DeviceGroup> ()
com.android.build.api.dsl.TestOptions.getDevices: org.gradle.api.ExtensiblePolymorphicDomainObjectContainer<com.android.build.api.dsl.Device> ()
com.android.build.api.dsl.TestOptions.getEmulatorSnapshots: com.android.build.api.dsl.EmulatorSnapshots ()
com.android.build.api.dsl.TestOptions.getExecution: java.lang.String ()
com.android.build.api.dsl.TestOptions.getFailureRetention: com.android.build.api.dsl.FailureRetention ()
com.android.build.api.dsl.TestOptions.getManagedDevices: com.android.build.api.dsl.ManagedDevices ()
com.android.build.api.dsl.TestOptions.getReportDir: java.lang.String ()
com.android.build.api.dsl.TestOptions.getResultsDir: java.lang.String ()
com.android.build.api.dsl.TestOptions.getUnitTests: com.android.build.api.dsl.UnitTestOptions ()
com.android.build.api.dsl.TestOptions.managedDevices: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ManagedDevices, kotlin.Unit>)
com.android.build.api.dsl.TestOptions.setAnimationsDisabled: void (boolean)
com.android.build.api.dsl.TestOptions.setExecution: void (java.lang.String)
com.android.build.api.dsl.TestOptions.setReportDir: void (java.lang.String)
com.android.build.api.dsl.TestOptions.setResultsDir: void (java.lang.String)
com.android.build.api.dsl.TestOptions.unitTests: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.UnitTestOptions, kotlin.Unit>)
com.android.build.api.dsl.TestVariantDimension.getMultiDexEnabled: java.lang.Boolean ()
com.android.build.api.dsl.TestVariantDimension.getSigningConfig: com.android.build.api.dsl.ApkSigningConfig ()
com.android.build.api.dsl.TestVariantDimension.setMultiDexEnabled: void (java.lang.Boolean)
com.android.build.api.dsl.TestVariantDimension.setSigningConfig: void (com.android.build.api.dsl.ApkSigningConfig)
com.android.build.api.dsl.TestedExtension
com.android.build.api.dsl.TestedExtension.getTestBuildType: java.lang.String ()
com.android.build.api.dsl.TestedExtension.getTestFixtures: com.android.build.api.dsl.TestFixtures ()
com.android.build.api.dsl.TestedExtension.getTestNamespace: java.lang.String ()
com.android.build.api.dsl.TestedExtension.setTestBuildType: void (java.lang.String)
com.android.build.api.dsl.TestedExtension.setTestNamespace: void (java.lang.String)
com.android.build.api.dsl.TestedExtension.testFixtures: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.TestFixtures, kotlin.Unit>)
com.android.build.api.dsl.UnitTestOptions
com.android.build.api.dsl.UnitTestOptions.all: void (kotlin.jvm.functions.Function1<? super org.gradle.api.tasks.testing.Test, kotlin.Unit>)
com.android.build.api.dsl.UnitTestOptions.isIncludeAndroidResources: boolean ()
com.android.build.api.dsl.UnitTestOptions.isReturnDefaultValues: boolean ()
com.android.build.api.dsl.UnitTestOptions.setIncludeAndroidResources: void (boolean)
com.android.build.api.dsl.UnitTestOptions.setReturnDefaultValues: void (boolean)
com.android.build.api.dsl.VariantDimension.addManifestPlaceholders: void (java.util.Map<java.lang.String, ?>)
com.android.build.api.dsl.VariantDimension.buildConfigField: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.api.dsl.VariantDimension.externalNativeBuild: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.ExternalNativeBuildOptions, kotlin.Unit>)
com.android.build.api.dsl.VariantDimension.getExternalNativeBuild: com.android.build.api.dsl.ExternalNativeBuildOptions ()
com.android.build.api.dsl.VariantDimension.getManifestPlaceholders: java.util.Map<java.lang.String, java.lang.Object> ()
com.android.build.api.dsl.VariantDimension.getMultiDexKeepFile: java.io.File ()
com.android.build.api.dsl.VariantDimension.getMultiDexKeepProguard: java.io.File ()
com.android.build.api.dsl.VariantDimension.getNdk: com.android.build.api.dsl.Ndk ()
com.android.build.api.dsl.VariantDimension.getProguardFiles: java.util.List<java.io.File> ()
com.android.build.api.dsl.VariantDimension.getShaders: com.android.build.api.dsl.Shaders ()
com.android.build.api.dsl.VariantDimension.getTestProguardFiles: java.util.List<java.io.File> ()
com.android.build.api.dsl.VariantDimension.ndk: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Ndk, kotlin.Unit>)
com.android.build.api.dsl.VariantDimension.proguardFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.VariantDimension.proguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.VariantDimension.resValue: void (java.lang.String, java.lang.String, java.lang.String)
com.android.build.api.dsl.VariantDimension.setManifestPlaceholders: java.lang.Void (java.util.Map<java.lang.String, ?>)
com.android.build.api.dsl.VariantDimension.setMultiDexKeepFile: void (java.io.File)
com.android.build.api.dsl.VariantDimension.setMultiDexKeepProguard: void (java.io.File)
com.android.build.api.dsl.VariantDimension.setProguardFiles: java.lang.Object (java.lang.Iterable<?>)
com.android.build.api.dsl.VariantDimension.shaders: void (kotlin.jvm.functions.Function1<? super com.android.build.api.dsl.Shaders, kotlin.Unit>)
com.android.build.api.dsl.VariantDimension.testProguardFile: java.lang.Object (java.lang.Object)
com.android.build.api.dsl.VariantDimension.testProguardFiles: java.lang.Object (java.lang.Object[])
com.android.build.api.dsl.VectorDrawables
com.android.build.api.dsl.VectorDrawables.generatedDensities: void (java.lang.String[])
com.android.build.api.dsl.VectorDrawables.getGeneratedDensities: java.util.Set<java.lang.String> ()
com.android.build.api.dsl.VectorDrawables.getUseSupportLibrary: java.lang.Boolean ()
com.android.build.api.dsl.VectorDrawables.setUseSupportLibrary: void (java.lang.Boolean)
com.android.build.api.transform.Transform.applyToVariant: boolean (com.android.build.api.variant.VariantInfo)
com.android.build.api.variant.AarMetadata.getMinAgpVersion: org.gradle.api.provider.Property<java.lang.String> ()
com.android.build.api.variant.AndroidComponentsExtension.getSdkComponents: com.android.build.api.dsl.SdkComponents ()
com.android.build.api.variant.AndroidComponentsExtension.registerExtension: void (com.android.build.api.variant.DslExtension, kotlin.jvm.functions.Function1<? super com.android.build.api.variant.VariantExtensionConfig<VariantT>, ? extends com.android.build.api.variant.VariantExtension>)
com.android.build.api.variant.AndroidComponentsExtension.registerSourceType: void (java.lang.String)
com.android.build.api.variant.AndroidResources.getNoCompress: org.gradle.api.provider.ListProperty<java.lang.String> ()
com.android.build.api.variant.AnnotationProcessor
com.android.build.api.variant.AnnotationProcessor.getArgumentProviders: java.util.List<org.gradle.process.CommandLineArgumentProvider> ()
com.android.build.api.variant.AnnotationProcessor.getArguments: org.gradle.api.provider.MapProperty<java.lang.String, java.lang.String> ()
com.android.build.api.variant.AnnotationProcessor.getClassNames: org.gradle.api.provider.ListProperty<java.lang.String> ()
com.android.build.api.variant.ApplicationVariant.getBundleConfig: com.android.build.api.variant.BundleConfig ()
com.android.build.api.variant.BundleConfig
com.android.build.api.variant.BundleConfig.getCodeTransparency: com.android.build.api.variant.CodeTransparency ()
com.android.build.api.variant.CodeTransparency
com.android.build.api.variant.CodeTransparency.setSigningConfig: void (com.android.build.api.dsl.SigningConfig)
com.android.build.api.variant.Component.getInstrumentation: com.android.build.api.variant.Instrumentation ()
com.android.build.api.variant.Component.getJavaCompilation: com.android.build.api.variant.JavaCompilation ()
com.android.build.api.variant.Component.getSources: com.android.build.api.variant.Sources ()
com.android.build.api.variant.DslExtension
com.android.build.api.variant.DslExtension$Builder
com.android.build.api.variant.DslExtension$Builder.<init>: com.android.build.api.variant.DslExtension$Builder (java.lang.String)
com.android.build.api.variant.DslExtension$Builder.build: com.android.build.api.variant.DslExtension ()
com.android.build.api.variant.DslExtension$Builder.extendBuildTypeWith: com.android.build.api.variant.DslExtension$Builder (java.lang.Class<?>)
com.android.build.api.variant.DslExtension$Builder.extendProductFlavorWith: com.android.build.api.variant.DslExtension$Builder (java.lang.Class<?>)
com.android.build.api.variant.DslExtension$Builder.extendProjectWith: com.android.build.api.variant.DslExtension$Builder (java.lang.Class<?>)
com.android.build.api.variant.DslExtension.<init>: com.android.build.api.variant.DslExtension (java.lang.String, java.lang.Class, java.lang.Class, java.lang.Class, kotlin.jvm.internal.DefaultConstructorMarker)
com.android.build.api.variant.DslExtension.getBuildTypeExtensionType: java.lang.Class<?> ()
com.android.build.api.variant.DslExtension.getDslName: java.lang.String ()
com.android.build.api.variant.DslExtension.getProductFlavorExtensionType: java.lang.Class<?> ()
com.android.build.api.variant.DslExtension.getProjectExtensionType: java.lang.Class<?> ()
com.android.build.api.variant.DslLifecycle
com.android.build.api.variant.DslLifecycle.finalizeDsl: void (kotlin.jvm.functions.Function1<? super T, kotlin.Unit>)
com.android.build.api.variant.DslLifecycle.finalizeDsl: void (org.gradle.api.Action<T>)
com.android.build.api.variant.HasTestFixtures
com.android.build.api.variant.HasTestFixtures.getTestFixtures: com.android.build.api.variant.TestFixtures ()
com.android.build.api.variant.HasTestFixturesBuilder
com.android.build.api.variant.HasTestFixturesBuilder.getEnableTestFixtures: boolean ()
com.android.build.api.variant.HasTestFixturesBuilder.setEnableTestFixtures: void (boolean)
com.android.build.api.variant.Instrumentation
com.android.build.api.variant.Instrumentation.getExcludes: org.gradle.api.provider.SetProperty<java.lang.String> ()
com.android.build.api.variant.Instrumentation.setAsmFramesComputationMode: void (com.android.build.api.instrumentation.FramesComputationMode)
com.android.build.api.variant.Instrumentation.transformClassesWith: void (java.lang.Class<? extends com.android.build.api.instrumentation.AsmClassVisitorFactory<ParamT>>, com.android.build.api.instrumentation.InstrumentationScope, kotlin.jvm.functions.Function1<? super ParamT, kotlin.Unit>)
com.android.build.api.variant.JavaCompilation
com.android.build.api.variant.JavaCompilation.getAnnotationProcessor: com.android.build.api.variant.AnnotationProcessor ()
com.android.build.api.variant.LintLifecycleExtension implements com.android.build.api.variant.DslLifecycle
com.android.build.api.variant.SigningConfig.setConfig: void (com.android.build.api.dsl.SigningConfig)
com.android.build.api.variant.SourceDirectories implements org.gradle.api.Named
com.android.build.api.variant.SourceDirectories.add: void (org.gradle.api.tasks.TaskProvider<T>, kotlin.jvm.functions.Function1<? super T, ? extends org.gradle.api.provider.Provider<org.gradle.api.file.Directory>>)
com.android.build.api.variant.SourceDirectories.addSrcDir: void (java.lang.String)
com.android.build.api.variant.SourceDirectories.getAll: org.gradle.api.provider.Provider<java.util.List<org.gradle.api.file.Directory>> ()
com.android.build.api.variant.Sources
com.android.build.api.variant.Sources.getByName: com.android.build.api.variant.SourceDirectories (java.lang.String)
com.android.build.api.variant.Sources.getJava: com.android.build.api.variant.SourceDirectories ()
com.android.build.api.variant.TestFixtures implements com.android.build.api.variant.GeneratesAar, com.android.build.api.variant.HasAndroidResources, com.android.build.api.variant.Component
com.android.build.api.variant.TestFixtures.getNamespace: org.gradle.api.provider.Provider<java.lang.String> ()
com.android.build.api.variant.Variant.getExperimentalProperties: org.gradle.api.provider.MapProperty<java.lang.String, java.lang.Object> ()
com.android.build.api.variant.Variant.getNestedComponents: java.util.List<com.android.build.api.variant.Component> ()
com.android.build.api.variant.VariantExtensionConfig
com.android.build.api.variant.VariantExtensionConfig.buildTypeExtension: T (java.lang.Class<T>)
com.android.build.api.variant.VariantExtensionConfig.getVariant: VariantT ()
com.android.build.api.variant.VariantExtensionConfig.productFlavorsExtensions: java.util.List<T> (java.lang.Class<T>)
com.android.build.api.variant.VariantExtensionConfig.projectExtension: T (java.lang.Class<T>)
