<root>
  <item name='com.intellij.openapi.application.Application T runWriteAction(com.intellij.openapi.util.Computable&lt;T&gt;)'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application T runWriteAction(com.intellij.openapi.util.Computable&lt;T&gt;) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application T runWriteAction(com.intellij.openapi.util.Computable)'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application T runWriteAction(com.intellij.openapi.util.Computable) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application T runWriteAction(com.intellij.openapi.util.ThrowableComputable&lt;T,E&gt;)'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application T runWriteAction(com.intellij.openapi.util.ThrowableComputable&lt;T,E&gt;) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application T runWriteAction(com.intellij.openapi.util.ThrowableComputable)'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application T runWriteAction(com.intellij.openapi.util.ThrowableComputable) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item
      name='com.intellij.openapi.application.Application java.util.concurrent.Future&lt;?&gt; executeOnPooledThread(java.lang.Runnable) 0'>
    <annotation name='com.android.annotations.concurrency.WorkerThread' />
  </item>
  <item
      name='com.intellij.openapi.application.Application java.util.concurrent.Future&lt;T&gt; executeOnPooledThread(java.util.concurrent.Callable&lt;T&gt;) 0'>
    <annotation name='com.android.annotations.concurrency.WorkerThread' />
  </item>
  <item name='com.intellij.openapi.application.Application void invokeAndWait(java.lang.Runnable) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application void invokeAndWait(java.lang.Runnable, com.intellij.openapi.application.ModalityState) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application void invokeLater(java.lang.Runnable) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application void invokeLater(java.lang.Runnable, com.intellij.openapi.application.ModalityState) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application void invokeLater(java.lang.Runnable, com.intellij.openapi.application.ModalityState, com.intellij.openapi.util.Condition) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application void invokeLater(java.lang.Runnable, com.intellij.openapi.util.Condition) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application void runWriteAction(java.lang.Runnable)'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
  <item name='com.intellij.openapi.application.Application void runWriteAction(java.lang.Runnable) 0'>
    <annotation name='com.android.annotations.concurrency.UiThread' />
  </item>
</root>
