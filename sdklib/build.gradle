import com.google.common.collect.ImmutableMap

apply plugin: 'java'
apply plugin: 'jacoco-tools-base'

group = 'com.android.tools'
archivesBaseName = 'sdklib'
version = rootProject.ext.baseVersion

dependencies {
    compile project(':base:layoutlib-api')
    compile project(':base:dvlib')
    compile project(':base:repository')

    compile libs.gson
    compile libs.apache_compress
    compile libs.apache_httpmime
    compile libs.apache_httpcore

    testCompile libs.junit
    testCompile libs.truth
    testCompile project(':base:testutils')
    testCompile testFixtures(project(":base:repository"))
}

test {
  testLogging {
    showStandardStreams = true
    showStackTraces = true
    exceptionFormat = "full"
  }
}

sourceSets {
    main.resources.srcDir 'src/main/java'
    test.resources.srcDir 'src/test/java'
}


def offline_repo_files = ["extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2",
                          "extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2"]

def offline_sdk_targets = [["macosx", "64", "darwin-x86_64"],
                           ["macosx", "32", "darwin-x86"],
                           ["windows", "64", "windows-x86_64"],
                           ["windows", "32", "windows"],
                           ["linux", "64", "linux-x86_64"],
                           ["linux", "32", "linux-x86"]]

// Parent task to update the packages in prebuilts/tools/*/offline-sdk
// based on the values of offline_repo_files and offline_sdk_targets above.
task updateOfflineRepo {}

offline_sdk_targets.each { config ->
    def os = config[0]
    def arch = config[1]
    def dest = "$rootDir/../prebuilts/tools/" + config[2] + "/offline-sdk"
    task "updateOfflineRepo$os$arch"(type: JavaExec) {
        classpath = sourceSets.main.runtimeClasspath
        main = "com.android.sdklib.tool.OfflineRepoCreator"
        args = ["--dest", dest] + offline_repo_files
        environment("REPO_OS_OVERRIDE", os)
        systemProperties(ImmutableMap.of("os.arch", arch))
    }
    updateOfflineRepo.dependsOn "updateOfflineRepo$os$arch"
}

project.ext.pomName = 'Android Tools sdklib'
project.ext.pomDesc = 'A library to parse and download the Android SDK.'

apply from: "$rootDir/buildSrc/base/publish.gradle"
apply from: "$rootDir/buildSrc/base/javadoc.gradle"
