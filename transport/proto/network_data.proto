/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package profiler.proto;
option java_package = "com.android.tools.profiler.proto";
option java_outer_classname = "Network";

message NetworkSpeedData {
  int64 throughput = 1;  // bytes / sec
}

message NetworkConnectionData {
  int32 num_connections = 1;
}

message NetworkHttpConnectionData {
  message HttpRequestStarted {
    string url = 1;
    string trace = 2;
    // Header fields associated with this request. See also:
    // https://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Request_fields.
    string fields = 3;
    string method = 4;
  }

  message HttpRequestCompleted {
    // An unique ID for metching the contents of the http request body.
    string payload_id = 1;
    // The size of the request body in bytes.
    int32 payload_size = 2;
  }

  message HttpResponseStarted {
    // Header fields associated with this response. See also:
    // https://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Response_fields.
    string fields = 1;
  }

  message HttpResponseCompleted {
    // An unique ID for metching the contents of the http response body.
    string payload_id = 1;
    // The size of the request body in bytes.
    int32 payload_size = 2;
  }

  message HttpClosed {
    // Indicates whether the http connection was completed or aborted.
    bool completed = 1;
  }

  oneof union {
    HttpRequestStarted http_request_started = 1;
    HttpRequestCompleted http_request_completed = 2;
    HttpResponseStarted http_response_started = 3;
    HttpResponseCompleted http_response_completed = 4;
    HttpClosed http_closed = 5;
  }
}

message NetworkHttpThreadData {
  // ID of the thread obtained from Java, which is different from the thread ID
  // obtained in a JNI context.
  int64 id = 1;
  // Name of the thread as obtained by Thread#getName()
  string name = 2;
}

message NetworkTypeData {
  enum NetworkType {
    UNSPECIFIED_NETWORK_TYPE = 0;
    MOBILE = 1;
    WIFI = 2;
  }
  NetworkType network_type = 1;
}