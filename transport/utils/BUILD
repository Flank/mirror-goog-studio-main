load("//tools/base/bazel:android.bzl", "select_android")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "utils",
    srcs = [
        "activity_manager.cc",
        "background_queue.cc",
        "bash_command.cc",
        "current_process.cc",
        "daemon_config.cc",
        "file_cache.cc",
        "file_reader.cc",
        "fs/dir.cc",
        "fs/disk_file_system.cc",
        "fs/file.cc",
        "fs/file_system.cc",
        "fs/memory_file_system.cc",
        "fs/path.cc",
        "memory_map.cc",
        "native_backtrace.cc",
        "nonblocking_command_runner.cc",
        "installer.cc",
        "package_manager.cc",
        "procfs_files.cc",
        "socket_utils.cc",
        "stopwatch.cc",
        "termination_service.cc",
        "tokenizer.cc",
        "trace.cc",
        "uid_fetcher.cc",
    ] + select({
        "//tools/base/bazel:darwin": [
            "clock.mac.cc",
            "current_process.mac.cc",
            "filesystem_notifier.mac.cc",
            "thread_name.mac.cc",
            "uid_fetcher.mac.cc",
        ],
        "//conditions:default": [
            "clock.cc",
            "current_process.linux.cc",
            "filesystem_notifier.cc",
            "thread_name.cc",
            "uid_fetcher.linux.cc",
        ],
    }) + select_android(
        [
            "bash_command.android.cc",
            "device_info.android.cc",
            "log.android.cc",
            "nonblocking_command_runner.android.cc",
            "process_manager.android.cc",
        ],
        [
            "bash_command.host.cc",
            "device_info.host.cc",
            "log.cc",
            "nonblocking_command_runner.host.cc",
            "process_manager.host.cc",
        ],
    ),
    hdrs = [
        "activity_manager.h",
        "android_studio_version.h",
        "background_queue.h",
        "bash_command.h",
        "circular_buffer.h",
        "clock.h",
        "count_down_latch.h",
        "current_process.h",
        "daemon_config.h",
        "device_info.h",
        "device_info_helper.h",
        "fake_clock.h",
        "file_cache.h",
        "file_reader.h",
        "filesystem_notifier.h",
        "fs/dir.h",
        "fs/disk_file_system.h",
        "fs/file.h",
        "fs/file_system.h",
        "fs/memory_file_system.h",
        "fs/path.h",
        "installer.h",
        "log.h",
        "memory_map.h",
        "native_backtrace.h",
        "nonblocking_command_runner.h",
        "package_manager.h",
        "process_manager.h",
        "procfs_files.h",
        "producer_consumer_queue.h",
        "shared_mutex.h",
        "socket_utils.h",
        "stopwatch.h",
        "termination_service.h",
        "thread_name.h",
        "time_value_buffer.h",
        "tokenizer.h",
        "trace.h",
        "trie.h",
        "uid_fetcher.h",
    ],
    copts = [
        "-Itools/base/transport",
        "-I$(GENDIR)/tools/base/transport",
    ],
    tags = ["no_windows"],
    deps = [
        "//tools/base/transport/proto:cc_proto",
    ],
)

cc_test(
    name = "utils_test",
    srcs = [
        "activity_manager_test.cc",
        "background_queue_test.cc",
        "circular_buffer_test.cc",
        "clock_test.cc",
        "count_down_latch_test.cc",
        "current_process_test.cc",
        "file_cache_test.cc",
        "file_reader_test.cc",
        "memory_map_test.cc",
        "native_backtrace_test.cc",
        "producer_consumer_queue_test.cc",
        "shared_mutex_test.cc",
        "stopwatch_test.cc",
        "termination_service_test.cc",
        "time_value_buffer_test.cc",
        "tokenizer_test.cc",
        "trie_test.cc",
        "uid_fetcher_test.cc",
    ],
    copts = [
        "-Itools/base/transport/tests",
        "-Itools/base/transport",
        "-I$(GENDIR)/tools/base/transport",
    ],
    data = [
        "//tools/base/transport/tests/testdata",
    ],
    linkstatic = 1,
    tags = ["no_windows"],
    deps = [
        ":utils",
        "//external:gmock_main",
        "//tools/base/transport/daemon",
        "//tools/base/transport/proto:cc_proto",
        "//tools/base/transport/tests/test:testutils",
    ],
)

# Unit test for the device variant of NonblockingCommandRunner rather than the
# mock version in the host variant.
cc_test(
    name = "nonblocking_command_runner_test",
    srcs = [
        "log.cc",
        "log.h",
        "nonblocking_command_runner.android.cc",
        "nonblocking_command_runner.cc",
        "nonblocking_command_runner.h",
        "nonblocking_command_runner_test.cc",
        "thread_name.h",
    ] + select({
        "//tools/base/bazel:darwin": [
            "thread_name.mac.cc",
        ],
        "//conditions:default": [
            "thread_name.cc",
        ],
    }),
    copts = [
        "-Itools/base/transport",
    ],
    linkstatic = 1,
    tags = ["no_windows"],
    deps = [
        "//external:gmock_main",
    ],
)
